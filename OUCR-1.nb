(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    508152,       9621]
NotebookOptionsPosition[    504006,       9513]
NotebookOutlinePosition[    504363,       9529]
CellTagsIndexPosition[    504320,       9526]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"NetModel", "[", 
  RowBox[{
  "\"\<LeNet Trained on MNIST Data\>\"", ",", 
   "\"\<ConstructionNotebook\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.707230775675548*^9, 
  3.7072307901069803`*^9}},ExpressionUUID->"ba0b4e08-0806-43f8-ae20-\
1c0514d07db9"],

Cell[BoxData[
 TemplateBox[{FrontEndObject[
    LinkObject["xfsfp_shm", 3, 1]],22,
   "FrontEndObject[LinkObject[\"xfsfp_shm\", 3, 1]]","22","\"Untitled-2\""},
  "NotebookObjectUnsaved"]], "Output",
 CellChangeTimes->{
  3.707230792506044*^9},ExpressionUUID->"2b731dba-b46f-4adf-8a95-\
8b74bbd328d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"uninit", "=", 
  RowBox[{"NetChain", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"20", ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "5"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PoolingLayer", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"50", ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "5"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PoolingLayer", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"FlattenLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"DotPlusLayer", "[", "500", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"DotPlusLayer", "[", "512", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"SoftmaxLayer", "[", "]"}]}], "\[IndentingNewLine]", "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{"\"\<Output\>\"", "\[Rule]", 
     RowBox[{"NetDecoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Class\>\"", ",", 
        RowBox[{"FromCharacterCode", "/@", 
         RowBox[{"Range", "[", 
          RowBox[{"16^^4E00", ",", "16^^4FFF"}], "]"}]}]}], "}"}], "]"}]}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", 
     RowBox[{"NetEncoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Image\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"28", ",", "28"}], "}"}], ",", "\"\<Grayscale\>\""}], "}"}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7072308017617083`*^9, 3.7072308377239656`*^9}, {
  3.7072380833282757`*^9, 3.7072380904854307`*^9}, {3.707238455029772*^9, 
  3.707238505309518*^9}},ExpressionUUID->"4eecd6d3-d1c7-4658-8456-\
0a32c71246bb"],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetChain", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`Private`NetChain`assoc3 = Association[
        "Type" -> "Chain", "Nodes" -> 
         Association[
          "1" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{20, 1, 5, 5}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`Nullable[
                 NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]], 
             "Parameters" -> 
             Association[
              "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               1, "$GroupNumber" -> 1, "$InputSize" -> {28, 28}, 
               "$OutputSize" -> {24, 24}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{20, 24, 24}, NeuralNetworks`RealT]]], 
           "2" -> Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {20, 24, 24}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{20, 24, 24}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{20, 24, 24}, NeuralNetworks`RealT]]], 
           "3" -> Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
               "PaddingSize" -> {0, 0}, "Function" -> Max, "Dimensionality" -> 
               2, "Channels" -> 20, "$InputSize" -> {24, 24}, 
               "$OutputSize" -> {12, 12}, "$MXPoolingConvention" -> "valid", 
               "$MXGlobalPool" -> False], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{20, 24, 24}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{20, 12, 12}, NeuralNetworks`RealT]]], 
           "4" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{50, 20, 5, 5}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`Nullable[
                 NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]]], 
             "Parameters" -> 
             Association[
              "OutputChannels" -> 50, "KernelSize" -> {5, 5}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               20, "$GroupNumber" -> 1, "$InputSize" -> {12, 12}, 
               "$OutputSize" -> {8, 8}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{20, 12, 12}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]]], 
           "5" -> Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {50, 8, 8}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{50, 8, 8}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]]], 
           "6" -> Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
               "PaddingSize" -> {0, 0}, "Function" -> Max, "Dimensionality" -> 
               2, "Channels" -> 50, "$InputSize" -> {8, 8}, 
               "$OutputSize" -> {4, 4}, "$MXPoolingConvention" -> "valid", 
               "$MXGlobalPool" -> False], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{50, 8, 8}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{50, 4, 4}, NeuralNetworks`RealT]]], 
           "7" -> Association[
            "Type" -> "Flatten", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Level" -> DirectedInfinity[1], "OutputSize" -> {800}, 
               "$InputSize" -> {50, 4, 4}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{50, 4, 4}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]]], "8" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{500, 800}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`Nullable[
                 NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {500}, "$OutputSize" -> 500, "$InputSize" -> 
               800, "$InputDimensions" -> {800}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], "9" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {500}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], "10" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`TensorT[{512, 500}, NeuralNetworks`RealT], 
               "Biases" -> NeuralNetworks`Nullable[
                 NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {512}, "$OutputSize" -> 512, "$InputSize" -> 
               500, "$InputDimensions" -> {500}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], "11" -> 
           Association[
            "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
             Association[], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]]], 
         "Edges" -> {
          NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Inputs", "Input"], 
           NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "10", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Outputs", "Output"] -> 
           NeuralNetworks`NetPath["Nodes", "11", "Outputs", "Output"]}, 
         "Inputs" -> Association["Input" -> NetEncoder["Image", 
             Association[
             "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
              "ColorChannels" -> 1, "MeanImage" -> None], 
             NeuralNetworks`TensorT[{1, 28, 28}, NeuralNetworks`RealT]]], 
         "Outputs" -> Association["Output" -> NetDecoder["Class", 
             Association[
             "Labels" -> {
               "\:4e00", "\:4e01", "\:4e02", "\:4e03", "\:4e04", "\:4e05", 
                "\:4e06", "\:4e07", "\:4e08", "\:4e09", "\:4e0a", "\:4e0b", 
                "\:4e0c", "\:4e0d", "\:4e0e", "\:4e0f", "\:4e10", "\:4e11", 
                "\:4e12", "\:4e13", "\:4e14", "\:4e15", "\:4e16", "\:4e17", 
                "\:4e18", "\:4e19", "\:4e1a", "\:4e1b", "\:4e1c", "\:4e1d", 
                "\:4e1e", "\:4e1f", "\:4e20", "\:4e21", "\:4e22", "\:4e23", 
                "\:4e24", "\:4e25", "\:4e26", "\:4e27", "\:4e28", "\:4e29", 
                "\:4e2a", "\:4e2b", "\:4e2c", "\:4e2d", "\:4e2e", "\:4e2f", 
                "\:4e30", "\:4e31", "\:4e32", "\:4e33", "\:4e34", "\:4e35", 
                "\:4e36", "\:4e37", "\:4e38", "\:4e39", "\:4e3a", "\:4e3b", 
                "\:4e3c", "\:4e3d", "\:4e3e", "\:4e3f", "\:4e40", "\:4e41", 
                "\:4e42", "\:4e43", "\:4e44", "\:4e45", "\:4e46", "\:4e47", 
                "\:4e48", "\:4e49", "\:4e4a", "\:4e4b", "\:4e4c", "\:4e4d", 
                "\:4e4e", "\:4e4f", "\:4e50", "\:4e51", "\:4e52", "\:4e53", 
                "\:4e54", "\:4e55", "\:4e56", "\:4e57", "\:4e58", "\:4e59", 
                "\:4e5a", "\:4e5b", "\:4e5c", "\:4e5d", "\:4e5e", "\:4e5f", 
                "\:4e60", "\:4e61", "\:4e62", "\:4e63", "\:4e64", "\:4e65", 
                "\:4e66", "\:4e67", "\:4e68", "\:4e69", "\:4e6a", "\:4e6b", 
                "\:4e6c", "\:4e6d", "\:4e6e", "\:4e6f", "\:4e70", "\:4e71", 
                "\:4e72", "\:4e73", "\:4e74", "\:4e75", "\:4e76", "\:4e77", 
                "\:4e78", "\:4e79", "\:4e7a", "\:4e7b", "\:4e7c", "\:4e7d", 
                "\:4e7e", "\:4e7f", "\:4e80", "\:4e81", "\:4e82", "\:4e83", 
                "\:4e84", "\:4e85", "\:4e86", "\:4e87", "\:4e88", "\:4e89", 
                "\:4e8a", "\:4e8b", "\:4e8c", "\:4e8d", "\:4e8e", "\:4e8f", 
                "\:4e90", "\:4e91", "\:4e92", "\:4e93", "\:4e94", "\:4e95", 
                "\:4e96", "\:4e97", "\:4e98", "\:4e99", "\:4e9a", "\:4e9b", 
                "\:4e9c", "\:4e9d", "\:4e9e", "\:4e9f", "\:4ea0", "\:4ea1", 
                "\:4ea2", "\:4ea3", "\:4ea4", "\:4ea5", "\:4ea6", "\:4ea7", 
                "\:4ea8", "\:4ea9", "\:4eaa", "\:4eab", "\:4eac", "\:4ead", 
                "\:4eae", "\:4eaf", "\:4eb0", "\:4eb1", "\:4eb2", "\:4eb3", 
                "\:4eb4", "\:4eb5", "\:4eb6", "\:4eb7", "\:4eb8", "\:4eb9", 
                "\:4eba", "\:4ebb", "\:4ebc", "\:4ebd", "\:4ebe", "\:4ebf", 
                "\:4ec0", "\:4ec1", "\:4ec2", "\:4ec3", "\:4ec4", "\:4ec5", 
                "\:4ec6", "\:4ec7", "\:4ec8", "\:4ec9", "\:4eca", "\:4ecb", 
                "\:4ecc", "\:4ecd", "\:4ece", "\:4ecf", "\:4ed0", "\:4ed1", 
                "\:4ed2", "\:4ed3", "\:4ed4", "\:4ed5", "\:4ed6", "\:4ed7", 
                "\:4ed8", "\:4ed9", "\:4eda", "\:4edb", "\:4edc", "\:4edd", 
                "\:4ede", "\:4edf", "\:4ee0", "\:4ee1", "\:4ee2", "\:4ee3", 
                "\:4ee4", "\:4ee5", "\:4ee6", "\:4ee7", "\:4ee8", "\:4ee9", 
                "\:4eea", "\:4eeb", "\:4eec", "\:4eed", "\:4eee", "\:4eef", 
                "\:4ef0", "\:4ef1", "\:4ef2", "\:4ef3", "\:4ef4", "\:4ef5", 
                "\:4ef6", "\:4ef7", "\:4ef8", "\:4ef9", "\:4efa", "\:4efb", 
                "\:4efc", "\:4efd", "\:4efe", "\:4eff", "\:4f00", "\:4f01", 
                "\:4f02", "\:4f03", "\:4f04", "\:4f05", "\:4f06", "\:4f07", 
                "\:4f08", "\:4f09", "\:4f0a", "\:4f0b", "\:4f0c", "\:4f0d", 
                "\:4f0e", "\:4f0f", "\:4f10", "\:4f11", "\:4f12", "\:4f13", 
                "\:4f14", "\:4f15", "\:4f16", "\:4f17", "\:4f18", "\:4f19", 
                "\:4f1a", "\:4f1b", "\:4f1c", "\:4f1d", "\:4f1e", "\:4f1f", 
                "\:4f20", "\:4f21", "\:4f22", "\:4f23", "\:4f24", "\:4f25", 
                "\:4f26", "\:4f27", "\:4f28", "\:4f29", "\:4f2a", "\:4f2b", 
                "\:4f2c", "\:4f2d", "\:4f2e", "\:4f2f", "\:4f30", "\:4f31", 
                "\:4f32", "\:4f33", "\:4f34", "\:4f35", "\:4f36", "\:4f37", 
                "\:4f38", "\:4f39", "\:4f3a", "\:4f3b", "\:4f3c", "\:4f3d", 
                "\:4f3e", "\:4f3f", "\:4f40", "\:4f41", "\:4f42", "\:4f43", 
                "\:4f44", "\:4f45", "\:4f46", "\:4f47", "\:4f48", "\:4f49", 
                "\:4f4a", "\:4f4b", "\:4f4c", "\:4f4d", "\:4f4e", "\:4f4f", 
                "\:4f50", "\:4f51", "\:4f52", "\:4f53", "\:4f54", "\:4f55", 
                "\:4f56", "\:4f57", "\:4f58", "\:4f59", "\:4f5a", "\:4f5b", 
                "\:4f5c", "\:4f5d", "\:4f5e", "\:4f5f", "\:4f60", "\:4f61", 
                "\:4f62", "\:4f63", "\:4f64", "\:4f65", "\:4f66", "\:4f67", 
                "\:4f68", "\:4f69", "\:4f6a", "\:4f6b", "\:4f6c", "\:4f6d", 
                "\:4f6e", "\:4f6f", "\:4f70", "\:4f71", "\:4f72", "\:4f73", 
                "\:4f74", "\:4f75", "\:4f76", "\:4f77", "\:4f78", "\:4f79", 
                "\:4f7a", "\:4f7b", "\:4f7c", "\:4f7d", "\:4f7e", "\:4f7f", 
                "\:4f80", "\:4f81", "\:4f82", "\:4f83", "\:4f84", "\:4f85", 
                "\:4f86", "\:4f87", "\:4f88", "\:4f89", "\:4f8a", "\:4f8b", 
                "\:4f8c", "\:4f8d", "\:4f8e", "\:4f8f", "\:4f90", "\:4f91", 
                "\:4f92", "\:4f93", "\:4f94", "\:4f95", "\:4f96", "\:4f97", 
                "\:4f98", "\:4f99", "\:4f9a", "\:4f9b", "\:4f9c", "\:4f9d", 
                "\:4f9e", "\:4f9f", "\:4fa0", "\:4fa1", "\:4fa2", "\:4fa3", 
                "\:4fa4", "\:4fa5", "\:4fa6", "\:4fa7", "\:4fa8", "\:4fa9", 
                "\:4faa", "\:4fab", "\:4fac", "\:4fad", "\:4fae", "\:4faf", 
                "\:4fb0", "\:4fb1", "\:4fb2", "\:4fb3", "\:4fb4", "\:4fb5", 
                "\:4fb6", "\:4fb7", "\:4fb8", "\:4fb9", "\:4fba", "\:4fbb", 
                "\:4fbc", "\:4fbd", "\:4fbe", "\:4fbf", "\:4fc0", "\:4fc1", 
                "\:4fc2", "\:4fc3", "\:4fc4", "\:4fc5", "\:4fc6", "\:4fc7", 
                "\:4fc8", "\:4fc9", "\:4fca", "\:4fcb", "\:4fcc", "\:4fcd", 
                "\:4fce", "\:4fcf", "\:4fd0", "\:4fd1", "\:4fd2", "\:4fd3", 
                "\:4fd4", "\:4fd5", "\:4fd6", "\:4fd7", "\:4fd8", "\:4fd9", 
                "\:4fda", "\:4fdb", "\:4fdc", "\:4fdd", "\:4fde", "\:4fdf", 
                "\:4fe0", "\:4fe1", "\:4fe2", "\:4fe3", "\:4fe4", "\:4fe5", 
                "\:4fe6", "\:4fe7", "\:4fe8", "\:4fe9", "\:4fea", "\:4feb", 
                "\:4fec", "\:4fed", "\:4fee", "\:4fef", "\:4ff0", "\:4ff1", 
                "\:4ff2", "\:4ff3", "\:4ff4", "\:4ff5", "\:4ff6", "\:4ff7", 
                "\:4ff8", "\:4ff9", "\:4ffa", "\:4ffb", "\:4ffc", "\:4ffd", 
                "\:4ffe", "\:4fff"}, "Dimensions" -> 512], 
             NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]]], 
        NeuralNetworks`Private`NetChain`opart, 
        NeuralNetworks`Private`NetChain`part, 
        NeuralNetworks`Private`NetChain`selected = Null}, 
        DynamicBox[GridBox[{{
            NeuralNetworks`Private`NetChain`MouseClickBoxes[
             TagBox[
              GridBox[{{
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Input\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"20\"", "\"24\"", "\"24\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"20\"", "\"24\"", "\"24\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"20\"", "\"12\"", "\"12\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"50\"", "\"8\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"50\"", "\"8\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"50\"", "\"4\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"800\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Output\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"class\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 ItemBox[
                  StyleBox["\"(uninitialized)\"", 
                   RGBColor[0.66, 0, 0], Small, StripOnInput -> False], 
                  Alignment -> Center, StripOnInput -> False], 
                 "\[SpanFromLeft]", "\[SpanFromLeft]"}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
             If[
              ListQ[NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
               If[NeuralNetworks`Private`NetChain`opart === 
                NeuralNetworks`Private`NetChain`part, 
                NeuralNetworks`Private`NetChain`selected = Null; 
                NeuralNetworks`Private`NetChain`opart = Null, 
                NeuralNetworks`Private`NetChain`selected = 
                 Part[NeuralNetworks`Private`NetChain`assoc3, 
                   Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                NeuralNetworks`Private`NetChain`opart = 
                 NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
           NeuralNetworks`Private`NetChain`fmtSelected[
           NeuralNetworks`Private`NetChain`selected, 
            NeuralNetworks`Private`NetChain`part]}, 
          GridBoxSpacings -> {"Columns" -> {{1}}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}],
         ImageSizeCache->{244., {106.4169921875, 111.5830078125}},
         TrackedSymbols:>{NeuralNetworks`Private`NetChain`selected}],
        Initialization:>{NetChain}],
       BaselinePosition->Automatic], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{3.707230855270381*^9, 3.707237055643853*^9, 
  3.70723809781392*^9, 
  3.7072385079531116`*^9},ExpressionUUID->"4b0d9582-1096-45af-a7d9-\
8d0e1b8d92e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"init", "=", 
  RowBox[{"NetInitialize", "[", "uninit", "]"}]}]], "Input",
 CellChangeTimes->{{3.707230857886654*^9, 
  3.7072308653998833`*^9}},ExpressionUUID->"cb8bb732-b6df-4c25-bfc0-\
bada919e55ba"],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetChain", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`Private`NetChain`assoc3 = Association[
        "Type" -> "Chain", "Nodes" -> 
         Association[
          "1" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`Private`DummyRawArray[{20, 1, 5, 5}], "Biases" -> 
               NeuralNetworks`Private`DummyRawArray[{20}]], "Parameters" -> 
             Association[
              "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               1, "$GroupNumber" -> 1, "$InputSize" -> {28, 28}, 
               "$OutputSize" -> {24, 24}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{20, 24, 24}, NeuralNetworks`RealT]]], 
           "2" -> Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {20, 24, 24}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{20, 24, 24}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{20, 24, 24}, NeuralNetworks`RealT]]], 
           "3" -> Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
               "PaddingSize" -> {0, 0}, "Function" -> Max, "Dimensionality" -> 
               2, "Channels" -> 20, "$InputSize" -> {24, 24}, 
               "$OutputSize" -> {12, 12}, "$MXPoolingConvention" -> "valid", 
               "$MXGlobalPool" -> False], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{20, 24, 24}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{20, 12, 12}, NeuralNetworks`RealT]]], 
           "4" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`Private`DummyRawArray[{50, 20, 5, 5}], "Biases" -> 
               NeuralNetworks`Private`DummyRawArray[{50}]], "Parameters" -> 
             Association[
              "OutputChannels" -> 50, "KernelSize" -> {5, 5}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               20, "$GroupNumber" -> 1, "$InputSize" -> {12, 12}, 
               "$OutputSize" -> {8, 8}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{20, 12, 12}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]]], 
           "5" -> Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {50, 8, 8}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{50, 8, 8}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]]], 
           "6" -> Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
               "PaddingSize" -> {0, 0}, "Function" -> Max, "Dimensionality" -> 
               2, "Channels" -> 50, "$InputSize" -> {8, 8}, 
               "$OutputSize" -> {4, 4}, "$MXPoolingConvention" -> "valid", 
               "$MXGlobalPool" -> False], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{50, 8, 8}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{50, 4, 4}, NeuralNetworks`RealT]]], 
           "7" -> Association[
            "Type" -> "Flatten", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Level" -> DirectedInfinity[1], "OutputSize" -> {800}, 
               "$InputSize" -> {50, 4, 4}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{50, 4, 4}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]]], "8" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> NeuralNetworks`Private`DummyRawArray[{500, 800}], 
               "Biases" -> NeuralNetworks`Private`DummyRawArray[{500}]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {500}, "$OutputSize" -> 500, "$InputSize" -> 
               800, "$InputDimensions" -> {800}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], "9" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {500}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], "10" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 500}], 
               "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {512}, "$OutputSize" -> 512, "$InputSize" -> 
               500, "$InputDimensions" -> {500}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], "11" -> 
           Association[
            "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
             Association[], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]]], 
         "Edges" -> {
          NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Inputs", "Input"], 
           NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "10", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Outputs", "Output"] -> 
           NeuralNetworks`NetPath["Nodes", "11", "Outputs", "Output"]}, 
         "Inputs" -> Association["Input" -> NetEncoder["Image", 
             Association[
             "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
              "ColorChannels" -> 1, "MeanImage" -> None], 
             NeuralNetworks`TensorT[{1, 28, 28}, NeuralNetworks`RealT]]], 
         "Outputs" -> Association["Output" -> NetDecoder["Class", 
             Association[
             "Labels" -> {
               "\:4e00", "\:4e01", "\:4e02", "\:4e03", "\:4e04", "\:4e05", 
                "\:4e06", "\:4e07", "\:4e08", "\:4e09", "\:4e0a", "\:4e0b", 
                "\:4e0c", "\:4e0d", "\:4e0e", "\:4e0f", "\:4e10", "\:4e11", 
                "\:4e12", "\:4e13", "\:4e14", "\:4e15", "\:4e16", "\:4e17", 
                "\:4e18", "\:4e19", "\:4e1a", "\:4e1b", "\:4e1c", "\:4e1d", 
                "\:4e1e", "\:4e1f", "\:4e20", "\:4e21", "\:4e22", "\:4e23", 
                "\:4e24", "\:4e25", "\:4e26", "\:4e27", "\:4e28", "\:4e29", 
                "\:4e2a", "\:4e2b", "\:4e2c", "\:4e2d", "\:4e2e", "\:4e2f", 
                "\:4e30", "\:4e31", "\:4e32", "\:4e33", "\:4e34", "\:4e35", 
                "\:4e36", "\:4e37", "\:4e38", "\:4e39", "\:4e3a", "\:4e3b", 
                "\:4e3c", "\:4e3d", "\:4e3e", "\:4e3f", "\:4e40", "\:4e41", 
                "\:4e42", "\:4e43", "\:4e44", "\:4e45", "\:4e46", "\:4e47", 
                "\:4e48", "\:4e49", "\:4e4a", "\:4e4b", "\:4e4c", "\:4e4d", 
                "\:4e4e", "\:4e4f", "\:4e50", "\:4e51", "\:4e52", "\:4e53", 
                "\:4e54", "\:4e55", "\:4e56", "\:4e57", "\:4e58", "\:4e59", 
                "\:4e5a", "\:4e5b", "\:4e5c", "\:4e5d", "\:4e5e", "\:4e5f", 
                "\:4e60", "\:4e61", "\:4e62", "\:4e63", "\:4e64", "\:4e65", 
                "\:4e66", "\:4e67", "\:4e68", "\:4e69", "\:4e6a", "\:4e6b", 
                "\:4e6c", "\:4e6d", "\:4e6e", "\:4e6f", "\:4e70", "\:4e71", 
                "\:4e72", "\:4e73", "\:4e74", "\:4e75", "\:4e76", "\:4e77", 
                "\:4e78", "\:4e79", "\:4e7a", "\:4e7b", "\:4e7c", "\:4e7d", 
                "\:4e7e", "\:4e7f", "\:4e80", "\:4e81", "\:4e82", "\:4e83", 
                "\:4e84", "\:4e85", "\:4e86", "\:4e87", "\:4e88", "\:4e89", 
                "\:4e8a", "\:4e8b", "\:4e8c", "\:4e8d", "\:4e8e", "\:4e8f", 
                "\:4e90", "\:4e91", "\:4e92", "\:4e93", "\:4e94", "\:4e95", 
                "\:4e96", "\:4e97", "\:4e98", "\:4e99", "\:4e9a", "\:4e9b", 
                "\:4e9c", "\:4e9d", "\:4e9e", "\:4e9f", "\:4ea0", "\:4ea1", 
                "\:4ea2", "\:4ea3", "\:4ea4", "\:4ea5", "\:4ea6", "\:4ea7", 
                "\:4ea8", "\:4ea9", "\:4eaa", "\:4eab", "\:4eac", "\:4ead", 
                "\:4eae", "\:4eaf", "\:4eb0", "\:4eb1", "\:4eb2", "\:4eb3", 
                "\:4eb4", "\:4eb5", "\:4eb6", "\:4eb7", "\:4eb8", "\:4eb9", 
                "\:4eba", "\:4ebb", "\:4ebc", "\:4ebd", "\:4ebe", "\:4ebf", 
                "\:4ec0", "\:4ec1", "\:4ec2", "\:4ec3", "\:4ec4", "\:4ec5", 
                "\:4ec6", "\:4ec7", "\:4ec8", "\:4ec9", "\:4eca", "\:4ecb", 
                "\:4ecc", "\:4ecd", "\:4ece", "\:4ecf", "\:4ed0", "\:4ed1", 
                "\:4ed2", "\:4ed3", "\:4ed4", "\:4ed5", "\:4ed6", "\:4ed7", 
                "\:4ed8", "\:4ed9", "\:4eda", "\:4edb", "\:4edc", "\:4edd", 
                "\:4ede", "\:4edf", "\:4ee0", "\:4ee1", "\:4ee2", "\:4ee3", 
                "\:4ee4", "\:4ee5", "\:4ee6", "\:4ee7", "\:4ee8", "\:4ee9", 
                "\:4eea", "\:4eeb", "\:4eec", "\:4eed", "\:4eee", "\:4eef", 
                "\:4ef0", "\:4ef1", "\:4ef2", "\:4ef3", "\:4ef4", "\:4ef5", 
                "\:4ef6", "\:4ef7", "\:4ef8", "\:4ef9", "\:4efa", "\:4efb", 
                "\:4efc", "\:4efd", "\:4efe", "\:4eff", "\:4f00", "\:4f01", 
                "\:4f02", "\:4f03", "\:4f04", "\:4f05", "\:4f06", "\:4f07", 
                "\:4f08", "\:4f09", "\:4f0a", "\:4f0b", "\:4f0c", "\:4f0d", 
                "\:4f0e", "\:4f0f", "\:4f10", "\:4f11", "\:4f12", "\:4f13", 
                "\:4f14", "\:4f15", "\:4f16", "\:4f17", "\:4f18", "\:4f19", 
                "\:4f1a", "\:4f1b", "\:4f1c", "\:4f1d", "\:4f1e", "\:4f1f", 
                "\:4f20", "\:4f21", "\:4f22", "\:4f23", "\:4f24", "\:4f25", 
                "\:4f26", "\:4f27", "\:4f28", "\:4f29", "\:4f2a", "\:4f2b", 
                "\:4f2c", "\:4f2d", "\:4f2e", "\:4f2f", "\:4f30", "\:4f31", 
                "\:4f32", "\:4f33", "\:4f34", "\:4f35", "\:4f36", "\:4f37", 
                "\:4f38", "\:4f39", "\:4f3a", "\:4f3b", "\:4f3c", "\:4f3d", 
                "\:4f3e", "\:4f3f", "\:4f40", "\:4f41", "\:4f42", "\:4f43", 
                "\:4f44", "\:4f45", "\:4f46", "\:4f47", "\:4f48", "\:4f49", 
                "\:4f4a", "\:4f4b", "\:4f4c", "\:4f4d", "\:4f4e", "\:4f4f", 
                "\:4f50", "\:4f51", "\:4f52", "\:4f53", "\:4f54", "\:4f55", 
                "\:4f56", "\:4f57", "\:4f58", "\:4f59", "\:4f5a", "\:4f5b", 
                "\:4f5c", "\:4f5d", "\:4f5e", "\:4f5f", "\:4f60", "\:4f61", 
                "\:4f62", "\:4f63", "\:4f64", "\:4f65", "\:4f66", "\:4f67", 
                "\:4f68", "\:4f69", "\:4f6a", "\:4f6b", "\:4f6c", "\:4f6d", 
                "\:4f6e", "\:4f6f", "\:4f70", "\:4f71", "\:4f72", "\:4f73", 
                "\:4f74", "\:4f75", "\:4f76", "\:4f77", "\:4f78", "\:4f79", 
                "\:4f7a", "\:4f7b", "\:4f7c", "\:4f7d", "\:4f7e", "\:4f7f", 
                "\:4f80", "\:4f81", "\:4f82", "\:4f83", "\:4f84", "\:4f85", 
                "\:4f86", "\:4f87", "\:4f88", "\:4f89", "\:4f8a", "\:4f8b", 
                "\:4f8c", "\:4f8d", "\:4f8e", "\:4f8f", "\:4f90", "\:4f91", 
                "\:4f92", "\:4f93", "\:4f94", "\:4f95", "\:4f96", "\:4f97", 
                "\:4f98", "\:4f99", "\:4f9a", "\:4f9b", "\:4f9c", "\:4f9d", 
                "\:4f9e", "\:4f9f", "\:4fa0", "\:4fa1", "\:4fa2", "\:4fa3", 
                "\:4fa4", "\:4fa5", "\:4fa6", "\:4fa7", "\:4fa8", "\:4fa9", 
                "\:4faa", "\:4fab", "\:4fac", "\:4fad", "\:4fae", "\:4faf", 
                "\:4fb0", "\:4fb1", "\:4fb2", "\:4fb3", "\:4fb4", "\:4fb5", 
                "\:4fb6", "\:4fb7", "\:4fb8", "\:4fb9", "\:4fba", "\:4fbb", 
                "\:4fbc", "\:4fbd", "\:4fbe", "\:4fbf", "\:4fc0", "\:4fc1", 
                "\:4fc2", "\:4fc3", "\:4fc4", "\:4fc5", "\:4fc6", "\:4fc7", 
                "\:4fc8", "\:4fc9", "\:4fca", "\:4fcb", "\:4fcc", "\:4fcd", 
                "\:4fce", "\:4fcf", "\:4fd0", "\:4fd1", "\:4fd2", "\:4fd3", 
                "\:4fd4", "\:4fd5", "\:4fd6", "\:4fd7", "\:4fd8", "\:4fd9", 
                "\:4fda", "\:4fdb", "\:4fdc", "\:4fdd", "\:4fde", "\:4fdf", 
                "\:4fe0", "\:4fe1", "\:4fe2", "\:4fe3", "\:4fe4", "\:4fe5", 
                "\:4fe6", "\:4fe7", "\:4fe8", "\:4fe9", "\:4fea", "\:4feb", 
                "\:4fec", "\:4fed", "\:4fee", "\:4fef", "\:4ff0", "\:4ff1", 
                "\:4ff2", "\:4ff3", "\:4ff4", "\:4ff5", "\:4ff6", "\:4ff7", 
                "\:4ff8", "\:4ff9", "\:4ffa", "\:4ffb", "\:4ffc", "\:4ffd", 
                "\:4ffe", "\:4fff"}, "Dimensions" -> 512], 
             NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]]], 
        NeuralNetworks`Private`NetChain`opart, 
        NeuralNetworks`Private`NetChain`part, 
        NeuralNetworks`Private`NetChain`selected = Null}, 
        DynamicBox[GridBox[{{
            NeuralNetworks`Private`NetChain`MouseClickBoxes[
             TagBox[
              GridBox[{{
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Input\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"20\"", "\"24\"", "\"24\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"20\"", "\"24\"", "\"24\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"20\"", "\"12\"", "\"12\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"50\"", "\"8\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"50\"", "\"8\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"50\"", "\"4\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"800\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Output\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"class\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
             If[
              ListQ[NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
               If[NeuralNetworks`Private`NetChain`opart === 
                NeuralNetworks`Private`NetChain`part, 
                NeuralNetworks`Private`NetChain`selected = Null; 
                NeuralNetworks`Private`NetChain`opart = Null, 
                NeuralNetworks`Private`NetChain`selected = 
                 Part[NeuralNetworks`Private`NetChain`assoc3, 
                   Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                NeuralNetworks`Private`NetChain`opart = 
                 NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
           NeuralNetworks`Private`NetChain`fmtSelected[
           NeuralNetworks`Private`NetChain`selected, 
            NeuralNetworks`Private`NetChain`part]}, 
          GridBoxSpacings -> {"Columns" -> {{1}}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}],
         ImageSizeCache->{244., {99.9169921875, 105.0830078125}},
         TrackedSymbols:>{NeuralNetworks`Private`NetChain`selected}],
        Initialization:>{NetChain}],
       BaselinePosition->Automatic], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{3.707230873451234*^9, 3.7072370585112963`*^9, 
  3.707238100435362*^9, 
  3.707238510874588*^9},ExpressionUUID->"b8925609-cbc5-41b0-b9b1-\
e5fd194c84ae"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainSet", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ImageResize", "[", 
          RowBox[{
           RowBox[{"ImageRotate", "[", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"angle", " ", "Degree"}], ",", 
             RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"28", ",", "28"}], "}"}]}], "]"}], "\[Rule]", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"angle", ",", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{
            RowBox[{"NormalDistribution", "[", 
             RowBox[{"0", ",", "8"}], "]"}], ",", "10"}], "]"}]}], "}"}]}], 
       "]"}], "&"}], "/@", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Outer", "[", 
       RowBox[{
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"char", ",", "font"}], "}"}], ",", 
          RowBox[{
           RowBox[{"Rasterize", "[", 
            RowBox[{"Style", "[", 
             RowBox[{"char", ",", "font", ",", "32"}], "]"}], "]"}], 
           "\[Rule]", "char"}]}], "]"}], ",", 
        RowBox[{"FromCharacterCode", "/@", 
         RowBox[{"Range", "[", 
          RowBox[{"16^^4E00", ",", "16^^4FFF"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"Plain", ",", "Bold", ",", "Italic"}], "}"}]}], "]"}], 
      "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7072308762448473`*^9, 3.707230923399007*^9}, {
  3.707238075335082*^9, 3.7072381062748547`*^9}, {3.707238514580574*^9, 
  3.707238515517375*^9}},ExpressionUUID->"0dba442a-a2d1-4b92-a5d1-\
dd0f68ae2294"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trained", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"init", ",", 
    RowBox[{"RandomSample", "@", "trainSet"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7072309812422857`*^9, 3.7072310051763067`*^9}, {
  3.7072370079027357`*^9, 
  3.7072370116855373`*^9}},ExpressionUUID->"7ba4ec0d-055a-4dde-b530-\
8dc6a0d1382b"],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetChain", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`Private`NetChain`assoc3 = Association[
        "Type" -> "Chain", "Nodes" -> 
         Association[
          "1" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`Private`DummyRawArray[{20, 1, 5, 5}], "Biases" -> 
               NeuralNetworks`Private`DummyRawArray[{20}]], "Parameters" -> 
             Association[
              "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               1, "$GroupNumber" -> 1, "$InputSize" -> {28, 28}, 
               "$OutputSize" -> {24, 24}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{20, 24, 24}, NeuralNetworks`RealT]]], 
           "2" -> Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {20, 24, 24}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{20, 24, 24}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{20, 24, 24}, NeuralNetworks`RealT]]], 
           "3" -> Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
               "PaddingSize" -> {0, 0}, "Function" -> Max, "Dimensionality" -> 
               2, "Channels" -> 20, "$InputSize" -> {24, 24}, 
               "$OutputSize" -> {12, 12}, "$MXPoolingConvention" -> "valid", 
               "$MXGlobalPool" -> False], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{20, 24, 24}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{20, 12, 12}, NeuralNetworks`RealT]]], 
           "4" -> Association[
            "Type" -> "Convolution", "Arrays" -> 
             Association[
              "Weights" -> 
               NeuralNetworks`Private`DummyRawArray[{50, 20, 5, 5}], "Biases" -> 
               NeuralNetworks`Private`DummyRawArray[{50}]], "Parameters" -> 
             Association[
              "OutputChannels" -> 50, "KernelSize" -> {5, 5}, 
               "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
               "Dilation" -> {1, 1}, "Dimensionality" -> 2, "InputChannels" -> 
               20, "$GroupNumber" -> 1, "$InputSize" -> {12, 12}, 
               "$OutputSize" -> {8, 8}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{20, 12, 12}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]]], 
           "5" -> Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {50, 8, 8}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{50, 8, 8}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{50, 8, 8}, NeuralNetworks`RealT]]], 
           "6" -> Association[
            "Type" -> "Pooling", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
               "PaddingSize" -> {0, 0}, "Function" -> Max, "Dimensionality" -> 
               2, "Channels" -> 50, "$InputSize" -> {8, 8}, 
               "$OutputSize" -> {4, 4}, "$MXPoolingConvention" -> "valid", 
               "$MXGlobalPool" -> False], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{50, 8, 8}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{50, 4, 4}, NeuralNetworks`RealT]]], 
           "7" -> Association[
            "Type" -> "Flatten", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Level" -> DirectedInfinity[1], "OutputSize" -> {800}, 
               "$InputSize" -> {50, 4, 4}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{50, 4, 4}, 
                 NeuralNetworks`RealT]], "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]]], "8" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> NeuralNetworks`Private`DummyRawArray[{500, 800}], 
               "Biases" -> NeuralNetworks`Private`DummyRawArray[{500}]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {500}, "$OutputSize" -> 500, "$InputSize" -> 
               800, "$InputDimensions" -> {800}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{800}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], "9" -> 
           Association[
            "Type" -> "Elementwise", "Arrays" -> Association[], "Parameters" -> 
             Association[
              "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
               "$Dimensions" -> {500}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], "10" -> 
           Association[
            "Type" -> "Linear", "Arrays" -> 
             Association[
              "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 500}], 
               "Biases" -> NeuralNetworks`Private`DummyRawArray[{512}]], 
             "Parameters" -> 
             Association[
              "OutputDimensions" -> {512}, "$OutputSize" -> 512, "$InputSize" -> 
               500, "$InputDimensions" -> {500}], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], "11" -> 
           Association[
            "Type" -> "Softmax", "Arrays" -> Association[], "Parameters" -> 
             Association[], "Inputs" -> 
             Association[
              "Input" -> NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]],
              "Outputs" -> 
             Association[
              "Output" -> 
               NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]]], 
         "Edges" -> {
          NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Inputs", "Input"], 
           NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "10", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Outputs", "Output"] -> 
           NeuralNetworks`NetPath["Nodes", "11", "Outputs", "Output"]}, 
         "Inputs" -> Association["Input" -> NetEncoder["Image", 
             Association[
             "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
              "ColorChannels" -> 1, "MeanImage" -> None], 
             NeuralNetworks`TensorT[{1, 28, 28}, NeuralNetworks`RealT]]], 
         "Outputs" -> Association["Output" -> NetDecoder["Class", 
             Association[
             "Labels" -> {
               "\:4e00", "\:4e01", "\:4e02", "\:4e03", "\:4e04", "\:4e05", 
                "\:4e06", "\:4e07", "\:4e08", "\:4e09", "\:4e0a", "\:4e0b", 
                "\:4e0c", "\:4e0d", "\:4e0e", "\:4e0f", "\:4e10", "\:4e11", 
                "\:4e12", "\:4e13", "\:4e14", "\:4e15", "\:4e16", "\:4e17", 
                "\:4e18", "\:4e19", "\:4e1a", "\:4e1b", "\:4e1c", "\:4e1d", 
                "\:4e1e", "\:4e1f", "\:4e20", "\:4e21", "\:4e22", "\:4e23", 
                "\:4e24", "\:4e25", "\:4e26", "\:4e27", "\:4e28", "\:4e29", 
                "\:4e2a", "\:4e2b", "\:4e2c", "\:4e2d", "\:4e2e", "\:4e2f", 
                "\:4e30", "\:4e31", "\:4e32", "\:4e33", "\:4e34", "\:4e35", 
                "\:4e36", "\:4e37", "\:4e38", "\:4e39", "\:4e3a", "\:4e3b", 
                "\:4e3c", "\:4e3d", "\:4e3e", "\:4e3f", "\:4e40", "\:4e41", 
                "\:4e42", "\:4e43", "\:4e44", "\:4e45", "\:4e46", "\:4e47", 
                "\:4e48", "\:4e49", "\:4e4a", "\:4e4b", "\:4e4c", "\:4e4d", 
                "\:4e4e", "\:4e4f", "\:4e50", "\:4e51", "\:4e52", "\:4e53", 
                "\:4e54", "\:4e55", "\:4e56", "\:4e57", "\:4e58", "\:4e59", 
                "\:4e5a", "\:4e5b", "\:4e5c", "\:4e5d", "\:4e5e", "\:4e5f", 
                "\:4e60", "\:4e61", "\:4e62", "\:4e63", "\:4e64", "\:4e65", 
                "\:4e66", "\:4e67", "\:4e68", "\:4e69", "\:4e6a", "\:4e6b", 
                "\:4e6c", "\:4e6d", "\:4e6e", "\:4e6f", "\:4e70", "\:4e71", 
                "\:4e72", "\:4e73", "\:4e74", "\:4e75", "\:4e76", "\:4e77", 
                "\:4e78", "\:4e79", "\:4e7a", "\:4e7b", "\:4e7c", "\:4e7d", 
                "\:4e7e", "\:4e7f", "\:4e80", "\:4e81", "\:4e82", "\:4e83", 
                "\:4e84", "\:4e85", "\:4e86", "\:4e87", "\:4e88", "\:4e89", 
                "\:4e8a", "\:4e8b", "\:4e8c", "\:4e8d", "\:4e8e", "\:4e8f", 
                "\:4e90", "\:4e91", "\:4e92", "\:4e93", "\:4e94", "\:4e95", 
                "\:4e96", "\:4e97", "\:4e98", "\:4e99", "\:4e9a", "\:4e9b", 
                "\:4e9c", "\:4e9d", "\:4e9e", "\:4e9f", "\:4ea0", "\:4ea1", 
                "\:4ea2", "\:4ea3", "\:4ea4", "\:4ea5", "\:4ea6", "\:4ea7", 
                "\:4ea8", "\:4ea9", "\:4eaa", "\:4eab", "\:4eac", "\:4ead", 
                "\:4eae", "\:4eaf", "\:4eb0", "\:4eb1", "\:4eb2", "\:4eb3", 
                "\:4eb4", "\:4eb5", "\:4eb6", "\:4eb7", "\:4eb8", "\:4eb9", 
                "\:4eba", "\:4ebb", "\:4ebc", "\:4ebd", "\:4ebe", "\:4ebf", 
                "\:4ec0", "\:4ec1", "\:4ec2", "\:4ec3", "\:4ec4", "\:4ec5", 
                "\:4ec6", "\:4ec7", "\:4ec8", "\:4ec9", "\:4eca", "\:4ecb", 
                "\:4ecc", "\:4ecd", "\:4ece", "\:4ecf", "\:4ed0", "\:4ed1", 
                "\:4ed2", "\:4ed3", "\:4ed4", "\:4ed5", "\:4ed6", "\:4ed7", 
                "\:4ed8", "\:4ed9", "\:4eda", "\:4edb", "\:4edc", "\:4edd", 
                "\:4ede", "\:4edf", "\:4ee0", "\:4ee1", "\:4ee2", "\:4ee3", 
                "\:4ee4", "\:4ee5", "\:4ee6", "\:4ee7", "\:4ee8", "\:4ee9", 
                "\:4eea", "\:4eeb", "\:4eec", "\:4eed", "\:4eee", "\:4eef", 
                "\:4ef0", "\:4ef1", "\:4ef2", "\:4ef3", "\:4ef4", "\:4ef5", 
                "\:4ef6", "\:4ef7", "\:4ef8", "\:4ef9", "\:4efa", "\:4efb", 
                "\:4efc", "\:4efd", "\:4efe", "\:4eff", "\:4f00", "\:4f01", 
                "\:4f02", "\:4f03", "\:4f04", "\:4f05", "\:4f06", "\:4f07", 
                "\:4f08", "\:4f09", "\:4f0a", "\:4f0b", "\:4f0c", "\:4f0d", 
                "\:4f0e", "\:4f0f", "\:4f10", "\:4f11", "\:4f12", "\:4f13", 
                "\:4f14", "\:4f15", "\:4f16", "\:4f17", "\:4f18", "\:4f19", 
                "\:4f1a", "\:4f1b", "\:4f1c", "\:4f1d", "\:4f1e", "\:4f1f", 
                "\:4f20", "\:4f21", "\:4f22", "\:4f23", "\:4f24", "\:4f25", 
                "\:4f26", "\:4f27", "\:4f28", "\:4f29", "\:4f2a", "\:4f2b", 
                "\:4f2c", "\:4f2d", "\:4f2e", "\:4f2f", "\:4f30", "\:4f31", 
                "\:4f32", "\:4f33", "\:4f34", "\:4f35", "\:4f36", "\:4f37", 
                "\:4f38", "\:4f39", "\:4f3a", "\:4f3b", "\:4f3c", "\:4f3d", 
                "\:4f3e", "\:4f3f", "\:4f40", "\:4f41", "\:4f42", "\:4f43", 
                "\:4f44", "\:4f45", "\:4f46", "\:4f47", "\:4f48", "\:4f49", 
                "\:4f4a", "\:4f4b", "\:4f4c", "\:4f4d", "\:4f4e", "\:4f4f", 
                "\:4f50", "\:4f51", "\:4f52", "\:4f53", "\:4f54", "\:4f55", 
                "\:4f56", "\:4f57", "\:4f58", "\:4f59", "\:4f5a", "\:4f5b", 
                "\:4f5c", "\:4f5d", "\:4f5e", "\:4f5f", "\:4f60", "\:4f61", 
                "\:4f62", "\:4f63", "\:4f64", "\:4f65", "\:4f66", "\:4f67", 
                "\:4f68", "\:4f69", "\:4f6a", "\:4f6b", "\:4f6c", "\:4f6d", 
                "\:4f6e", "\:4f6f", "\:4f70", "\:4f71", "\:4f72", "\:4f73", 
                "\:4f74", "\:4f75", "\:4f76", "\:4f77", "\:4f78", "\:4f79", 
                "\:4f7a", "\:4f7b", "\:4f7c", "\:4f7d", "\:4f7e", "\:4f7f", 
                "\:4f80", "\:4f81", "\:4f82", "\:4f83", "\:4f84", "\:4f85", 
                "\:4f86", "\:4f87", "\:4f88", "\:4f89", "\:4f8a", "\:4f8b", 
                "\:4f8c", "\:4f8d", "\:4f8e", "\:4f8f", "\:4f90", "\:4f91", 
                "\:4f92", "\:4f93", "\:4f94", "\:4f95", "\:4f96", "\:4f97", 
                "\:4f98", "\:4f99", "\:4f9a", "\:4f9b", "\:4f9c", "\:4f9d", 
                "\:4f9e", "\:4f9f", "\:4fa0", "\:4fa1", "\:4fa2", "\:4fa3", 
                "\:4fa4", "\:4fa5", "\:4fa6", "\:4fa7", "\:4fa8", "\:4fa9", 
                "\:4faa", "\:4fab", "\:4fac", "\:4fad", "\:4fae", "\:4faf", 
                "\:4fb0", "\:4fb1", "\:4fb2", "\:4fb3", "\:4fb4", "\:4fb5", 
                "\:4fb6", "\:4fb7", "\:4fb8", "\:4fb9", "\:4fba", "\:4fbb", 
                "\:4fbc", "\:4fbd", "\:4fbe", "\:4fbf", "\:4fc0", "\:4fc1", 
                "\:4fc2", "\:4fc3", "\:4fc4", "\:4fc5", "\:4fc6", "\:4fc7", 
                "\:4fc8", "\:4fc9", "\:4fca", "\:4fcb", "\:4fcc", "\:4fcd", 
                "\:4fce", "\:4fcf", "\:4fd0", "\:4fd1", "\:4fd2", "\:4fd3", 
                "\:4fd4", "\:4fd5", "\:4fd6", "\:4fd7", "\:4fd8", "\:4fd9", 
                "\:4fda", "\:4fdb", "\:4fdc", "\:4fdd", "\:4fde", "\:4fdf", 
                "\:4fe0", "\:4fe1", "\:4fe2", "\:4fe3", "\:4fe4", "\:4fe5", 
                "\:4fe6", "\:4fe7", "\:4fe8", "\:4fe9", "\:4fea", "\:4feb", 
                "\:4fec", "\:4fed", "\:4fee", "\:4fef", "\:4ff0", "\:4ff1", 
                "\:4ff2", "\:4ff3", "\:4ff4", "\:4ff5", "\:4ff6", "\:4ff7", 
                "\:4ff8", "\:4ff9", "\:4ffa", "\:4ffb", "\:4ffc", "\:4ffd", 
                "\:4ffe", "\:4fff"}, "Dimensions" -> 512], 
             NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]]], 
        NeuralNetworks`Private`NetChain`opart, 
        NeuralNetworks`Private`NetChain`part, 
        NeuralNetworks`Private`NetChain`selected = Null}, 
        DynamicBox[GridBox[{{
            NeuralNetworks`Private`NetChain`MouseClickBoxes[
             TagBox[
              GridBox[{{
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Input\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"20\"", "\"24\"", "\"24\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"20\"", "\"24\"", "\"24\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"20\"", "\"12\"", "\"12\""},
                     "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"50\"", "\"8\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"50\"", "\"8\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"50\"", "\"4\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"800\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                   StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                   TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                   Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}, {
                 TagBox[
                  TagBox[
                  "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"Output\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]], 
                 TagBox[
                  TagBox[
                  "\"class\"", 
                   Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
             If[
              ListQ[NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
               If[NeuralNetworks`Private`NetChain`opart === 
                NeuralNetworks`Private`NetChain`part, 
                NeuralNetworks`Private`NetChain`selected = Null; 
                NeuralNetworks`Private`NetChain`opart = Null, 
                NeuralNetworks`Private`NetChain`selected = 
                 Part[NeuralNetworks`Private`NetChain`assoc3, 
                   Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                NeuralNetworks`Private`NetChain`opart = 
                 NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
           NeuralNetworks`Private`NetChain`fmtSelected[
           NeuralNetworks`Private`NetChain`selected, 
            NeuralNetworks`Private`NetChain`part]}, 
          GridBoxSpacings -> {"Columns" -> {{1}}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}],
         ImageSizeCache->{244., {99.9169921875, 105.0830078125}},
         TrackedSymbols:>{NeuralNetworks`Private`NetChain`selected}],
        Initialization:>{NetChain}],
       BaselinePosition->Automatic], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{3.707231060339018*^9, 3.707237041036813*^9, 
  3.707237156500106*^9, 3.7072382532046556`*^9, 
  3.707239037017589*^9},ExpressionUUID->"cb649f95-dc32-4913-be6f-\
27b2f89bb62a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"testSet", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ImageResize", "[", 
          RowBox[{
           RowBox[{"Blur", "[", 
            RowBox[{"ImageRotate", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"angle", " ", "Degree"}], ",", 
              RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"28", ",", "28"}], "}"}]}], "]"}], "\[Rule]", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"angle", ",", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{
            RowBox[{"NormalDistribution", "[", 
             RowBox[{"0", ",", "8"}], "]"}], ",", "10"}], "]"}]}], "}"}]}], 
       "]"}], "&"}], "/@", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Outer", "[", 
       RowBox[{
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"char", ",", "font"}], "}"}], ",", 
          RowBox[{
           RowBox[{"Rasterize", "[", 
            RowBox[{"Style", "[", 
             RowBox[{"char", ",", "font", ",", "32"}], "]"}], "]"}], 
           "\[Rule]", "char"}]}], "]"}], ",", 
        RowBox[{"FromCharacterCode", "/@", 
         RowBox[{"Range", "[", 
          RowBox[{"16^^4E00", ",", "16^^4FFF"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"Plain", ",", "Bold", ",", "Italic"}], "}"}]}], "]"}], 
      "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7072310673006783`*^9, 3.707231085396531*^9}, {
   3.707231247892482*^9, 3.707231248265025*^9}, {3.707237144561047*^9, 
   3.7072371453492603`*^9}, {3.707238248916676*^9, 3.707238252689507*^9}, {
   3.707239203930677*^9, 3.707239212018158*^9}, {3.70723931951108*^9, 
   3.707239324548626*^9}, {3.707239400767115*^9, 3.707239402545032*^9}, {
   3.707239445097238*^9, 3.707239447390737*^9}, {3.707239622020957*^9, 
   3.7072396251316032`*^9}, {3.7072535601674547`*^9, 3.707253595272255*^9}, 
   3.707253728227943*^9},ExpressionUUID->"cc8a114c-1330-4cc0-8cf6-\
3a882407b568"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cm", "=", 
  RowBox[{"ClassifierMeasurements", "[", 
   RowBox[{"trained", ",", "testSet", ",", "\"\<ConfusionMatrixPlot\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7072311513802147`*^9, 
  3.707231178255616*^9}},ExpressionUUID->"8c4ba419-6a19-4c21-bd4e-\
c880f3ea5920"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzt3U9I1nccwPFiPlHYDtl2CEN4YLe6aU8Mgi/VwQgPNUTIgmhRRh2exU7b
IDzVGMGSosModlvSExPWJSmI1sUsYv0BYUmPrZiWPY+LTsPLiLnb2jKr3/N8
fAny0ot81Mvbj9/n+8t/Wvxkz3sLFizonXl/8fHfb38kkiRJkvF88OUHP7Y/
+HXm83/esp+LJEmS5Our80mSJMl46nySJEm+Sdceb5jY0V1NB8p3ri/pq6TT
pbuHWiYeZz7XfLEt3zOUa55KHaWBztb+0bS0oe9K+UZX5nORJEmSnLv2+ST5
ZrS/IknWgvb5JEmSZFzt80mSJMl46nySJEkynjqfJEmSjKfOJ0mSJOOp80mS
JMnadbb3ublvhyRJkoyrfT5JkiQZT51PkiRJxlPnkyRJkvHU+SRJkmQc9224
eayxUE0X7m2ebinen3kd7t7M53rXrnu4a3hlUzWNDe68mOt9mtrLjYXp/Hjm
c5EkSXJ+uWnk/JGjxUrav6f75KUVT9Lh5Ztur3o0Nuuvs//DX3Lf/TmZdu8f
f7/w2YP07UdXB7/64YtZ39tDkiRJsvZ0bockSZKMp84nSZIk41gv5/OdnydJ
kiRnr30+SZIkGU+dT5IkScZT55MkSZLx1PkkSZJkPHU+SZIkGU+dT5IkScZT
55MkSZLx1PkkSZJkPHU+SZIkGU+dT5IkScZT55Pkv7v2eMPEju5qOlC+c31J
XyWdLt091DLxOPO5SJL8L9vyPUO55qnUURrobO0fTUsb+q6Ub3RlPhdJkiRn
5/rWy+dGr1VS14nJswuLk+lZ08bKyPZHmc/FbDy1e822ZVsrqWnR8y255rG0
+OrqW2dWHMx8LpIkSZJz17kdkiRJMp46nyRJkoynzidJkiTjqfNJkiTJeOp8
kiRJMp46nyRJkoynzidJkiTjqfNJkiTJeOp8kiRJMp46nyRJkoynzidJkiTj
qfNJkiTJeOp8kiRJMp46nyRJkoynzidJkiTjqfNJkiTJeOp8kiRJMp46nyRJ
koynzidJkuQL1x5vmNjRXU0HyneuL+mrpNOlu4daJh5nPhdnZ1u+ZyjXPJU6
SgOdrf2jaWlD35Xyja7M5yJJkiQ5d+3zSZIkyXjqfJIkSTKeOp8kSZKMp84n
SZIk46nzSTKm7s0gyfmp+3ZIkiTJuNrnkyRJvl39f43vUvt8kiRJMq72+SRJ
kmQ8dT5JkmR9uO7hruGVTdU0NrjzYq73aWovNxam8+OZz8Xact+Gm8caC9V0
4d7m6Zbi/ZlzO3szn4skSZLk3LXPJ0mSJOOp80mSJMk4um+nvnQfF0mSJF9F
nV9f6nySJEnORud2SJLkq2rvRNa+9vkkSZJkXO3zSZIkyXjqfJIkSTKeOp8k
SZKMY9Tn4XoeNEmSJGmfT5IkSdajL7v/yn07JEmSZFzt80mSJJml61svnxu9
VkldJybPLixOpmdNGysj2x9lPle9emr3mm3LtlZS06LnW3LNY2nx1dW3zqw4
mPlcJEmSJP/fl/19pPNJkiTJeL7sfL7nWZMkSZL1r/P5JEmSZDx1PkmSJFl/
uleTJEmSnH/a55MkSZJx9DpckiRJMq72+SRJkmQc39T5fPt/kiRJsva0zydJ
kiTjqfNJkiTJeOp8kiRJsv50fz5JkiQ5/7TPJ0mSJLP384+Lz77+aTIN//zN
7yPf/5YWHx0/Vxg/O+uvs2nk/JGjxUrav6f75KUVT9Lh5Ztur3o0lvn3N19c
93DX8Mqmahob3Hkx1/s0tZcbC9P58cznIkmSZAzt80mSJMl46nySJEkyjp6T
RZIkScbVPp8kSZKMp84nSZIk46nzSZIkyXjqfJIkSTKeOp8kSZKMp84nSZIk
46nzSZIkyXjqfJIkSTKeOp8kSZKMp84nSZIk68+1xxsmdnRX04HynetL+irp
dOnuoZaJx6kt3zOUa55KHaWBztb+0bS0oe9K+UZX5vOSJEmSnLv2+SRJkmQ8
dT5JkiQZT51PkiRJxlPnkyRJkvHU+SRJkmQcs7pv52X3/2T98yBJkiRfx1rr
W/dqkiRJknF1bockSZKMp84nSZIk46nzSZIkyXjqfJIkSTKeOp8kSZKMp84n
SZIk46nzSZIkyTju23DzWGOhmi7c2zzdUrw/c3/+3sznIuejtfZ8Db4b/d5J
km9DnU+Stem6h7uGVzZV09jgzou53qepvdxYmM6PZz4XSbK+dG6HJEmSjKfO
J0mSJOPYlu8ZyjVPpY7SQGdr/+jMuZ2uzOci+eZ1DpwkyfmnfT5JkiQZ378A
hGg2xw==
   "], {{0, 0}, {128, 128}}, {0, 1}],
  Epilog->{},
  Frame->True,
  FrameLabel->{
    FormBox["\"predicted class\"", TraditionalForm], 
    FormBox["\"actual class\"", TraditionalForm]},
  FrameTicks->{{{{127.5, 
       FormBox[
        RotationBox["\"\:4e00\"", BoxRotation -> 0.], TraditionalForm]}, {
      126.5, 
       FormBox[
        RotationBox["\"\:4e01\"", BoxRotation -> 0.], TraditionalForm]}, {
      125.5, 
       FormBox[
        RotationBox["\"\:4e02\"", BoxRotation -> 0.], TraditionalForm]}, {
      124.5, 
       FormBox[
        RotationBox["\"\:4e03\"", BoxRotation -> 0.], TraditionalForm]}, {
      123.5, 
       FormBox[
        RotationBox["\"\:4e04\"", BoxRotation -> 0.], TraditionalForm]}, {
      122.5, 
       FormBox[
        RotationBox["\"\:4e05\"", BoxRotation -> 0.], TraditionalForm]}, {
      121.5, 
       FormBox[
        RotationBox["\"\:4e06\"", BoxRotation -> 0.], TraditionalForm]}, {
      120.5, 
       FormBox[
        RotationBox["\"\:4e07\"", BoxRotation -> 0.], TraditionalForm]}, {
      119.5, 
       FormBox[
        RotationBox["\"\:4e08\"", BoxRotation -> 0.], TraditionalForm]}, {
      118.5, 
       FormBox[
        RotationBox["\"\:4e09\"", BoxRotation -> 0.], TraditionalForm]}, {
      117.5, 
       FormBox[
        RotationBox["\"\:4e0a\"", BoxRotation -> 0.], TraditionalForm]}, {
      116.5, 
       FormBox[
        RotationBox["\"\:4e0b\"", BoxRotation -> 0.], TraditionalForm]}, {
      115.5, 
       FormBox[
        RotationBox["\"\:4e0c\"", BoxRotation -> 0.], TraditionalForm]}, {
      114.5, 
       FormBox[
        RotationBox["\"\:4e0d\"", BoxRotation -> 0.], TraditionalForm]}, {
      113.5, 
       FormBox[
        RotationBox["\"\:4e0e\"", BoxRotation -> 0.], TraditionalForm]}, {
      112.5, 
       FormBox[
        RotationBox["\"\:4e0f\"", BoxRotation -> 0.], TraditionalForm]}, {
      111.5, 
       FormBox[
        RotationBox["\"\:4e10\"", BoxRotation -> 0.], TraditionalForm]}, {
      110.5, 
       FormBox[
        RotationBox["\"\:4e11\"", BoxRotation -> 0.], TraditionalForm]}, {
      109.5, 
       FormBox[
        RotationBox["\"\:4e12\"", BoxRotation -> 0.], TraditionalForm]}, {
      108.5, 
       FormBox[
        RotationBox["\"\:4e13\"", BoxRotation -> 0.], TraditionalForm]}, {
      107.5, 
       FormBox[
        RotationBox["\"\:4e14\"", BoxRotation -> 0.], TraditionalForm]}, {
      106.5, 
       FormBox[
        RotationBox["\"\:4e15\"", BoxRotation -> 0.], TraditionalForm]}, {
      105.5, 
       FormBox[
        RotationBox["\"\:4e16\"", BoxRotation -> 0.], TraditionalForm]}, {
      104.5, 
       FormBox[
        RotationBox["\"\:4e17\"", BoxRotation -> 0.], TraditionalForm]}, {
      103.5, 
       FormBox[
        RotationBox["\"\:4e18\"", BoxRotation -> 0.], TraditionalForm]}, {
      102.5, 
       FormBox[
        RotationBox["\"\:4e19\"", BoxRotation -> 0.], TraditionalForm]}, {
      101.5, 
       FormBox[
        RotationBox["\"\:4e1a\"", BoxRotation -> 0.], TraditionalForm]}, {
      100.5, 
       FormBox[
        RotationBox["\"\:4e1b\"", BoxRotation -> 0.], TraditionalForm]}, {
      99.5, 
       FormBox[
        RotationBox["\"\:4e1c\"", BoxRotation -> 0.], TraditionalForm]}, {
      98.5, 
       FormBox[
        RotationBox["\"\:4e1d\"", BoxRotation -> 0.], TraditionalForm]}, {
      97.5, 
       FormBox[
        RotationBox["\"\:4e1e\"", BoxRotation -> 0.], TraditionalForm]}, {
      96.5, 
       FormBox[
        RotationBox["\"\:4e1f\"", BoxRotation -> 0.], TraditionalForm]}, {
      95.5, 
       FormBox[
        RotationBox["\"\:4e20\"", BoxRotation -> 0.], TraditionalForm]}, {
      94.5, 
       FormBox[
        RotationBox["\"\:4e21\"", BoxRotation -> 0.], TraditionalForm]}, {
      93.5, 
       FormBox[
        RotationBox["\"\:4e22\"", BoxRotation -> 0.], TraditionalForm]}, {
      92.5, 
       FormBox[
        RotationBox["\"\:4e23\"", BoxRotation -> 0.], TraditionalForm]}, {
      91.5, 
       FormBox[
        RotationBox["\"\:4e24\"", BoxRotation -> 0.], TraditionalForm]}, {
      90.5, 
       FormBox[
        RotationBox["\"\:4e25\"", BoxRotation -> 0.], TraditionalForm]}, {
      89.5, 
       FormBox[
        RotationBox["\"\:4e26\"", BoxRotation -> 0.], TraditionalForm]}, {
      88.5, 
       FormBox[
        RotationBox["\"\:4e27\"", BoxRotation -> 0.], TraditionalForm]}, {
      87.5, 
       FormBox[
        RotationBox["\"\:4e28\"", BoxRotation -> 0.], TraditionalForm]}, {
      86.5, 
       FormBox[
        RotationBox["\"\:4e29\"", BoxRotation -> 0.], TraditionalForm]}, {
      85.5, 
       FormBox[
        RotationBox["\"\:4e2a\"", BoxRotation -> 0.], TraditionalForm]}, {
      84.5, 
       FormBox[
        RotationBox["\"\:4e2b\"", BoxRotation -> 0.], TraditionalForm]}, {
      83.5, 
       FormBox[
        RotationBox["\"\:4e2c\"", BoxRotation -> 0.], TraditionalForm]}, {
      82.5, 
       FormBox[
        RotationBox["\"\:4e2d\"", BoxRotation -> 0.], TraditionalForm]}, {
      81.5, 
       FormBox[
        RotationBox["\"\:4e2e\"", BoxRotation -> 0.], TraditionalForm]}, {
      80.5, 
       FormBox[
        RotationBox["\"\:4e2f\"", BoxRotation -> 0.], TraditionalForm]}, {
      79.5, 
       FormBox[
        RotationBox["\"\:4e30\"", BoxRotation -> 0.], TraditionalForm]}, {
      78.5, 
       FormBox[
        RotationBox["\"\:4e31\"", BoxRotation -> 0.], TraditionalForm]}, {
      77.5, 
       FormBox[
        RotationBox["\"\:4e32\"", BoxRotation -> 0.], TraditionalForm]}, {
      76.5, 
       FormBox[
        RotationBox["\"\:4e33\"", BoxRotation -> 0.], TraditionalForm]}, {
      75.5, 
       FormBox[
        RotationBox["\"\:4e34\"", BoxRotation -> 0.], TraditionalForm]}, {
      74.5, 
       FormBox[
        RotationBox["\"\:4e35\"", BoxRotation -> 0.], TraditionalForm]}, {
      73.5, 
       FormBox[
        RotationBox["\"\:4e36\"", BoxRotation -> 0.], TraditionalForm]}, {
      72.5, 
       FormBox[
        RotationBox["\"\:4e37\"", BoxRotation -> 0.], TraditionalForm]}, {
      71.5, 
       FormBox[
        RotationBox["\"\:4e38\"", BoxRotation -> 0.], TraditionalForm]}, {
      70.5, 
       FormBox[
        RotationBox["\"\:4e39\"", BoxRotation -> 0.], TraditionalForm]}, {
      69.5, 
       FormBox[
        RotationBox["\"\:4e3a\"", BoxRotation -> 0.], TraditionalForm]}, {
      68.5, 
       FormBox[
        RotationBox["\"\:4e3b\"", BoxRotation -> 0.], TraditionalForm]}, {
      67.5, 
       FormBox[
        RotationBox["\"\:4e3c\"", BoxRotation -> 0.], TraditionalForm]}, {
      66.5, 
       FormBox[
        RotationBox["\"\:4e3d\"", BoxRotation -> 0.], TraditionalForm]}, {
      65.5, 
       FormBox[
        RotationBox["\"\:4e3e\"", BoxRotation -> 0.], TraditionalForm]}, {
      64.5, 
       FormBox[
        RotationBox["\"\:4e3f\"", BoxRotation -> 0.], TraditionalForm]}, {
      63.5, 
       FormBox[
        RotationBox["\"\:4e40\"", BoxRotation -> 0.], TraditionalForm]}, {
      62.5, 
       FormBox[
        RotationBox["\"\:4e41\"", BoxRotation -> 0.], TraditionalForm]}, {
      61.5, 
       FormBox[
        RotationBox["\"\:4e42\"", BoxRotation -> 0.], TraditionalForm]}, {
      60.5, 
       FormBox[
        RotationBox["\"\:4e43\"", BoxRotation -> 0.], TraditionalForm]}, {
      59.5, 
       FormBox[
        RotationBox["\"\:4e44\"", BoxRotation -> 0.], TraditionalForm]}, {
      58.5, 
       FormBox[
        RotationBox["\"\:4e45\"", BoxRotation -> 0.], TraditionalForm]}, {
      57.5, 
       FormBox[
        RotationBox["\"\:4e46\"", BoxRotation -> 0.], TraditionalForm]}, {
      56.5, 
       FormBox[
        RotationBox["\"\:4e47\"", BoxRotation -> 0.], TraditionalForm]}, {
      55.5, 
       FormBox[
        RotationBox["\"\:4e48\"", BoxRotation -> 0.], TraditionalForm]}, {
      54.5, 
       FormBox[
        RotationBox["\"\:4e49\"", BoxRotation -> 0.], TraditionalForm]}, {
      53.5, 
       FormBox[
        RotationBox["\"\:4e4a\"", BoxRotation -> 0.], TraditionalForm]}, {
      52.5, 
       FormBox[
        RotationBox["\"\:4e4b\"", BoxRotation -> 0.], TraditionalForm]}, {
      51.5, 
       FormBox[
        RotationBox["\"\:4e4c\"", BoxRotation -> 0.], TraditionalForm]}, {
      50.5, 
       FormBox[
        RotationBox["\"\:4e4d\"", BoxRotation -> 0.], TraditionalForm]}, {
      49.5, 
       FormBox[
        RotationBox["\"\:4e4e\"", BoxRotation -> 0.], TraditionalForm]}, {
      48.5, 
       FormBox[
        RotationBox["\"\:4e4f\"", BoxRotation -> 0.], TraditionalForm]}, {
      47.5, 
       FormBox[
        RotationBox["\"\:4e50\"", BoxRotation -> 0.], TraditionalForm]}, {
      46.5, 
       FormBox[
        RotationBox["\"\:4e51\"", BoxRotation -> 0.], TraditionalForm]}, {
      45.5, 
       FormBox[
        RotationBox["\"\:4e52\"", BoxRotation -> 0.], TraditionalForm]}, {
      44.5, 
       FormBox[
        RotationBox["\"\:4e53\"", BoxRotation -> 0.], TraditionalForm]}, {
      43.5, 
       FormBox[
        RotationBox["\"\:4e54\"", BoxRotation -> 0.], TraditionalForm]}, {
      42.5, 
       FormBox[
        RotationBox["\"\:4e55\"", BoxRotation -> 0.], TraditionalForm]}, {
      41.5, 
       FormBox[
        RotationBox["\"\:4e56\"", BoxRotation -> 0.], TraditionalForm]}, {
      40.5, 
       FormBox[
        RotationBox["\"\:4e57\"", BoxRotation -> 0.], TraditionalForm]}, {
      39.5, 
       FormBox[
        RotationBox["\"\:4e58\"", BoxRotation -> 0.], TraditionalForm]}, {
      38.5, 
       FormBox[
        RotationBox["\"\:4e59\"", BoxRotation -> 0.], TraditionalForm]}, {
      37.5, 
       FormBox[
        RotationBox["\"\:4e5a\"", BoxRotation -> 0.], TraditionalForm]}, {
      36.5, 
       FormBox[
        RotationBox["\"\:4e5b\"", BoxRotation -> 0.], TraditionalForm]}, {
      35.5, 
       FormBox[
        RotationBox["\"\:4e5c\"", BoxRotation -> 0.], TraditionalForm]}, {
      34.5, 
       FormBox[
        RotationBox["\"\:4e5d\"", BoxRotation -> 0.], TraditionalForm]}, {
      33.5, 
       FormBox[
        RotationBox["\"\:4e5e\"", BoxRotation -> 0.], TraditionalForm]}, {
      32.5, 
       FormBox[
        RotationBox["\"\:4e5f\"", BoxRotation -> 0.], TraditionalForm]}, {
      31.5, 
       FormBox[
        RotationBox["\"\:4e60\"", BoxRotation -> 0.], TraditionalForm]}, {
      30.5, 
       FormBox[
        RotationBox["\"\:4e61\"", BoxRotation -> 0.], TraditionalForm]}, {
      29.5, 
       FormBox[
        RotationBox["\"\:4e62\"", BoxRotation -> 0.], TraditionalForm]}, {
      28.5, 
       FormBox[
        RotationBox["\"\:4e63\"", BoxRotation -> 0.], TraditionalForm]}, {
      27.5, 
       FormBox[
        RotationBox["\"\:4e64\"", BoxRotation -> 0.], TraditionalForm]}, {
      26.5, 
       FormBox[
        RotationBox["\"\:4e65\"", BoxRotation -> 0.], TraditionalForm]}, {
      25.5, 
       FormBox[
        RotationBox["\"\:4e66\"", BoxRotation -> 0.], TraditionalForm]}, {
      24.5, 
       FormBox[
        RotationBox["\"\:4e67\"", BoxRotation -> 0.], TraditionalForm]}, {
      23.5, 
       FormBox[
        RotationBox["\"\:4e68\"", BoxRotation -> 0.], TraditionalForm]}, {
      22.5, 
       FormBox[
        RotationBox["\"\:4e69\"", BoxRotation -> 0.], TraditionalForm]}, {
      21.5, 
       FormBox[
        RotationBox["\"\:4e6a\"", BoxRotation -> 0.], TraditionalForm]}, {
      20.5, 
       FormBox[
        RotationBox["\"\:4e6b\"", BoxRotation -> 0.], TraditionalForm]}, {
      19.5, 
       FormBox[
        RotationBox["\"\:4e6c\"", BoxRotation -> 0.], TraditionalForm]}, {
      18.5, 
       FormBox[
        RotationBox["\"\:4e6d\"", BoxRotation -> 0.], TraditionalForm]}, {
      17.5, 
       FormBox[
        RotationBox["\"\:4e6e\"", BoxRotation -> 0.], TraditionalForm]}, {
      16.5, 
       FormBox[
        RotationBox["\"\:4e6f\"", BoxRotation -> 0.], TraditionalForm]}, {
      15.5, 
       FormBox[
        RotationBox["\"\:4e70\"", BoxRotation -> 0.], TraditionalForm]}, {
      14.5, 
       FormBox[
        RotationBox["\"\:4e71\"", BoxRotation -> 0.], TraditionalForm]}, {
      13.5, 
       FormBox[
        RotationBox["\"\:4e72\"", BoxRotation -> 0.], TraditionalForm]}, {
      12.5, 
       FormBox[
        RotationBox["\"\:4e73\"", BoxRotation -> 0.], TraditionalForm]}, {
      11.5, 
       FormBox[
        RotationBox["\"\:4e74\"", BoxRotation -> 0.], TraditionalForm]}, {
      10.5, 
       FormBox[
        RotationBox["\"\:4e75\"", BoxRotation -> 0.], TraditionalForm]}, {9.5, 
       FormBox[
        RotationBox["\"\:4e76\"", BoxRotation -> 0.], TraditionalForm]}, {8.5, 
       FormBox[
        RotationBox["\"\:4e77\"", BoxRotation -> 0.], TraditionalForm]}, {7.5, 
       FormBox[
        RotationBox["\"\:4e78\"", BoxRotation -> 0.], TraditionalForm]}, {6.5, 
       FormBox[
        RotationBox["\"\:4e79\"", BoxRotation -> 0.], TraditionalForm]}, {5.5, 
       FormBox[
        RotationBox["\"\:4e7a\"", BoxRotation -> 0.], TraditionalForm]}, {4.5, 
       FormBox[
        RotationBox["\"\:4e7b\"", BoxRotation -> 0.], TraditionalForm]}, {3.5, 
       FormBox[
        RotationBox["\"\:4e7c\"", BoxRotation -> 0.], TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["\"\:4e7d\"", BoxRotation -> 0.], TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["\"\:4e7e\"", BoxRotation -> 0.], TraditionalForm]}, {0.5, 
       FormBox[
        RotationBox["\"\:4e7f\"", BoxRotation -> 0.], TraditionalForm]}}, {{
      127.5, 
       FormBox["30", TraditionalForm]}, {126.5, 
       FormBox["30", TraditionalForm]}, {125.5, 
       FormBox["30", TraditionalForm]}, {124.5, 
       FormBox["30", TraditionalForm]}, {123.5, 
       FormBox["30", TraditionalForm]}, {122.5, 
       FormBox["30", TraditionalForm]}, {121.5, 
       FormBox["30", TraditionalForm]}, {120.5, 
       FormBox["30", TraditionalForm]}, {119.5, 
       FormBox["30", TraditionalForm]}, {118.5, 
       FormBox["30", TraditionalForm]}, {117.5, 
       FormBox["30", TraditionalForm]}, {116.5, 
       FormBox["30", TraditionalForm]}, {115.5, 
       FormBox["30", TraditionalForm]}, {114.5, 
       FormBox["30", TraditionalForm]}, {113.5, 
       FormBox["30", TraditionalForm]}, {112.5, 
       FormBox["30", TraditionalForm]}, {111.5, 
       FormBox["30", TraditionalForm]}, {110.5, 
       FormBox["30", TraditionalForm]}, {109.5, 
       FormBox["30", TraditionalForm]}, {108.5, 
       FormBox["30", TraditionalForm]}, {107.5, 
       FormBox["30", TraditionalForm]}, {106.5, 
       FormBox["30", TraditionalForm]}, {105.5, 
       FormBox["30", TraditionalForm]}, {104.5, 
       FormBox["30", TraditionalForm]}, {103.5, 
       FormBox["30", TraditionalForm]}, {102.5, 
       FormBox["30", TraditionalForm]}, {101.5, 
       FormBox["30", TraditionalForm]}, {100.5, 
       FormBox["30", TraditionalForm]}, {99.5, 
       FormBox["30", TraditionalForm]}, {98.5, 
       FormBox["30", TraditionalForm]}, {97.5, 
       FormBox["30", TraditionalForm]}, {96.5, 
       FormBox["30", TraditionalForm]}, {95.5, 
       FormBox["30", TraditionalForm]}, {94.5, 
       FormBox["30", TraditionalForm]}, {93.5, 
       FormBox["30", TraditionalForm]}, {92.5, 
       FormBox["30", TraditionalForm]}, {91.5, 
       FormBox["30", TraditionalForm]}, {90.5, 
       FormBox["30", TraditionalForm]}, {89.5, 
       FormBox["30", TraditionalForm]}, {88.5, 
       FormBox["30", TraditionalForm]}, {87.5, 
       FormBox["30", TraditionalForm]}, {86.5, 
       FormBox["30", TraditionalForm]}, {85.5, 
       FormBox["30", TraditionalForm]}, {84.5, 
       FormBox["30", TraditionalForm]}, {83.5, 
       FormBox["30", TraditionalForm]}, {82.5, 
       FormBox["30", TraditionalForm]}, {81.5, 
       FormBox["30", TraditionalForm]}, {80.5, 
       FormBox["30", TraditionalForm]}, {79.5, 
       FormBox["30", TraditionalForm]}, {78.5, 
       FormBox["30", TraditionalForm]}, {77.5, 
       FormBox["30", TraditionalForm]}, {76.5, 
       FormBox["30", TraditionalForm]}, {75.5, 
       FormBox["30", TraditionalForm]}, {74.5, 
       FormBox["30", TraditionalForm]}, {73.5, 
       FormBox["30", TraditionalForm]}, {72.5, 
       FormBox["30", TraditionalForm]}, {71.5, 
       FormBox["30", TraditionalForm]}, {70.5, 
       FormBox["30", TraditionalForm]}, {69.5, 
       FormBox["30", TraditionalForm]}, {68.5, 
       FormBox["30", TraditionalForm]}, {67.5, 
       FormBox["30", TraditionalForm]}, {66.5, 
       FormBox["30", TraditionalForm]}, {65.5, 
       FormBox["30", TraditionalForm]}, {64.5, 
       FormBox["30", TraditionalForm]}, {63.5, 
       FormBox["30", TraditionalForm]}, {62.5, 
       FormBox["30", TraditionalForm]}, {61.5, 
       FormBox["30", TraditionalForm]}, {60.5, 
       FormBox["30", TraditionalForm]}, {59.5, 
       FormBox["30", TraditionalForm]}, {58.5, 
       FormBox["30", TraditionalForm]}, {57.5, 
       FormBox["30", TraditionalForm]}, {56.5, 
       FormBox["30", TraditionalForm]}, {55.5, 
       FormBox["30", TraditionalForm]}, {54.5, 
       FormBox["30", TraditionalForm]}, {53.5, 
       FormBox["30", TraditionalForm]}, {52.5, 
       FormBox["30", TraditionalForm]}, {51.5, 
       FormBox["30", TraditionalForm]}, {50.5, 
       FormBox["30", TraditionalForm]}, {49.5, 
       FormBox["30", TraditionalForm]}, {48.5, 
       FormBox["30", TraditionalForm]}, {47.5, 
       FormBox["30", TraditionalForm]}, {46.5, 
       FormBox["30", TraditionalForm]}, {45.5, 
       FormBox["30", TraditionalForm]}, {44.5, 
       FormBox["30", TraditionalForm]}, {43.5, 
       FormBox["30", TraditionalForm]}, {42.5, 
       FormBox["30", TraditionalForm]}, {41.5, 
       FormBox["30", TraditionalForm]}, {40.5, 
       FormBox["30", TraditionalForm]}, {39.5, 
       FormBox["30", TraditionalForm]}, {38.5, 
       FormBox["30", TraditionalForm]}, {37.5, 
       FormBox["30", TraditionalForm]}, {36.5, 
       FormBox["30", TraditionalForm]}, {35.5, 
       FormBox["30", TraditionalForm]}, {34.5, 
       FormBox["30", TraditionalForm]}, {33.5, 
       FormBox["30", TraditionalForm]}, {32.5, 
       FormBox["30", TraditionalForm]}, {31.5, 
       FormBox["30", TraditionalForm]}, {30.5, 
       FormBox["30", TraditionalForm]}, {29.5, 
       FormBox["30", TraditionalForm]}, {28.5, 
       FormBox["30", TraditionalForm]}, {27.5, 
       FormBox["30", TraditionalForm]}, {26.5, 
       FormBox["30", TraditionalForm]}, {25.5, 
       FormBox["30", TraditionalForm]}, {24.5, 
       FormBox["30", TraditionalForm]}, {23.5, 
       FormBox["30", TraditionalForm]}, {22.5, 
       FormBox["30", TraditionalForm]}, {21.5, 
       FormBox["30", TraditionalForm]}, {20.5, 
       FormBox["30", TraditionalForm]}, {19.5, 
       FormBox["30", TraditionalForm]}, {18.5, 
       FormBox["30", TraditionalForm]}, {17.5, 
       FormBox["30", TraditionalForm]}, {16.5, 
       FormBox["30", TraditionalForm]}, {15.5, 
       FormBox["30", TraditionalForm]}, {14.5, 
       FormBox["30", TraditionalForm]}, {13.5, 
       FormBox["30", TraditionalForm]}, {12.5, 
       FormBox["30", TraditionalForm]}, {11.5, 
       FormBox["30", TraditionalForm]}, {10.5, 
       FormBox["30", TraditionalForm]}, {9.5, 
       FormBox["30", TraditionalForm]}, {8.5, 
       FormBox["30", TraditionalForm]}, {7.5, 
       FormBox["30", TraditionalForm]}, {6.5, 
       FormBox["30", TraditionalForm]}, {5.5, 
       FormBox["30", TraditionalForm]}, {4.5, 
       FormBox["30", TraditionalForm]}, {3.5, 
       FormBox["30", TraditionalForm]}, {2.5, 
       FormBox["30", TraditionalForm]}, {1.5, 
       FormBox["30", TraditionalForm]}, {0.5, 
       FormBox["30", TraditionalForm]}}}, {{{0.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["29", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {3.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {4.5, 
       FormBox[
        RotationBox["29", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {5.5, 
       FormBox[
        RotationBox["28", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {6.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {7.5, 
       FormBox[
        RotationBox["31", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {8.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {9.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {10.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {11.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {12.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {13.5, 
       FormBox[
        RotationBox["29", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {14.5, 
       FormBox[
        RotationBox["29", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {15.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {16.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {17.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {18.5, 
       FormBox[
        RotationBox["31", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {19.5, 
       FormBox[
        RotationBox["32", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {20.5, 
       FormBox[
        RotationBox["29", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {21.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {22.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {23.5, 
       FormBox[
        RotationBox["31", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {24.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {25.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {26.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {27.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {28.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {29.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {30.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {31.5, 
       FormBox[
        RotationBox["52", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {32.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {33.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {34.5, 
       FormBox[
        RotationBox["6", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {35.5, 
       FormBox[
        RotationBox["34", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {36.5, 
       FormBox[
        RotationBox["29", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {37.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {38.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {39.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {40.5, 
       FormBox[
        RotationBox["32", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {41.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {42.5, 
       FormBox[
        RotationBox["29", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {43.5, 
       FormBox[
        RotationBox["35", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {44.5, 
       FormBox[
        RotationBox["29", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {45.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {46.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {47.5, 
       FormBox[
        RotationBox["32", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {48.5, 
       FormBox[
        RotationBox["28", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {49.5, 
       FormBox[
        RotationBox["27", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {50.5, 
       FormBox[
        RotationBox["33", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {51.5, 
       FormBox[
        RotationBox["29", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {52.5, 
       FormBox[
        RotationBox["31", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {53.5, 
       FormBox[
        RotationBox["28", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {54.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {55.5, 
       FormBox[
        RotationBox["31", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {56.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {57.5, 
       FormBox[
        RotationBox["29", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {58.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {59.5, 
       FormBox[
        RotationBox["29", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {60.5, 
       FormBox[
        RotationBox["29", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {61.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {62.5, 
       FormBox[
        RotationBox["32", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {63.5, 
       FormBox[
        RotationBox["28", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {64.5, 
       FormBox[
        RotationBox["33", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {65.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {66.5, 
       FormBox[
        RotationBox["29", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {67.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {68.5, 
       FormBox[
        RotationBox["29", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {69.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {70.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {71.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {72.5, 
       FormBox[
        RotationBox["33", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {73.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {74.5, 
       FormBox[
        RotationBox["29", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {75.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {76.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {77.5, 
       FormBox[
        RotationBox["31", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {78.5, 
       FormBox[
        RotationBox["31", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {79.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {80.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {81.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {82.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {83.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {84.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {85.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {86.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {87.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {88.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {89.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {90.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {91.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {92.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {93.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {94.5, 
       FormBox[
        RotationBox["27", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {95.5, 
       FormBox[
        RotationBox["29", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {96.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {97.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {98.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {99.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {100.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {101.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {102.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {103.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {104.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {105.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {106.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {107.5, 
       FormBox[
        RotationBox["33", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {108.5, 
       FormBox[
        RotationBox["31", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {109.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {110.5, 
       FormBox[
        RotationBox["24", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {111.5, 
       FormBox[
        RotationBox["29", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {112.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {113.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {114.5, 
       FormBox[
        RotationBox["33", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {115.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {116.5, 
       FormBox[
        RotationBox["29", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {117.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {118.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {119.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {120.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {121.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {122.5, 
       FormBox[
        RotationBox["31", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {123.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {124.5, 
       FormBox[
        RotationBox["29", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {125.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {126.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {127.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0.5, 
       FormBox[
        RotationBox["\"\:4e00\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["\"\:4e01\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["\"\:4e02\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {3.5, 
       FormBox[
        RotationBox["\"\:4e03\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {4.5, 
       FormBox[
        RotationBox["\"\:4e04\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {5.5, 
       FormBox[
        RotationBox["\"\:4e05\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {6.5, 
       FormBox[
        RotationBox["\"\:4e06\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {7.5, 
       FormBox[
        RotationBox["\"\:4e07\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {8.5, 
       FormBox[
        RotationBox["\"\:4e08\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {9.5, 
       FormBox[
        RotationBox["\"\:4e09\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {10.5, 
       FormBox[
        RotationBox["\"\:4e0a\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {11.5, 
       FormBox[
        RotationBox["\"\:4e0b\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {12.5, 
       FormBox[
        RotationBox["\"\:4e0c\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {13.5, 
       FormBox[
        RotationBox["\"\:4e0d\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {14.5, 
       FormBox[
        RotationBox["\"\:4e0e\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {15.5, 
       FormBox[
        RotationBox["\"\:4e0f\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {16.5, 
       FormBox[
        RotationBox["\"\:4e10\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {17.5, 
       FormBox[
        RotationBox["\"\:4e11\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {18.5, 
       FormBox[
        RotationBox["\"\:4e12\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {19.5, 
       FormBox[
        RotationBox["\"\:4e13\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {20.5, 
       FormBox[
        RotationBox["\"\:4e14\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {21.5, 
       FormBox[
        RotationBox["\"\:4e15\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {22.5, 
       FormBox[
        RotationBox["\"\:4e16\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {23.5, 
       FormBox[
        RotationBox["\"\:4e17\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {24.5, 
       FormBox[
        RotationBox["\"\:4e18\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {25.5, 
       FormBox[
        RotationBox["\"\:4e19\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {26.5, 
       FormBox[
        RotationBox["\"\:4e1a\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {27.5, 
       FormBox[
        RotationBox["\"\:4e1b\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {28.5, 
       FormBox[
        RotationBox["\"\:4e1c\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {29.5, 
       FormBox[
        RotationBox["\"\:4e1d\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {30.5, 
       FormBox[
        RotationBox["\"\:4e1e\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {31.5, 
       FormBox[
        RotationBox["\"\:4e1f\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {32.5, 
       FormBox[
        RotationBox["\"\:4e20\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {33.5, 
       FormBox[
        RotationBox["\"\:4e21\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {34.5, 
       FormBox[
        RotationBox["\"\:4e22\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {35.5, 
       FormBox[
        RotationBox["\"\:4e23\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {36.5, 
       FormBox[
        RotationBox["\"\:4e24\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {37.5, 
       FormBox[
        RotationBox["\"\:4e25\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {38.5, 
       FormBox[
        RotationBox["\"\:4e26\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {39.5, 
       FormBox[
        RotationBox["\"\:4e27\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {40.5, 
       FormBox[
        RotationBox["\"\:4e28\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {41.5, 
       FormBox[
        RotationBox["\"\:4e29\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {42.5, 
       FormBox[
        RotationBox["\"\:4e2a\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {43.5, 
       FormBox[
        RotationBox["\"\:4e2b\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {44.5, 
       FormBox[
        RotationBox["\"\:4e2c\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {45.5, 
       FormBox[
        RotationBox["\"\:4e2d\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {46.5, 
       FormBox[
        RotationBox["\"\:4e2e\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {47.5, 
       FormBox[
        RotationBox["\"\:4e2f\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {48.5, 
       FormBox[
        RotationBox["\"\:4e30\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {49.5, 
       FormBox[
        RotationBox["\"\:4e31\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {50.5, 
       FormBox[
        RotationBox["\"\:4e32\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {51.5, 
       FormBox[
        RotationBox["\"\:4e33\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {52.5, 
       FormBox[
        RotationBox["\"\:4e34\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {53.5, 
       FormBox[
        RotationBox["\"\:4e35\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {54.5, 
       FormBox[
        RotationBox["\"\:4e36\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {55.5, 
       FormBox[
        RotationBox["\"\:4e37\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {56.5, 
       FormBox[
        RotationBox["\"\:4e38\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {57.5, 
       FormBox[
        RotationBox["\"\:4e39\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {58.5, 
       FormBox[
        RotationBox["\"\:4e3a\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {59.5, 
       FormBox[
        RotationBox["\"\:4e3b\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {60.5, 
       FormBox[
        RotationBox["\"\:4e3c\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {61.5, 
       FormBox[
        RotationBox["\"\:4e3d\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {62.5, 
       FormBox[
        RotationBox["\"\:4e3e\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {63.5, 
       FormBox[
        RotationBox["\"\:4e3f\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {64.5, 
       FormBox[
        RotationBox["\"\:4e40\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {65.5, 
       FormBox[
        RotationBox["\"\:4e41\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {66.5, 
       FormBox[
        RotationBox["\"\:4e42\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {67.5, 
       FormBox[
        RotationBox["\"\:4e43\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {68.5, 
       FormBox[
        RotationBox["\"\:4e44\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {69.5, 
       FormBox[
        RotationBox["\"\:4e45\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {70.5, 
       FormBox[
        RotationBox["\"\:4e46\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {71.5, 
       FormBox[
        RotationBox["\"\:4e47\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {72.5, 
       FormBox[
        RotationBox["\"\:4e48\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {73.5, 
       FormBox[
        RotationBox["\"\:4e49\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {74.5, 
       FormBox[
        RotationBox["\"\:4e4a\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {75.5, 
       FormBox[
        RotationBox["\"\:4e4b\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {76.5, 
       FormBox[
        RotationBox["\"\:4e4c\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {77.5, 
       FormBox[
        RotationBox["\"\:4e4d\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {78.5, 
       FormBox[
        RotationBox["\"\:4e4e\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {79.5, 
       FormBox[
        RotationBox["\"\:4e4f\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {80.5, 
       FormBox[
        RotationBox["\"\:4e50\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {81.5, 
       FormBox[
        RotationBox["\"\:4e51\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {82.5, 
       FormBox[
        RotationBox["\"\:4e52\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {83.5, 
       FormBox[
        RotationBox["\"\:4e53\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {84.5, 
       FormBox[
        RotationBox["\"\:4e54\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {85.5, 
       FormBox[
        RotationBox["\"\:4e55\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {86.5, 
       FormBox[
        RotationBox["\"\:4e56\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {87.5, 
       FormBox[
        RotationBox["\"\:4e57\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {88.5, 
       FormBox[
        RotationBox["\"\:4e58\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {89.5, 
       FormBox[
        RotationBox["\"\:4e59\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {90.5, 
       FormBox[
        RotationBox["\"\:4e5a\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {91.5, 
       FormBox[
        RotationBox["\"\:4e5b\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {92.5, 
       FormBox[
        RotationBox["\"\:4e5c\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {93.5, 
       FormBox[
        RotationBox["\"\:4e5d\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {94.5, 
       FormBox[
        RotationBox["\"\:4e5e\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {95.5, 
       FormBox[
        RotationBox["\"\:4e5f\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {96.5, 
       FormBox[
        RotationBox["\"\:4e60\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {97.5, 
       FormBox[
        RotationBox["\"\:4e61\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {98.5, 
       FormBox[
        RotationBox["\"\:4e62\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {99.5, 
       FormBox[
        RotationBox["\"\:4e63\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {100.5, 
       FormBox[
        RotationBox["\"\:4e64\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {101.5, 
       FormBox[
        RotationBox["\"\:4e65\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {102.5, 
       FormBox[
        RotationBox["\"\:4e66\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {103.5, 
       FormBox[
        RotationBox["\"\:4e67\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {104.5, 
       FormBox[
        RotationBox["\"\:4e68\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {105.5, 
       FormBox[
        RotationBox["\"\:4e69\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {106.5, 
       FormBox[
        RotationBox["\"\:4e6a\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {107.5, 
       FormBox[
        RotationBox["\"\:4e6b\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {108.5, 
       FormBox[
        RotationBox["\"\:4e6c\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {109.5, 
       FormBox[
        RotationBox["\"\:4e6d\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {110.5, 
       FormBox[
        RotationBox["\"\:4e6e\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {111.5, 
       FormBox[
        RotationBox["\"\:4e6f\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {112.5, 
       FormBox[
        RotationBox["\"\:4e70\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {113.5, 
       FormBox[
        RotationBox["\"\:4e71\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {114.5, 
       FormBox[
        RotationBox["\"\:4e72\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {115.5, 
       FormBox[
        RotationBox["\"\:4e73\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {116.5, 
       FormBox[
        RotationBox["\"\:4e74\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {117.5, 
       FormBox[
        RotationBox["\"\:4e75\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {118.5, 
       FormBox[
        RotationBox["\"\:4e76\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {119.5, 
       FormBox[
        RotationBox["\"\:4e77\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {120.5, 
       FormBox[
        RotationBox["\"\:4e78\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {121.5, 
       FormBox[
        RotationBox["\"\:4e79\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {122.5, 
       FormBox[
        RotationBox["\"\:4e7a\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {123.5, 
       FormBox[
        RotationBox["\"\:4e7b\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {124.5, 
       FormBox[
        RotationBox["\"\:4e7c\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {125.5, 
       FormBox[
        RotationBox["\"\:4e7d\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {126.5, 
       FormBox[
        RotationBox["\"\:4e7e\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {127.5, 
       FormBox[
        RotationBox["\"\:4e7f\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}}},
  FrameTicksStyle->8.652284973753769,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->1262.8671004725065`,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{3.707231181915277*^9, 3.707237204581003*^9, 
  3.707238326680859*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzEvcePbEt27nfF2+xuQQREDoQnURMK4kjSQCO9/+AJGgjSQFNBIt4jyG52
N/uea44rX2kqvalKU2nKe+99ZXlvsrz3NivLZZb3n1bEdpnnnqb4AAEqoPue
2pXx2ytiR6z1rdgRkf/r3/3wj3//+7/74Tf//u/+5n9+93d//Mff/Pvv/+bf
/fM7uvTtf/LNN7+4pP/d/M037N/45hvp/772c83+7+t/+4/50//NL3yL27Mt
ZOdX4urxLeav1j/18ehBEO8+GBC5f/3m1+I14A1vb5B/Y///+vYqFf3mz+Vr
Mu6bX/wLZd++UpZ/7ouyr6/K5779yrU/+8o1pUb/+9er+N/h6ngB37/7DnqD
DiqVBjXtY/zWfe21aB9eFT/9gtmhNmg0KqjUahTVdOCB7nJ7vo8chxlp6gw4
3S7UdPbj6nwX2XlVuHsBjjdmYNVpkJ6uRnFdJx6eXzDVVYM0lRazu6eYH2rl
zHSVGmUNATxQmdfHa9QUepGWlgaH2w1vXgNunt6E2v0bbspkoAEatQpqjQZd
E6u4Ca/CU1CPm7sb1Jf4+XWb04Pi3BzU94zh9GATTosOajLdnOnHbvgGFwdr
cJqVa9vH0X9ta/3hd79DWdsA5qf68eN3P2B0aR+1BTbkVo3yz56sjeP7P35H
rTeDjaUpJH94j67JddS4NFDbcrCysgRb6g9QZ5fh/GgRP3w0Inx6BO2H7+Gt
6sTq4jQSfvw92oZm4TclwlPVg/XpPvzw3ffoHp/D+sI4En76CcPLhxhrLsS7
z3rMLa+gwqvHb77TI/IgttZ/iePlQXz3x3cIjM1iqr8Zf/jjR4yMd+NjsgPr
s334/e/eY3JlGyszQ/j+t79Becswyr1GmL0V2N7ZRr5ZhazCGhRnx1+z5Nfj
FTE//9ufarDIwQw+ax24Ez9em2NGXmUX6spcKKid4Nem28rwQ4IGoxNTmJyY
QEdLE4ZHB6H++BPGdiL8MxujrbDklOL8eImst2N7fQo/fsrA5YPAPdrdwO7e
HrzmdPSvnGGmuQg/JRswNikwW5saML+yCp9NhYrOGV7m/nQZSalZbHRLDTZR
lwe9t1yuxsbSElbm+/Ep1Um3WEEiPUuHrwgjY2MwZ6SirnsBZ4dbmBwfR21F
AT6++wM8NV04OVCufXj3e2RXd/1HNNgnlQ3XL8L1+lwLcso6eYPl1wkNNtdV
hd/+5p+Rm5+PgvxcfPj97+EprII+4QNGd4UGWxlsgNmvNNjOepAaTIsLscHO
T0KIXl3Bb6EGWz7DXFsJfvvb72Tmj//0T6iiXp7r0MoNdnM0h8/Ekhvs32Cy
IQ86T6lcjdDhIY42RvEhKRNX94+YGx9Ce1sLCvKy8cd//iNaBpYwEajhvdLi
yEZbYAhnkVsMt1fgu++Ua+HL23/NeIwezeMf/+EfkFcfwML0IH4k7ODCLpqK
zfj9Rw06e4cwOz2EDz98jw4aj4vBQXz88T2G5ndQ6SBvZsvFwvwMjInfIcNf
qYzH8xC0n76Hq6QZS7Pj+Pz9OzR09MOa/gGFzUPYXRrGTz/8gMDoLPmBPvz0
/XtMb4Ux3FiAHxINmJlfQAG13O9+NCP6IHuvk5UhvKNW6BicwligDt/9mIyZ
mQF8SnHg/PwYusTP5LHGsbG2gPTPP6F5YAG11AG0tgJsbKzBY9dzF1CVw64V
CtdsOrQOzf9rWuv2fBs5eTnwOO3k+LSoah3mvXK0twFut5Mcpw6zO+dYm+qF
lpyoWqtFY/80jwfX4V34M43Q6IzISEqEyV+O64t95JXU4Z4gx9vzyDTqkEa+
vqw5gEVyM+/+6e/xMdWAvctbLI12ycxW8mzsvi/3UdQUeCnuaGEzqfBDkp1a
61Xx9a8IktfKEIt1kq+/2J/C+0Q7rh9fsTbdD7NOy2NBlq8Y4dsnXB1twptl
Fq8VIXzzgKvDjbhroej9v9Ra7/iFP8dCZxUynPm4jhyjrqED909vMYH8GW5j
MjqCh9/8p+K168MpfP/RgksSC78Sr13sjOIdXWMCQrnD//WnbrkzO4Tq1l5c
n+/Am1OOm8e3OO2wv72GvXBUvuVteB25hXUsQMq3vD5ZQ25xI+6e8S/dUvn5
/0hi/f/6p/+R/+dbPD4+SX/55r8Srz0/PeJFUGPf/FK8xhpT/Ow3/8tXrv0q
puyrWPZ/Eq+9vTzj6YV7828cctlXPD49x30u9tpffuXaf/uVa9J9nx4fZaEo
lX15fsKzaMvXrkm8l6evfC7mmnSPhz/VVsKNv/lrqU2flM/95VeuSfV9jLG5
M6Yer29ftP2bUl+jeO31hewT2/RXMk+5x/8QW9+Xt/jn9vqCx2ceLr/57/n/
f/M3/D+k2F8e0dNYirL2SZH0hHK/k4TqCA1g/Jl4v4uDZViNdqzsXvAPPVyf
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
GlNTU9g+vpBQ7Es22KFI8dW7gSXVgPlt5ZAfi86MOVIi0ozffF8zrI46uXrs
AF6zt15+ZcaKEEI+24d+N+tYYyuIud4mdhaPjJgbaoHF1/CtVCFWhJ0LJn6V
DTu4w5hhxpq49aynxo3KoVXsBgdgzaqW2mF2sBn2XGGX71tkAxlWOyJPz3Cr
Y08auiJna8biwZVkTDDQALu7QTaGHTJky2mSHCM7m8iUbGDHoctPoTnXhMbR
lbincLU3zXMt8RvtaLzeob3Ki9+++4D+sSCCwWn+FKanZxG5fZRGSlOeGYGF
PV6ErRRjqxkqKsqRm1csb5NlZwKZSbCIx6nARYF4M3SNvuos1I0uy2Y1+o1o
Fs7SURa87EzCYHfIX+V2uTUNk9XBD5cRqviXqMulcpPrcguc7Czg0w//hKyC
WszOzsidZ21rXxZml5uTMNmc7MQBqSFrcwxoEY/fYT/1PgNapzakjnG5NQED
hVjpO4kvNiY44fZNeaNb49dTkU0ZUec1oH16U0JcbI4TwiVv1T9fpwFrc8Uh
qgnRNi3taX4jhJ4dIiQjNsYI4VYO6lkbg8nuZicUyO1R5dOhPbgjI2qpIoNr
wvl9zLOlJCWgqqIMeYUVcmpytjrKOffKu5gqrw4dMwqmJluPrtkdqWOdrY/A
kJXNDiUXn9Zf882ZelshtpYn+D7O6aV1LE5RApJqkVNedophL+VwCQmpGJpb
Q39nHQqbSbbd3UvfnMmP79GoLDgWjzZqLLKide4QS32tcOe2Sx1muK0K7rJA
XIcBFdUmGuJO79GqzKS2H+U2Hmwog6dI+pIsYKitEtnlPdL4fWNFEgzYv4g9
HCcLZ+LpaMFAFRJTzSgpLUBlYFGyZrC1Ep6K3hhr/gKvVFSbYJTP7GEoNVVM
PBQBdQUWdCweYz7QBE9BlzSqlvtbke2rpRS8EblFwmZ99sV1hgQz9mXUMf++
AvEbKQhlRudSCHPdjfAWdsujqp9yXF9Vf1wjvdwcQUNmHYkHjLPf1dRIh9EX
OQz01hQjp6xfbqTepnIUNQtfncaOGzKlJCKvvBrGrNjjeg5JVtpxenuPlnIS
DNXi7ueWGvhLlGOEFuk5VtQOI3y0gVy3jU8ksS2sRfUBeaKIHSOk0mThmvrE
2vggOgeFVcHDjdVxrMO5Hlg8BUIhco+WRD3Obh9Qn69Hz7JyIPveyjje/fNv
kFvVjlkppExOYWsvJD+ug7kAbL4i3N/fwaP7jGFx4z0blH3iN2SxbWclmWp2
jJA0zXkw2w1jdoG8l58dpFjmM+K7zyqMB2f/jN2LeeqZBdxI1SNKMVFGNsLS
sN2f6aKAplD2g52wkjEC8hJmqtjF/SNqcnVkjHR20AOK7WqMbpwKmL/mxUwe
ZdP9HscUC788XnDMpYjplw4ifL1HITsWZ184Kmm0gZ519Qiie+RdPMqxQbtT
XbB6ipRkn33L4gPys1QYkc/ou0exQ4N58QwR9nqAKWn2fY/FVS1/JvaurbEG
uEpqcX9HwkH9ETOHwscLnBqMb4uolzt+Lu7q+TOudoNo6hO25Z/Md8JeWBl3
aJCjoEr2f/zoEUsapnfF+Ptyy4+bnj8W7tFTmoeatiC53x7YYjibw/XEqf5W
7FgSJrgXkTEewixIYbwkF7XtM+SCGaZKdqW3Zxska50UuxWvXutzobZD+vZW
8MNqqrtnJa9+c7KG1KQsRB6lc33WCeFC9Enx6jVeF+q6FERVvgctIxRrni9R
Uih8B9ozOx8owSFzbsJrpHVdLHrKGA/DzCkYdjzNgLAe/WiO1FlBPe6vT6BJ
ypQx7AieOAyFqWwn6sXTc9gPO+WmrndBcqFXR0wKOOTDcth3ZXVXePCb339A
39g0gtOCmpgKzrFvi5I60+nOElK+/x2sOVVy5J6myL20eShH7ugxobU8AkrG
VLocMcfkAJU5bjT0L0qtG+Fn5CphlxFSM7JjNMQvUeHMYqfjyIgKv4uaZUkO
/vsLcQh2yE5ahhD8JESZgxD9EuKNf69O0+CKjNibR1qqW/4Sj0tmVYYnLviX
OTLRIj4M9rPYVcYObpe16dMFskwqLEvn4NxdwmlQYSWsrP6dD5TCXdkmIxYI
4YlBPJ4jkyGk42/uLjhi9VRBsONp3OKxLuxnvrMU3oq2WITdxO8qPNu7czgM
aqydKYjZrmJkV3fIiLmOEngrFcTDGexGdlfpgJozjlg/e5DjT7CzCJ7qThmx
PduJ/JZefop7sTcTyUmJ0Gi0KKhsktUQO+gmi7g74tKdeuqlXaOb2J2sg6vq
/2HvPYAky7LrsOb2Ts8sITAgAqQUkEgwQgwFRXGBXQAECCygECMUVMiFKFEM
CoAYIRBYYmfWzeyO65l25SsrXVVWZdm05auyvPfee++99967o/te5v/5/8+s
qqzumcaGAhVR2Z23bt5/78/33z3nmfvKxJzYV5YMs9O2BDisU1jMB1ehm0Oy
FRaEqZ0LMazu8kSYct3DTr2lSTDnVIlhEXCI0AZjaltuYnrXbaKrzA5Tnht7
9JQkwpLrNkEAgZmY3hFMrPNzaGd23Ys8O0ttMOfXiia6i+2w5taIC+GPVhEu
McGW+1ipYVV3u890WqVkGBRscVeymexEoJZXo5Esd7mBhUhrXdeszE5Nj9vO
8kg7gkLc1XVWJsiu1s46I5edv8vtmInP1/e4K+KYoqLQPrFNTWke6a6jqLdn
B2SVei5OD6nf1OInn/ihrUfMoj39Q/xMKMGUOdKAur5FMf0NtSA41F1Xhx2p
OdhejVdfPkNOVSvGBpoRYS3A0fEJroSRQtKON0SgZcRZMHuwNg1xhc38HHMV
3SXB1tJoK4L1SdLTrRmfSQjToclVFoeNfSdERKBhcEnsuRcGmhCqcpfUWRhu
QpjRSbArswsw7sq6dm0UGnrd5XniyU7j0LJgZr6/EaFh7go482QmxJDm0t6E
Tq/G0vEVUonFNfYJZs4RFx6BpuFl4StjkwuhYe7iN3NDzQiJSJVtM2A3JC5U
i9ahZYmZcHaD3HspeuuhUqe4i+hszSFcrcLKybXYUuuJ6aZUuM4ypZ/GrDhW
CV3IEpfb09Bqw7AsPL9X52gpz6As8REqGjtFztnN1k3vHYmI1hGLNKdVEbld
bk9Bq1NjRah3szkNPb3fct30JI0OXeMb1DHZWe0bwVR9ZgzSqzokpt7FxZbT
1KrrWKOzjSnoNWqsn92IgdU4jEir7hIDq8uIRkZ1p8CNzil/a8jE2snNI0XJ
nLXJHkoDwZQFezE9M4uZ6Sl0NFTw46nEI7hcBcgTc8oxPDKEWFUgMgqr+OmS
yYXujZRrE93w9w9GQ0efaKud22IEW9jHzipV6hGXkovR8QnMzc1hfGwIdqMe
8WnugwqYX8GhenQPjaC5PBvBIeForC9HEKuHsSNW8SeYqIU9q4g+r8InL9QY
pWuyMw+NdmG/+C/zyR5//xA0Sv2qLyO/1JjdOBb9Kky20G3SQ6/X0We1Wi11
+6pQFTurUryzbNOvH7PV2Y/pWWZrEm1k6znZmhNskV8p0VokpBVQjJMU4yzG
RgdhjdTClOmuo7082k62QtEktVVXihcUx/zmiWgr2aiBKV1uy2LQwuxw175e
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
HbYTIIQDKqeO3mjG5JK7YuvaTD8iiVWxI1f8g4KoSWkoYSoSFLNTlO62E8qu
ZcaUxM767BBiDVruMzv6h6Gi3IpWWS9xdX6CWpcdDbcTCn20BVPLu49cFX/+
K1dHdHV5icsrzi9cG9Ae4/ryAufnFwyluFmIFz121gir8XQDt975+TnJrsTv
iskuSeYaeHJtmSaZxN6vSGXX91/Dq961b3pXrthupJ+ldy6/xc/eZu/KZc8t
uxCOEnj0qy6ZMMgmWGevF8z+xYXcZ9J0fV7G9i5d9+9XpLKrK98++0Z6l7fq
/e07YrvL3s0NWx7hulcX7nsvv6c3ss/eXF9xOW7R+5U7Pnt5cS5eQ2h/p8dH
QpUTd/tz6d12DW++CPdA3N0jsXd+di7KhCR/TZ8V2v0vide99PwsbxvOa/xd
QXZxIep9U3lPJfeA9YaXXp5BwecnD9S7pvdMrmwHV67v9z+V+HLu5TtSxsb6
jStF23A+g+e8bbz7QL3rqyvx+bir7Ur13hNll+Kz+s4d9th3zq5LbUFi7/LO
6/66j3q+2nsTPW/9lRjbzfUtz5ZS77Zn8M31hPZ8I3k+viV89sL1nd9n79Y+
4uvVE+89fOxPb9ET2uSV5Jn5O8Jnb9yfFe7LjaTPEe4f+85ZH3blkacVvkhy
qHifxfJKkv7lnnx+V072FR9ce73PlJ88+na3TLB3QX32hUef7al33zWcfdgj
ePk5fJM//Ybrbh4fH2NgYED4/QYGBwffE//37tchowiHhobYW/7Om+zJX5Pe
L5Ivf6P3N3q/aL78jd5Xpzfg7HFleoLs/y96v0i+/I3e3+j9YrbdJ1KZ87e+
GAPqP/smBrR/RvRvSPun7H/8t1/1p5jN9HcBcNc4zrdwdnyAzeU5FGY72OFf
xI3PsbW2gtrKcpRV1mHzQLLVmK5QVFSE4eFh/ltYWIji4uL32BtSYm9LSkr4
uycuWUFBgSh714tMqldaWirTy8/PF2VPvMheR6+srEyml5eXJ8relcjKy8s9
9ASZoJebm+uhx2QVFRUeeoJM0MvJyfHQu01WWVnp8VlBdpdednY2qqqqZHpS
mVSvurraQ0+QCXpZWVkeekxWU1PjoSfIBD2Hw+GhJ5VJ9Wpra2V6mZmZouxd
LzKpXl1dnYeeIJPq1dfXe+gJsrv0MjIyPPSkMqleQ0ODh54gE/TS09M99JiM
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
E/XXFaGSeDoynSesXG1OuolnrIt4NhDxjM5T9l0HBEWyMtKRn5MLmyUBsXFx
iI+LRXSCHW19I9jaF/qudziNEhI7Wwp5W2J3A7ivJtz/zHV9BgDYdYXrS1nq
6uwkSjJt0EWbUOsjSz3ao4/YEZ+YhqzsbPp1IIyyjsmWArvNjh4x6/gOAb6u
0O+CCn21RXj6MDZ7dXHKB/IySusxOdSBnOxMhPj50a1IRWltI07Ek9fvxwtv
o3Efb83BbrfzolYi6+1xs97WYmK9Ng/Wuzo7AGNMPPKLS1FMLMeRmY5AetKN
lkRkZBZgVTxl4Rejl2LsOC3BAL/AEAQwdtw+xtmxmbHj4GAnO17Y9mBDN2co
L8hAZn4JXxrQ01SBMALo3UOj9H4Ch8cXrxlmD/vlYfJss+Ul28y1OLPNT3mY
PxWzTfjvS8L0ZNEgFj1DgGNhdVNMFJeEoyappa3viCza2RG/g6ura9mnj45O
H/lKpaWl5K4uj9gvfZa9OsN0/TzyF/SWiXKr/pCNr7Jr0Otj53vbn9G32kyy
69lm/g0342Z1UBLmnXDgYGsJ1ZUVKC0rRUlpKd+dUlRQiDoCmyfn175+QQbB
y6mGO2HWP/bikZttX3qwbVYIUK4nej7aUYgf/fhzlNU0Y5g6INbGhof6CA4H
oKJ76sGeTzd5h7a6P5J47km0WyvzONHWaMLRMeIk2rXsxEKVimB2CjaPz5Se
X1M/N9BeD6spHtakdHQPjmDv6BxbC2MYml71NX8/1HNvRLt/ZhmDDUV4EUhE
u7uZE+2Z5SU4ErQw5TYqB4RZndHVpXHERUUiOjoaIQH+8CdCZ0hIwsj8tkBN
hZTM+PBdKTncxwj+kcuukGoFu0quvba66Yxu3sm18xjXzrida38Li2PtiLOn
ISXJDFW4CXMry2irqyAQqUVKbjk7nFmWbdlmJtbQWMa7bSrzoVGxLDriasDs
X2kWbWWE+6dEuIt9JNzf4iOB2bYoNA9P0L+JaO4eRXVJPgf6naPzuL65eeRr
Fn2TJsZYNzsk7GB/B2XZRKOTnaxbZ/fKuoWHY7a/ES9fBcGg10Cli4DVnojM
rCzEGvXIre57G4+1QLgrW3pRkE6E28YI9wheEeFu7ux2Ee5+ZcI72lxBSpQG
P/3wI0QY41DZUItoakeBQYGwZ5XRI37mc8J7o16JetG5YSLcBj3MKVki4R7q
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
WlFxMQoKclFe14ajsytfO3ohGrZYh+3TUe7bOXZtTxKjmW/3upL1XPfbXOOv
vHjuXv9yAdd+nLsIoRBhfmwoPgvQorNvSJwSGRkZQLw+EFU9k68XYY/HBiy2
s1cW4UKH17Vk5+G/J4nQkzM2lWXzLSVhYTq0Djo5Y1VeEkJCQwipJ2Lj0GOb
yenhFopz05AQb0ZReT0rB8ytrU71oX9y2dds93VF6I1WDs2vYaS51EkrOxs5
rZxfW0UO0cr47AblwM70YBcqKsrhSLXh2acf4q/e/zFeBarQODj/SDreKWRF
dhLFbVnxe19xmH/huj7Lnuy6wvVTU1MltPMEGxvOb2VvltHOYE47o0TaWe+l
PgThV+RYIhESEU9IuxFJiekYoatU5KYgq7JLOjTKzlFioxzs+11aWnqrgbNc
y64rXD8zM9MLPW28j56Kuyv21lCcl4ZArR4jE1P0nOoxRKlgjJJeekUrLq+v
fR5CfRtN+py47NT0NI6O9lDJuWwFcdn827isEObu2iyy0+x49uxzRJkyUZST
hCBtFFISrYgmplDbO+0zzH4bfZNAfEsbOpGbEo1Ie4VIfOtb22H0TnwZHM8h
8vP0yy8Qa01DVroJL4I1yM7NQ2VNM7b3fC9OcX+SUYS52IWzH1OYH/IwP+Rh
/oglmd+5NUz2szDWizijAbaMXNbdctloTyMvOOAobvBKkK+vCKvsY6B/AFsH
J0SWdzE3M42xkWE0NbVhe9/3QVMhzBu+YZQtiD3mG0bZZuHrpR4iyb/DaCjD
NPRKVoPovenf0LfaRTIKmn/DXbhZH5WEeee86MnhDpZX1+jZuhFT6uHBPg6P
jl3vfHP9XwnabGjCG3sO/S7X+PA+l94jYtEMnToYZV3Og5T66nKgMxgRGaFl
stfyyBuGdc15CzUdvRHoloY6tHT04vjcRaDX5lFfW4uBsVlvBHp1egBNLe3I
d1iRUtLEB69r02NQPziL5cE2xNlKX++GPtB9RqB1gV/CaE1GNN1JgzUfu5xA
P4M5yUmgySel++uzwyjKyyb24I+XQSokOXKQnRSLpsEZnB/uYmpqyWcC/VD3
pf3q4foscnOKnAR6a8qDQA8SgQ41igRaWL63NNmJwJAIDE/PoSYzHvW9kzLi
nJuby8ntXRDhf/DR7R+57LLMx+wJdlnqFzLg8uQo8lNM0BP5qvONOB9R+zJH
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
ck1+/MdjbBMISU+KR0FpFTZ3WW+Iq8sL0otY3BkovKvFSnRqqG9lvwvoVEXR
KY1Hp4EaKToJVVd1uIbunj7093QiKSoI7733PkJj6a5nzQN73ETliXS3Sss7
3LRcxxdpT/EEgdhemEFJRgLjph7n3CR4oT7cQC0hi+iETFLcEHISI5CYRSLh
Q7Vs7z7N2+FE5u7qhT2Z467vV8SjJeYH2uD94mPCTWPuTT/R7uQaVXmJaJ9g
bRzq7WlExSTj5MLijuzdtRYpeSkpMRFnFgkvTVNeSoGR8VIqovJabVf5XGCw
vRKe3oFobOtEd3cPBocGkRodhpruadJruzX5/llaLOOmPCs3dU9tsIS3BalR
8PDyJNwUibVDra3lRsKls6x2jA4PobuzHTVVFSjIzUVhZRPUlzfuWM6CArbB
STT/S/TBzP8SM/9L3KoH0Xw7JEXu+/HhPlQavYykDvf3oL0QSeqHrs1pEC6k
ap0bavP5M6pt5Jm85kn+jvnXNLs7U5Ql9r4N4aMPhDO3nG2iIx3x+vwk2lpb
aW6tN+ghDOQTTY2N6BmahMm9uy0aebRgn6C8/9T6MUcERTpXW4K6YKdeWV+T
BDkWZEf4IzguB9Oz8yxdxNLSIhbmJhEVEISpNdXdLF+0Hzrwi0Q4G2xxqp2E
wP4BgQj0Jzg1zuFUfXEaec0foVGpUpwSRPzi7BA1ZYVITctC58AYTs+59Zpr
I31Y3lG5IS53NdoGq3x8sXakwfpYO8GqEAzzWHWkVqMuV4ZVYhYvAqrd3Z2o
Ks2HJ+kD6cEkYdGJmFw/uYu41Llp+RVfpCucOtewDhynq2MucErUl6NN9Pf1
o7+rBSUllZiZnkZvZxvGFrcd6gtNwfAZHXGJUb8mGNXsNkaZVWvITS3ExGA3
IkMi0EXiKDf05K4VR4lRNImO0WRET0MB4jIVGDXaKMUoYTjGTPqjMB8PZBZU
YWNf5cZwzGdpkmYtR0yVzT0oyowmxNSO88NVRkxNnV2I8vdEVf+CsjM53VlE
Ukw04hMSER0eghdPXiIlLR3JyUmIiYnF8NLO596ZkJ/DjQVkpaegqKoRGiNH
TOvzI0hLSkRd+zDTXoXlFtJr7tOJnb1d7O3t4+jwkOUSotyyz8TGrV3QFfTp
bTpgJvTiv/0SfVDzf8tE71dfEjEKfHl2ZOVb/F2nQ4PUtGOCUOpzvRvkVC5c
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
hgduCOe9KptSOCenpiTCWS8XzmG7wknX3+cSwWxra0UBgevkuHB4BkSjsrIS
tU1d0F66NXpjNX9XVCAZ0r34vvOmToUzmApndTMvnF2icFY1NrGzkuqHbEZv
6KELRWkJCA6LQGxcLEKCfQn9RaK8shrNLZ04UVx9B+b/QDCfKZGJPigEXbEc
JXRrAVOix9Sl9x4zJSL/6/lTF70XqKiuoSgvG5VNnTJRzSPdU6s9UaV5iGnz
0uP8XMPqqur0BFvrKxgdnYDG4M5hpqI3VLDo0tTn36Ma+oIJ2zMibEH/o4B5
GiZsWoWwCekPnWxJxq0Fu1vbMN9YV0BoVUc407EMNe7Iv2gmqzN20O/5d63K
JuT0dWjSY9yatKjIjkNYcr64F2KssxwdE8vubFaUmfOendjvpaQKJzm436e7
62iorUZjSxdhI05s9zfmUVNVhb6RWdaByO43l+C7Mj0KFd3c4ezjXZXomlz5
Iiw2nW0jwOMJssvrkJsQgZCEAhJJryPI4wXKSJcc4v0KjSM2sxfH24to6R7G
xtwoElOquAtNrO6dWcDcSA8GZ+Xzqw709V7my4ZMVbsEuzjRoUOmfmzItAgR
4pBpvb0hU4NmH9nJMfD39UVucQt769pYK5FqP0QlpGF+60Smr0VFRc70VcjA
65YbcZJylfoqiND69CiyEyMRl1GAvs4KxJe4HDK1kEB8YWoUwS/fQ0hSLhYW
51GdnYAPnwZgcHwKKsmhGFRXKQs70dV7uWRPV61Dpje4vrnB8lgvwaNndxky
NZzuo6a0mOhpGSIDPfAyIIqt4C4uKSOhRD5mNuVk50Bf71XZlEOmMdFROLq4
xhw/ZLox2wOvgARojSa0lSQitrBdiUgbU+NobetAUWYiXrwKw8DIODZ3D2C+
umMfuceN9CrJjg6POe2UbkwkhM7Gq1cebKh0cGGHDZWWZcfj5auX8A2Kkw6V
CmYf725jjpg0Mz2J3q42FBfmIz01BXWtk+6YLaz1lOrpI6mefvQ1pqePpHpK
l0/KXbE/PnquOWMHG4njo7fXUBMKNZrF8dHv8v91K8kvJl2n58psKoh0UdXz
P6bK8eKPmXASzgr6K7YH4W06H8jedwiZcCbyBdhRKWHI1qQ7IgFOGtYPde5E
JqJJdNMDHSu3wb/vWPdq5Nj5egH/DLpzGIwmSdEE/87PpfjH7Vd6C2d7K4gL
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
dXUNaqvL4frMFem5paipYQ1J3whOzq9KIF+voC/t1RuWym526cJiE1FeWoin
T12RmFGI/MxEJKdXOiGVr/U8kCbWWTSxnDGXTBPbiuAn18R7aM6NRlhCGupq
q+Di4o6MwhcoL0iFSliW+fqH+OxUGIdjA453nTBa1L8Ii/4xDSL98xT1z0VJ
/3ZW59jD24r2tnq4u3sgr6IerW2tGJtZta9//878h0vTCSOMY5ruQMvkmeTN
9APRM6r2e7iDC8Mmfc5A6ZkL7SLg9U+Yx9/joPk9DprfA1x+IsvWCd4qi2Qz
ieTAmJVIrnCRHJ5eNrezoiZtrK5b8NOuJllqf9PSQSul0M2lM4N185lsm24h
i7XjQieLuJ4KrXmwF/rH0Hi8w6RF40mkyX7Hrt8f4kKYxuhAu64tJUCkacLk
6KClwj894zOTUzg6d0Ca1l7ol4ugnU2hdfLm0tg27Xy6ohe7Ad+F+hnl4NUu
dOOpn98gf+iyWVm86YTFl2doYw3Wc59wbB+wR+jyEMlpaXxi+5u1OPB7ZCVZ
7Pp7ZLELs9jrPXZ7bdtYbJvqXRzvR0piAlIz8rCi5kOOMTXQioT4OBS9aKYC
61LVuGu5iL01uUjMrcXF5SnSszKxa3Tyjnr7nh3tzMHt8Zd40dqDqpxEeATF
Y2l+jKeCW7q7Ee3vhvwmm1Sw6WALKXHRSEuKh5u3H3aPDvn/C1kg3NzWDf2h
A3J++x7KU8Yjw/wES1LGYeaU8ZxyyhimfcSqIlHETpanRyAWttRIj49il7oS
/i7eGJkTO+IcKP7/+tY8XTUf2mFquaWWwcxzxOeUOZdapgjNgPTsLOyzG7ck
Nh4j0/PIzs8F3e5lcXEYmt25YR0R9Pf384rFkojg7XstRg7ioeV56MOjI6zP
TyAhwhepJfI8dDP8QnIV4yHmfWpGOnZPTSiOicPo9AKy8rL5/4tUMRiccbAw
wlf73FK+2s/bEzObOvTW5/J89foM5asDsabWoCgxSClfTW1rUVEhtEz+CiKi
MTw5j7TsDF5LvDI9HWOLu/bZQeoh28lsMvcwlXuYZuuhychU4ttQP+UePucq
8Yx56HHPqTb3HD0N5XBzeQ6fkHBMrmpAKZ+Gsky4PHuKYBUz+yqvLcZUtMwi
tbo0M2R1U422jnboToWKRxeXl045t79WyeAglzmnX8pn2/RLBcw5Pifuhjgv
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
Pvju3yCnuh2jPZW+htelCJTtPMXcEb3o4Oz9HpyH8pY//J8YH78uRpsTb38O
02//E/7tdR8RqLQLr7JErEdXc75SptSTnqlIeiy1lyS7p5BJSX8lvdHRUVl2
T0Om1GORlVKP7ZImyd5UyFg0qNaTZJIe22VNrcdkLOJU60kypYdgUa1ST0vG
elsWdSt/q5T50mM9F4vslXpKmVKP0YNaT5Ipa6daj8lYrgy1niST9NjOgmwh
nFJPKVPqqamDDaqo6UQpU+qpqUMpk/R6enq8qEMp86XX3d3tRRNKmVJPool7
GjJJr6ury0uPydSEoZQp9dREwPY2VJODUqbUU5ODUqbUU1NCR0eHF00oZUo9
dfSvlPnSY6NN6uhfKVPqqaN6pew6PXVUz/abU0f/dXV1Xnq1tbVeUb1Sdp2e
OuJWyl5GTx2ZK2WSHvMkaj0mU0fcStnL6KkjbqXsOj11xK2U+dJj3lGtx2Tq
qFkpu3eNnjpqVspeRk8dNStlL6rHcg2qI1+l7GX01JGvUvYyeurIVyl7GT11
pKqUvYyeOlJVynzpsShMraeUKfXUkapS9rx61/1WHVkqZTfXu4vKykoo/ymX
yrM5Ehvk+/ZsFlQXJiM5v1VrjoTHGPE95Rgxf029/U+hf/sf+xreVE66UQ4r
qINGpUyppw4GWcCpDhqZTB0MslQt6qBRKVPqqYNBFqyqg0YmUweDSpkyWFXr
MZk6QFTKlMGqOkDUkrHAVB0MKmW+9Fiwqg4GlTKlnjoYVMqUQa1aj8nUQaNS
pgxW1cGgUqbUUweDLFhVB41KmVJPHQwqZcqgVh0MKmW+9Fiwqg4GlTKlnjoY
VMqUQa1aj8nUwaBSptRTB4MsgFUHjUqZUk8dICplSj11MMiCWnUwqJQp9dTB
oFLmS48FtepgUClT6qmDQaXsOj11MMgCXXUw2NDQ4KVXX1/vNZyrlF2npw4a
lbKX0VMHjUqZMkhW6zGZOmhUyl5GTx00KmXX6amDRqXMlx4LptV6TKYOGpWy
e9foqYNGpexl9NRBo1L2onoswFYHjUrZy+ipg0al7GX01EGjUvYyeuqgUSl7
GT11MKiU+dJjwb5aTylT6qkDRKXsefWu+606aFTKbq5312sKhzK4FGa2foSO
ET3qSlMQkVYPqzizdWhSh5TwJ2xmqyq4nAz6j5j+rz8t7ONGr8m/+AVM/8XP
32FfXhPnpy7ycdJXNnLJgkF1EMpk6iBUOZrpa4STydRBqHI0UxkMqoNQpUwZ
DGqNcKqDUKVMGSCqg1AtGQvy1COSSpkvPRbkqYNQpUyppw5ClbLrRjjVQahS
pgzefjRyefsjl1ojjS86InlPQ6bUe56RxqtGJNVBo1LmS+9FRiTVQaPWiORV
euqgkY1cqoNLFsxojUiqg0al7Dq9H41c/mjk8kcjlz8auXwevet++6pHLplM
+Y++y8Elm3K8NDmAqPAQJGYVYMsu5Guc6GtGWHAQcsqa2Jojj+DyDawWPUZ+
0PdRHfZd9nodhWEf3mGfWG0PJVlxrhjCsvc7PC8Uy8PDvt0TZWy5sSR7U0P2
w6rHtjZV60kySY/Np1frKWU30VPKWN4t9W8l2aepl5eX56WnlF2nV1pa6qUn
yf6u6OXm5qKsrMxDTyn7u6RXXl7upSfJtPRu8tsX1cvJyfHSU8qUehUVFV56
kuw29LKysrz0lLIfBj323EqtJ8kkPbYtglpPKftvUU+cTaYpu/cjPQ89FkWp
9STZf4t69MlLT5L9MOl9trbcVcp4vWGb1QtJCDSXEDle0Z9+SQx+z0+PYN2x
s2WLcpC8Z9vF4bEAD9L+E64DG9bF3VJ/QgyST4/dsO1xGOaf7fsOeRuGI9cB
fXeK3wR9UoJlhw8q4OzYBbPFJi68vYd96xase07RyAvYdqxs8bW0ThDnx3y2
wOnFZdzOcoWsrG3g8ORcjttZ4k7TDud96bNs0q7VQsU68zSJTrVDJrHo/+To
EPuKfLSmjS1ZXzrnmfuAj3uxyyWNAR/Spdm1e7I+2+zPtG3i9kopJpz7u9jd
9+RwtkJva8tIRb1QrNo7w9raJo5OL177SUl2doQto5EfT7hkb9Bt2uPr+1z7
duw73cpFfxtG4ZmsVHSbaZMliPO4e7g4YXeAF/381A2T2SLfbb791olQA6Tj
siWSJouFF10y37y1js0tExxympa3sKwfxvyWjV9a0zY3ma7tPopz8rFud9+R
yk9X6EzMScPoi+XKcLiP74i17oxg+FRcfbdPfzLTTdq17cuZbYQEHlJ9tWDn
4FC8LOz9p/j0EqtNqJvHDjtVHhPO2UU0mfhFOz08gNFswTmd+uSYTnt0dMSq
LTH92fmF4lB3YNnaxKF48V4XL97F2Qks7Ode5vwkW0yKvX1hozCHfQcWm1NS
kjaikH/zlng1HLvbmFlYko/HmhPVKelqsHvKquORuOvX2ekJTk6Fz/ZdE/YP
j+XEM0x3eWYejuNTMYMU32aWr2UU1oPLrYrdZvfRicdtlqyTDsasOz+XZXxx
547Zyu6d9OcL+rNCAQd2O9wnZ1J3Ar5RhnBNhZXdb8JN3YOZbgUbP+UvsxkW
6y7fukA+LK9wu/JhnQcHOD49/ynJUDrs0ZFQR39alB1QTbDsOhTG3+GbpomH
uVzmT5f3+ER5S+kW7O3AanfKp2PpB6l2CIf5GZweObBpsigq4Lk0wiJs+2Gy
CH8gs07P2K25EHqck3PxFG/wGnBx+bojih17dhzR9dyzGLFl3vu8aKpjbw9u
oRvmhb1Q1EnWeC10Fy7kwt+DzbJN/cCRZB82VhdwcHT6pliHWJU9cBzK5aNa
D3ZXWH7GPfse+3zpAUxbMO4Iw5xSf7FjMVN3KNS5nfVlbBrtcte2Y7HiRGjN
8jV22dbQ2D3sYbbNctkFS+dy7e3CZnd53DPWFYtFl3/rdh3y1gpF/2Mzb1O/
dqr47V1eQTepS2WaLmobZuueqP8Grx92h5tfnqPjE8nUi7NjbG8aWZ2Wkx6x
jSxtdmH/xM31dZaEUWyt1JzIkZk2VzGtX2Q9t1SD9ncsOHAdwelw4uSEVEys
fxGbyVv8pGy8zEp1fY+MOD7mLQ9G4wb1fKevi1dlx2rm+WdYG7fb7Cx5GK8Z
FvuBvPHRxZEdLbWtcJ9eeuh90tkR6q/sNkzbW3SqI0U9pzayv8+amcd15K50
aZ5vyfxzkrkXnq0aLL+ny8VlF+end9jYM/NqThcdco97zrtiVTskT2fa3ZN+
Ry3dzItBvTr3tueK26/sb35CMpEu5N6B54iwy7FHl0U5yvkmz8qyvWMXrTvj
vcyFYLZ4H9+iVmQjD7vJnzgZyR3ZHbyqkTe2082S/Q1z4gtz89gRHDS/Wcdu
oTG5qGfYcx6Ltf0NujPHVHtOqaIdsXv8c6KFLKmQ1KkIN+VnKWzax4HYJt1C
UiFee+wUNh27nFjdEHqNI/chv7hsDF3oPc7hch7K94zVrMMTRT1/i37uwPLi
IoUF1C7p59Q1Ur1wYnFhli3fkX7qcrCUoHvYsdnFa36PXIYVrNWcHZOTtJMl
PAfhsdT6WH8ktnQ5sDp0kP8Vew+bGC/KtYcc3jZd4jO59b9JbcFMVYIq+dER
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\
\>"],ExpressionUUID->"6b71c44b-4fa1-469f-a7c9-cb768bc26f31"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"trained", ",", "testSet", ",", "\"\<Accuracy\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7072312085009947`*^9, 
  3.70723121019877*^9}},ExpressionUUID->"312b1347-9d6e-4f17-b4ad-\
879469313165"],

Cell[BoxData["0.9770833333333333`"], "Output",
 CellChangeTimes->{3.7072312129467583`*^9, 3.707237197542285*^9, 
  3.70723831595794*^9, 3.707239087364221*^9, 3.707239277927479*^9, 
  3.707239386279524*^9, 3.70725353926684*^9, 
  3.707254014592346*^9},ExpressionUUID->"4002f56f-1874-4be6-96a5-\
053b0cbe44b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cm2", "=", 
  RowBox[{"ClassifierMeasurements", "[", 
   RowBox[{"trained", ",", "testSet", ",", "\"\<ConfusionMatrixPlot\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.707231286549103*^9},ExpressionUUID->"81c0677a-74c6-4d99-9536-\
542f02a68d80"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzt3c9rz3EcwPFv0bhoJRdaLX+AgwsRvYkaBw6LuPiR0KTMyGUlOZDW1A4S
i9RwYZQIWxMHJg5LjrbGtlrDvl8rEyeEOaLluz77vr6PT317fL+Xb+/v5dn7
+/58er8X7qqv3TMjl8utmnj9eP/rGkskS8+RJ90L5lYU0vjsz3NO1I6mZQ/S
t0vXhzMfF6eXFw697huoLKTqjt2jY5396e78bV01t+syHxdJsrgONM67WTPw
auLz7yv7cZEki6POk2RsdZ4kY6vzJBlbneffPD1zacuWTYX06WT1kfWN+XS2
9cDQWPvbzMdF8t9u7KgvjM36kHKtKzZU9fSl+z+ft9ma+bhYHPWZpM6TZHlo
3YYkY6vzJBlbnSfJmEZdn3f/kWSpONX7FNnfhiRjG3U+Xyz9LyAZRevzJFna
ru3NX+y6mk8tx2+1HRt+lx6396/r/jKYlozXrTzTP5oWvTy//FHzm9Q8tP3Z
mo+HMx8vSbK4ms+TZGx1niRjq/MkGVudJ8nY6jxJxlbnSTK2Ok+SsdV5koyt
zpNkbHWeJGOr8yQZW50nydjqPElOLxs2t22qvPI+fb1XeN60czCd2tvUebD6
8qS/59rRhtX7qvLp4Yun53b0jKQ7Fbn9i2/0Zv77SJLF1XyeZLkb9Vwh50mR
ZGyLdT7sVJ9jS5L8P63bkGRsdZ4kY6vzJBlbnSfJ2Oo8ScZW50lycpbK8/ae
nyfJ8tB8niRjq/MkGVudJ8nS9k/3C6zPk2R5aD5PkrHVeZKMrc6TZGx1niRj
q/MkGVudJ8nY6jxJxlbnSTK2Ok+SsdV5koxpqe97UCr7P5Nk1prPk2RsdZ4k
Y6vzJBnTUl+fJyPpfhOnUvN5koytzpNkbHWeJGOr8yQZW50nyfLyO8mRLaE=

   "], {{0, 0}, {64, 64}}, {0, 1}],
  Epilog->{},
  Frame->True,
  FrameLabel->{
    FormBox["\"predicted class\"", TraditionalForm], 
    FormBox["\"actual class\"", TraditionalForm]},
  FrameTicks->{{{{63.5, 
       FormBox[
        RotationBox["\"\:4e00\"", BoxRotation -> 0.], TraditionalForm]}, {
      62.5, 
       FormBox[
        RotationBox["\"\:4e01\"", BoxRotation -> 0.], TraditionalForm]}, {
      61.5, 
       FormBox[
        RotationBox["\"\:4e02\"", BoxRotation -> 0.], TraditionalForm]}, {
      60.5, 
       FormBox[
        RotationBox["\"\:4e03\"", BoxRotation -> 0.], TraditionalForm]}, {
      59.5, 
       FormBox[
        RotationBox["\"\:4e04\"", BoxRotation -> 0.], TraditionalForm]}, {
      58.5, 
       FormBox[
        RotationBox["\"\:4e05\"", BoxRotation -> 0.], TraditionalForm]}, {
      57.5, 
       FormBox[
        RotationBox["\"\:4e06\"", BoxRotation -> 0.], TraditionalForm]}, {
      56.5, 
       FormBox[
        RotationBox["\"\:4e07\"", BoxRotation -> 0.], TraditionalForm]}, {
      55.5, 
       FormBox[
        RotationBox["\"\:4e08\"", BoxRotation -> 0.], TraditionalForm]}, {
      54.5, 
       FormBox[
        RotationBox["\"\:4e09\"", BoxRotation -> 0.], TraditionalForm]}, {
      53.5, 
       FormBox[
        RotationBox["\"\:4e0a\"", BoxRotation -> 0.], TraditionalForm]}, {
      52.5, 
       FormBox[
        RotationBox["\"\:4e0b\"", BoxRotation -> 0.], TraditionalForm]}, {
      51.5, 
       FormBox[
        RotationBox["\"\:4e0c\"", BoxRotation -> 0.], TraditionalForm]}, {
      50.5, 
       FormBox[
        RotationBox["\"\:4e0d\"", BoxRotation -> 0.], TraditionalForm]}, {
      49.5, 
       FormBox[
        RotationBox["\"\:4e0e\"", BoxRotation -> 0.], TraditionalForm]}, {
      48.5, 
       FormBox[
        RotationBox["\"\:4e0f\"", BoxRotation -> 0.], TraditionalForm]}, {
      47.5, 
       FormBox[
        RotationBox["\"\:4e10\"", BoxRotation -> 0.], TraditionalForm]}, {
      46.5, 
       FormBox[
        RotationBox["\"\:4e11\"", BoxRotation -> 0.], TraditionalForm]}, {
      45.5, 
       FormBox[
        RotationBox["\"\:4e12\"", BoxRotation -> 0.], TraditionalForm]}, {
      44.5, 
       FormBox[
        RotationBox["\"\:4e13\"", BoxRotation -> 0.], TraditionalForm]}, {
      43.5, 
       FormBox[
        RotationBox["\"\:4e14\"", BoxRotation -> 0.], TraditionalForm]}, {
      42.5, 
       FormBox[
        RotationBox["\"\:4e15\"", BoxRotation -> 0.], TraditionalForm]}, {
      41.5, 
       FormBox[
        RotationBox["\"\:4e16\"", BoxRotation -> 0.], TraditionalForm]}, {
      40.5, 
       FormBox[
        RotationBox["\"\:4e17\"", BoxRotation -> 0.], TraditionalForm]}, {
      39.5, 
       FormBox[
        RotationBox["\"\:4e18\"", BoxRotation -> 0.], TraditionalForm]}, {
      38.5, 
       FormBox[
        RotationBox["\"\:4e19\"", BoxRotation -> 0.], TraditionalForm]}, {
      37.5, 
       FormBox[
        RotationBox["\"\:4e1a\"", BoxRotation -> 0.], TraditionalForm]}, {
      36.5, 
       FormBox[
        RotationBox["\"\:4e1b\"", BoxRotation -> 0.], TraditionalForm]}, {
      35.5, 
       FormBox[
        RotationBox["\"\:4e1c\"", BoxRotation -> 0.], TraditionalForm]}, {
      34.5, 
       FormBox[
        RotationBox["\"\:4e1d\"", BoxRotation -> 0.], TraditionalForm]}, {
      33.5, 
       FormBox[
        RotationBox["\"\:4e1e\"", BoxRotation -> 0.], TraditionalForm]}, {
      32.5, 
       FormBox[
        RotationBox["\"\:4e1f\"", BoxRotation -> 0.], TraditionalForm]}, {
      31.5, 
       FormBox[
        RotationBox["\"\:4e20\"", BoxRotation -> 0.], TraditionalForm]}, {
      30.5, 
       FormBox[
        RotationBox["\"\:4e21\"", BoxRotation -> 0.], TraditionalForm]}, {
      29.5, 
       FormBox[
        RotationBox["\"\:4e22\"", BoxRotation -> 0.], TraditionalForm]}, {
      28.5, 
       FormBox[
        RotationBox["\"\:4e23\"", BoxRotation -> 0.], TraditionalForm]}, {
      27.5, 
       FormBox[
        RotationBox["\"\:4e24\"", BoxRotation -> 0.], TraditionalForm]}, {
      26.5, 
       FormBox[
        RotationBox["\"\:4e25\"", BoxRotation -> 0.], TraditionalForm]}, {
      25.5, 
       FormBox[
        RotationBox["\"\:4e26\"", BoxRotation -> 0.], TraditionalForm]}, {
      24.5, 
       FormBox[
        RotationBox["\"\:4e27\"", BoxRotation -> 0.], TraditionalForm]}, {
      23.5, 
       FormBox[
        RotationBox["\"\:4e28\"", BoxRotation -> 0.], TraditionalForm]}, {
      22.5, 
       FormBox[
        RotationBox["\"\:4e29\"", BoxRotation -> 0.], TraditionalForm]}, {
      21.5, 
       FormBox[
        RotationBox["\"\:4e2a\"", BoxRotation -> 0.], TraditionalForm]}, {
      20.5, 
       FormBox[
        RotationBox["\"\:4e2b\"", BoxRotation -> 0.], TraditionalForm]}, {
      19.5, 
       FormBox[
        RotationBox["\"\:4e2c\"", BoxRotation -> 0.], TraditionalForm]}, {
      18.5, 
       FormBox[
        RotationBox["\"\:4e2d\"", BoxRotation -> 0.], TraditionalForm]}, {
      17.5, 
       FormBox[
        RotationBox["\"\:4e2e\"", BoxRotation -> 0.], TraditionalForm]}, {
      16.5, 
       FormBox[
        RotationBox["\"\:4e2f\"", BoxRotation -> 0.], TraditionalForm]}, {
      15.5, 
       FormBox[
        RotationBox["\"\:4e30\"", BoxRotation -> 0.], TraditionalForm]}, {
      14.5, 
       FormBox[
        RotationBox["\"\:4e31\"", BoxRotation -> 0.], TraditionalForm]}, {
      13.5, 
       FormBox[
        RotationBox["\"\:4e32\"", BoxRotation -> 0.], TraditionalForm]}, {
      12.5, 
       FormBox[
        RotationBox["\"\:4e33\"", BoxRotation -> 0.], TraditionalForm]}, {
      11.5, 
       FormBox[
        RotationBox["\"\:4e34\"", BoxRotation -> 0.], TraditionalForm]}, {
      10.5, 
       FormBox[
        RotationBox["\"\:4e35\"", BoxRotation -> 0.], TraditionalForm]}, {9.5, 
       FormBox[
        RotationBox["\"\:4e36\"", BoxRotation -> 0.], TraditionalForm]}, {8.5, 
       FormBox[
        RotationBox["\"\:4e37\"", BoxRotation -> 0.], TraditionalForm]}, {7.5, 
       FormBox[
        RotationBox["\"\:4e38\"", BoxRotation -> 0.], TraditionalForm]}, {6.5, 
       FormBox[
        RotationBox["\"\:4e39\"", BoxRotation -> 0.], TraditionalForm]}, {5.5, 
       FormBox[
        RotationBox["\"\:4e3a\"", BoxRotation -> 0.], TraditionalForm]}, {4.5, 
       FormBox[
        RotationBox["\"\:4e3b\"", BoxRotation -> 0.], TraditionalForm]}, {3.5, 
       FormBox[
        RotationBox["\"\:4e3c\"", BoxRotation -> 0.], TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["\"\:4e3d\"", BoxRotation -> 0.], TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["\"\:4e3e\"", BoxRotation -> 0.], TraditionalForm]}, {0.5, 
       FormBox[
        RotationBox["\"\:4e3f\"", BoxRotation -> 0.], TraditionalForm]}}, {{
      63.5, 
       FormBox["30", TraditionalForm]}, {62.5, 
       FormBox["30", TraditionalForm]}, {61.5, 
       FormBox["30", TraditionalForm]}, {60.5, 
       FormBox["30", TraditionalForm]}, {59.5, 
       FormBox["30", TraditionalForm]}, {58.5, 
       FormBox["30", TraditionalForm]}, {57.5, 
       FormBox["30", TraditionalForm]}, {56.5, 
       FormBox["30", TraditionalForm]}, {55.5, 
       FormBox["30", TraditionalForm]}, {54.5, 
       FormBox["30", TraditionalForm]}, {53.5, 
       FormBox["30", TraditionalForm]}, {52.5, 
       FormBox["30", TraditionalForm]}, {51.5, 
       FormBox["30", TraditionalForm]}, {50.5, 
       FormBox["30", TraditionalForm]}, {49.5, 
       FormBox["30", TraditionalForm]}, {48.5, 
       FormBox["30", TraditionalForm]}, {47.5, 
       FormBox["30", TraditionalForm]}, {46.5, 
       FormBox["30", TraditionalForm]}, {45.5, 
       FormBox["30", TraditionalForm]}, {44.5, 
       FormBox["30", TraditionalForm]}, {43.5, 
       FormBox["30", TraditionalForm]}, {42.5, 
       FormBox["30", TraditionalForm]}, {41.5, 
       FormBox["30", TraditionalForm]}, {40.5, 
       FormBox["30", TraditionalForm]}, {39.5, 
       FormBox["30", TraditionalForm]}, {38.5, 
       FormBox["30", TraditionalForm]}, {37.5, 
       FormBox["30", TraditionalForm]}, {36.5, 
       FormBox["30", TraditionalForm]}, {35.5, 
       FormBox["30", TraditionalForm]}, {34.5, 
       FormBox["30", TraditionalForm]}, {33.5, 
       FormBox["30", TraditionalForm]}, {32.5, 
       FormBox["30", TraditionalForm]}, {31.5, 
       FormBox["30", TraditionalForm]}, {30.5, 
       FormBox["30", TraditionalForm]}, {29.5, 
       FormBox["30", TraditionalForm]}, {28.5, 
       FormBox["30", TraditionalForm]}, {27.5, 
       FormBox["30", TraditionalForm]}, {26.5, 
       FormBox["30", TraditionalForm]}, {25.5, 
       FormBox["30", TraditionalForm]}, {24.5, 
       FormBox["30", TraditionalForm]}, {23.5, 
       FormBox["30", TraditionalForm]}, {22.5, 
       FormBox["30", TraditionalForm]}, {21.5, 
       FormBox["30", TraditionalForm]}, {20.5, 
       FormBox["30", TraditionalForm]}, {19.5, 
       FormBox["30", TraditionalForm]}, {18.5, 
       FormBox["30", TraditionalForm]}, {17.5, 
       FormBox["30", TraditionalForm]}, {16.5, 
       FormBox["30", TraditionalForm]}, {15.5, 
       FormBox["30", TraditionalForm]}, {14.5, 
       FormBox["30", TraditionalForm]}, {13.5, 
       FormBox["30", TraditionalForm]}, {12.5, 
       FormBox["30", TraditionalForm]}, {11.5, 
       FormBox["30", TraditionalForm]}, {10.5, 
       FormBox["30", TraditionalForm]}, {9.5, 
       FormBox["30", TraditionalForm]}, {8.5, 
       FormBox["30", TraditionalForm]}, {7.5, 
       FormBox["30", TraditionalForm]}, {6.5, 
       FormBox["30", TraditionalForm]}, {5.5, 
       FormBox["30", TraditionalForm]}, {4.5, 
       FormBox["30", TraditionalForm]}, {3.5, 
       FormBox["30", TraditionalForm]}, {2.5, 
       FormBox["30", TraditionalForm]}, {1.5, 
       FormBox["30", TraditionalForm]}, {0.5, 
       FormBox["30", TraditionalForm]}}}, {{{0.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {3.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {4.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {5.5, 
       FormBox[
        RotationBox["29", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {6.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {7.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {8.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {9.5, 
       FormBox[
        RotationBox["29", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {10.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {11.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {12.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {13.5, 
       FormBox[
        RotationBox["31", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {14.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {15.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {16.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {17.5, 
       FormBox[
        RotationBox["33", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {18.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {19.5, 
       FormBox[
        RotationBox["31", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {20.5, 
       FormBox[
        RotationBox["29", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {21.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {22.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {23.5, 
       FormBox[
        RotationBox["31", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {24.5, 
       FormBox[
        RotationBox["29", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {25.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {26.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {27.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {28.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {29.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {30.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {31.5, 
       FormBox[
        RotationBox["50", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {32.5, 
       FormBox[
        RotationBox["29", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {33.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {34.5, 
       FormBox[
        RotationBox["10", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {35.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {36.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {37.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {38.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {39.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {40.5, 
       FormBox[
        RotationBox["32", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {41.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {42.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {43.5, 
       FormBox[
        RotationBox["31", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {44.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {45.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {46.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {47.5, 
       FormBox[
        RotationBox["36", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {48.5, 
       FormBox[
        RotationBox["26", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {49.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {50.5, 
       FormBox[
        RotationBox["29", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {51.5, 
       FormBox[
        RotationBox["28", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {52.5, 
       FormBox[
        RotationBox["29", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {53.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {54.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {55.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {56.5, 
       FormBox[
        RotationBox["29", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {57.5, 
       FormBox[
        RotationBox["29", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {58.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {59.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {60.5, 
       FormBox[
        RotationBox["30", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {61.5, 
       FormBox[
        RotationBox["31", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {62.5, 
       FormBox[
        RotationBox["31", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {63.5, 
       FormBox[
        RotationBox["28", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}, {{0.5, 
       FormBox[
        RotationBox["\"\:4e00\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {1.5, 
       FormBox[
        RotationBox["\"\:4e01\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {2.5, 
       FormBox[
        RotationBox["\"\:4e02\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {3.5, 
       FormBox[
        RotationBox["\"\:4e03\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {4.5, 
       FormBox[
        RotationBox["\"\:4e04\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {5.5, 
       FormBox[
        RotationBox["\"\:4e05\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {6.5, 
       FormBox[
        RotationBox["\"\:4e06\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {7.5, 
       FormBox[
        RotationBox["\"\:4e07\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {8.5, 
       FormBox[
        RotationBox["\"\:4e08\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {9.5, 
       FormBox[
        RotationBox["\"\:4e09\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {10.5, 
       FormBox[
        RotationBox["\"\:4e0a\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {11.5, 
       FormBox[
        RotationBox["\"\:4e0b\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {12.5, 
       FormBox[
        RotationBox["\"\:4e0c\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {13.5, 
       FormBox[
        RotationBox["\"\:4e0d\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {14.5, 
       FormBox[
        RotationBox["\"\:4e0e\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {15.5, 
       FormBox[
        RotationBox["\"\:4e0f\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {16.5, 
       FormBox[
        RotationBox["\"\:4e10\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {17.5, 
       FormBox[
        RotationBox["\"\:4e11\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {18.5, 
       FormBox[
        RotationBox["\"\:4e12\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {19.5, 
       FormBox[
        RotationBox["\"\:4e13\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {20.5, 
       FormBox[
        RotationBox["\"\:4e14\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {21.5, 
       FormBox[
        RotationBox["\"\:4e15\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {22.5, 
       FormBox[
        RotationBox["\"\:4e16\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {23.5, 
       FormBox[
        RotationBox["\"\:4e17\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {24.5, 
       FormBox[
        RotationBox["\"\:4e18\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {25.5, 
       FormBox[
        RotationBox["\"\:4e19\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {26.5, 
       FormBox[
        RotationBox["\"\:4e1a\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {27.5, 
       FormBox[
        RotationBox["\"\:4e1b\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {28.5, 
       FormBox[
        RotationBox["\"\:4e1c\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {29.5, 
       FormBox[
        RotationBox["\"\:4e1d\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {30.5, 
       FormBox[
        RotationBox["\"\:4e1e\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {31.5, 
       FormBox[
        RotationBox["\"\:4e1f\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {32.5, 
       FormBox[
        RotationBox["\"\:4e20\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {33.5, 
       FormBox[
        RotationBox["\"\:4e21\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {34.5, 
       FormBox[
        RotationBox["\"\:4e22\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {35.5, 
       FormBox[
        RotationBox["\"\:4e23\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {36.5, 
       FormBox[
        RotationBox["\"\:4e24\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {37.5, 
       FormBox[
        RotationBox["\"\:4e25\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {38.5, 
       FormBox[
        RotationBox["\"\:4e26\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {39.5, 
       FormBox[
        RotationBox["\"\:4e27\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {40.5, 
       FormBox[
        RotationBox["\"\:4e28\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {41.5, 
       FormBox[
        RotationBox["\"\:4e29\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {42.5, 
       FormBox[
        RotationBox["\"\:4e2a\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {43.5, 
       FormBox[
        RotationBox["\"\:4e2b\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {44.5, 
       FormBox[
        RotationBox["\"\:4e2c\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {45.5, 
       FormBox[
        RotationBox["\"\:4e2d\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {46.5, 
       FormBox[
        RotationBox["\"\:4e2e\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {47.5, 
       FormBox[
        RotationBox["\"\:4e2f\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {48.5, 
       FormBox[
        RotationBox["\"\:4e30\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {49.5, 
       FormBox[
        RotationBox["\"\:4e31\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {50.5, 
       FormBox[
        RotationBox["\"\:4e32\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {51.5, 
       FormBox[
        RotationBox["\"\:4e33\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {52.5, 
       FormBox[
        RotationBox["\"\:4e34\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {53.5, 
       FormBox[
        RotationBox["\"\:4e35\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {54.5, 
       FormBox[
        RotationBox["\"\:4e36\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {55.5, 
       FormBox[
        RotationBox["\"\:4e37\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {56.5, 
       FormBox[
        RotationBox["\"\:4e38\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {57.5, 
       FormBox[
        RotationBox["\"\:4e39\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {58.5, 
       FormBox[
        RotationBox["\"\:4e3a\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {59.5, 
       FormBox[
        RotationBox["\"\:4e3b\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {60.5, 
       FormBox[
        RotationBox["\"\:4e3c\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {61.5, 
       FormBox[
        RotationBox["\"\:4e3d\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {62.5, 
       FormBox[
        RotationBox["\"\:4e3e\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}, {63.5, 
       FormBox[
        RotationBox["\"\:4e3f\"", BoxRotation -> 1.5707963267948966`], 
        TraditionalForm]}}}},
  FrameTicksStyle->9.968422169295351,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->769.8779697766477,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{3.707231290181637*^9, 
  3.7072372259749002`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy0vVdza0mWLla6p2u6W6G590boQXqckN70L/QiPelZ0r09011VXdWnqs6h
NyAIkAAJgCQMYehJgAYEvffeexL0BvSgd6ABSRj6T2tvAHsDNT2jCEWIEVXF
2kjk+jJzrW+tlXtl8v/4Lubzj1+/i/n5h+/+6X+P+i7i888/RP/T/xYeRY8+
/TfffPPpP9A/v/+nb5jf8c03gX/95udb5l//6vH/+9PP7O+f6F8fGO1tQvfU
pu+Dgr/b6B21JVqUNs5980f/s/f390C/3/yHoM4Cz771P/sIavft3/nup0A7
7qt/v93vAs+C2nFy6csf/84z9t//978a2P/CAm6pNCBGIEJGugJqQxHsF480
Xi+azAWwXTyw7d3OM5QXGpAqS0W6Ohur++fsd+cHWyGXpUClM8BYXIS963uM
9zWhd2oHH68edNWVQZaaijT6zvqRA8/3JyjQKJBX24e761OU5unYPjMyc2E7
umJl2demoZLLkKZUITe3CJOLdt8c/Q94dByiOEeL1FQpskyVuHn0oK+9DhPL
hzjdXYCahpBBXzNX1cCYX4SDm3uMtldBRt3JFWlo6ZvD88szhlorg57N4uXd
P0f/1781RxYtopJUWN3cRFWBGsnqMni9j9CLojCxf0NNXlGTI4c004h9+z7a
KwqoTTEObHOIiYhE/8wSpvsb8fPffsbiiQONpTpY2qxYHm5AhCAFS7YtdFVk
I06Rh42pTkQL5VjfP4ZZlwJFtpnts6k0CxJtOR7uziCJjUJ52wjWFscR+fPP
aOhf9a37/0j69gSzVoK07DJsb20iSyZCXlUbSgq0aO6ZQ1lWKjKNTTg+OkCt
MRO/RMhhW51CXIwQ06tb2FwYQVxEPMamBiGITcT02jb7LOZrFDYuH/+daXpH
gyUbtYPrPpW5WENcXApOHQ7kSeMxfXgHPN8hPTYcpoZezFutmB4fQXdvP7ob
SqDIMfvV+glGtQTzpC7N1F9N2wyaKgwobZr2ffzqwvrGFram2pGSVYEntxPy
2AiUt/SzfU6NDaGjewg7S/2IEarw8Or7WmNpLhp6lwLT9Oa5gVIYg4Wje/Zj
19UZtnb3UJKfidaBZfS3FCMmMRVtXYMY6a5GXHIO7u7vsbq0iInhXuTo0hAR
J8Lm8QVWl/3PtPSMpmzn2v3vT1N5Fip6l9jnnot1mnopjq+ukEvTNHXgZNBA
FfsVknQtLBUW5GnSEBmfipaqYqTn+qfp3Y28NDHh56epmTSopGnS9/mLBydn
DhzNdyNFb8GT5x6K6C+QqfVsn7nKVITFpmHV2ofYRDU3TdVF+uBpevfcQimK
gfXQ6SeCGzhurlFWoEFT/xruL48w2N+LlsZaaDOSESXKhuP6BBlJAoilclhq
m7C8eQjPwynSxPG+Z3VNpPB2vPnX+98yuuYyFX6Jk2Fp3YbqQg1EyhIyOhcy
Y3+BXG/E+MQ0LHnpkGmLsLO7S9pMzGCowhEZXXR4FPqmFjDcXomff/mCldNr
NLBGN4+VsWaERSdhdnkdLcV6CJVFGGkxI1aqxu7JOSrzFEgn62H6tOQpocit
x4PzHMmx0fT9YSxMDyD851/QMrgWmCaQ0VUYpEjVGbGxsQatTAhzcx8sJgPa
hjZg7a2FVJWHrZ1dDLeUIDIpGycHy4j6EoPRefp8uBkZ9N3D/QXu2Rw9S9fk
w/n0/u9O08xIG3FvMZFfGlSGQuyeOVn+brcUE38aoNSYcHp5hpqSPKSkyqDL
L8PxjYv9rrW/BQqZDJkaHQTR0cRNN5gebseQdQ94e0JPUwX7eXpmDtaY6dBL
8ePnr6jrn4bn3gFLUQ5SiL/1RRacOT0stv2VKajT5FBrMpEgiEXz0FqAv903
RGkFBsjoK9klVcTfbnIrGjT2reHFfYf6sgIo5Aoo0tLRP2fD+9srJrvqkZ7m
fza7gTd6NtEZ+uwdf4e/hezv5EpfXNCLozF76MDy9CBmVg44B3uy0I1EdQme
P8A5dnOeCjVdi+z//YP/GWO1xTnpqO1eCl6A3wh6daO1qhR7jgdM9Daif2qL
E/RCLLW8uct6mj9wnX5gqKMR44v73/w+SNBARwMmlw//tSD+5/9r1PP/w9Pv
Asjf3/D6xqoqq5iBEb68snb+jTAwEy+vgR64dsHP/k//s7fXV4p12Ajmm9a/
0+6/9z97J7lvvqAoZGZf/XL/+He+G5D7Ss8CMVLgu4zOBfr7X7l2L1y7/+Qb
9v8UEPX2jHFSx4b2aS70OtycI+3Pxf7lvT+8+wMLaXt+FMWVjXD7+3q6OUCe
QYPJFfvv/M1uT7ZhKijFscPjB+tFRRHjuaYY3eGCxdcnCmzq0NQ5y0m1b0xD
nZmHg6vHEKmb1mGUVjXD45fqdewjV68hx34QiCmvj2zIzdRg9fCS6+5gbQoZ
MjlWDi64GNX7eI2aUiPmds65dlMdZuRbmuF6euVj2RcvxVg1aO2Z59rtrkxA
oy3A0bXrm8Borw/XKU4z4+Lu2Yftw0UhYRYx6xzePrjReu4viSZy0DKxyXXn
vNhDjjodjaPrIWIHmqvQ3rfItdtaGkWmrggnt56gWXnH2mQfyura4RcM1xmF
SjoN5rdPA+iu9ldhLCiH4+HF1+btAaYcAzpGF0LQOS9QSbHv0uE1J3WkyQRj
TSc8L+9BUt+wMt4Dc0Mn/B3i8XQDBl0mlnbOAlIvdpdRVGAhbvTp68frPYqy
9OgaX2J4LtCbmxxShakIK8c3/r6ITBoKUVzbDe/rewDc+7MbPXUV6B5Z58Ct
zfZDm1WMi3tvCLjFkS5Ymno4v3x/tAq9TouV/YsAONftKcpJ6tqpk5PaX5eP
kvpePL1xUt8oNG6vMqG6uY+T+vR4hfI8Lcobu0Okzg91oIJcZSDTuSO3qNPp
sH5wFZB6umlFUVEV7r2+Rm9PN8gjYP0z64xZBnp7vCbvYiyC7fzB39cbemvy
YG4awPPbRwDcq/eB4vki1LUPcuC8D5cozclEZUsfp5zHFEYUFVXj8cnX2av3
miI8LQbJMQVLdRyhzGjE1tWjf0Ze0V2VQ/HoEJ7fg6Q+oq2yDEPTO5xU62gH
DPm01O5nToeZr0/3taC6Y5hr59i1QqvLwtbJrR/d73FIWZLRWAu3X5We3ZfI
Jo87srDNjeD+0s5C27n2k8nHMzoqslBJmcPLBzeClycPDnd3YJ2ZRENtJYZp
gFe7s9DqcyiYuAv0trM4Br02GxeugM28wzrUirT0TFw8Pgd6uz3dQXGREQd3
/nmj0Kix1ECucxKvH/gdN85nHNoPSWs+eOf3/oyR9lo0DfGsdrY2jMwshtUe
uHHdHBNJFplw5PQjefOgvlhHJDnNiAhM5bPrhrJ2E+bWTrjuhqj7/LIGPHiD
2IoCnWFiq+ZhK9fuZHmQbKQAh45QMt2aG0JxWRszfeyP6+4IWlUmZm1HAXSO
QxuhK8ZpgDYo/qih0LRpYI4xrYDUpwcHqotNWLCdcVL7W6pQWM5w6VuIVNvM
AErKOxDwYI83dmQqtbBunXBkZScqNZbizOVv9PKAqqJMtAzNB0v1EpVWmUxY
2rrgpPY2VaKoohXu5zduTt4pee9rrETHxDLvYKw90OYYcXrr/g2V9qKsoouz
4PurPRbdIk9qXuLICqMJKztX/kYf6GooR3FVO4nleYPYqru2FEUNvPK/UAbC
JCV5Nf281I93otJuyvN7uB2Xu4ttaEjq8t55QMdOt5dYJd44feD9gXUI8jQN
1k8euMG6b05Rkq3FyCLvX27IJerS5Ria3+DavT250EE5mKl5jGv37L5GRb4W
hfXDnH6ebi3AWGLBdcACqE1Znho9k2vBzOG+OYG50ATbwa1/DG8UP5aQg+gl
Cv8IltpebUa/lUdnG2+BnnFNjwEKpzDn/RVzZI95BWa4ArPy5kVfg5mWzcQ8
4ybwcH0WmYZ87F4GwowPrE71Qp6hw86FO5i0WitLMbjAk9baaCMMRRW4dj3x
pMWIHmhFVdC6XRysQK0yYPPkhpuYg7UZmMqq4fTr6Nv9OXlUNQatW8ET80C8
VVpQjN3TAJG/oN5chMpWotQ3TpdfKKVtrijByMoeJ3V5qA5ZpirccpT6RzZE
m+xpQGFxFUVT/iV5caOz2oSswnLm2Tf/mW3rj+r+iG1rN75GJmBg2gav6wEu
7zOZ+jmMmVLIKE9zvwc22v4I5+kWkiK/oKJjEG6iUue9i4jskRS5CGHxcsq1
PFzbj+c76NOTkJZThbsHanvnJLMhJzjahdjIMIzbTjjYtulOfI1KxNDsNjyP
94ThhQz/FAWqZCiyKBUOwnB3vAExYajuGvZheHCR3jyiozofYQlpOLvz8hhe
7pApF0GVV0H641v/o9UxCCJ/xs+fwym4O+PaMubdbtQgMUVJeuGE03lHAf07
TjZnIRbEwNwxy+FdnWglvCKMze9Suk94n15w7zhGboYYGbnlePrg8b6TL1XL
EqEqqMc9YXA67ynYf8XMYCtiIiMwu3sZgqG1KAMiWSZs/mjHRTFsiigOP1Ia
bu5e5DAsjzbha7QYE4v7LAY3YXBeHiI7TUiyKhna5vp17C1BGP4VDf2T8Hjd
uH9w49VzhyZzFiJFalw/vvB43VfIkCZAa2zEo8uH9+PjBZO9TYQ3Egv26yC8
b2jISUNSmhb26wda4ztKjD5I+SeQEBuN2v4lDu/l9jwEhKFpkPJpr4vmgsFw
i4ZSPaKStLhxvXL9vrkuoEgWQF/cgke3lzA8EA++YLy7HjFRUVg+uuUx0FzW
ZsmQnGHAIeX6AQz7K+MQxESjYWiVwzDbV42wOClm147gfnDC8/yKm7M96FLj
oStpZLwH1++5bQbx4WFoG53z4/WQe7tGrUmLaIkBTs9bEIYXVOtSIVFl4+jO
hTsGAyVWe0sjiCMMzaMbHB9N91axGObW93zEQHNgVIrwt59+Qk5JUwDq2fok
4kh8x9g8iX/0iX90kKNTIzYlG/dP75z4Z+cJpIlxyLV0wePx4o6m650CjOG2
SsRExzFRIm8SFKNYNMlIpfTpxOlmob69v2N7YYjaRqN9couDOt5ZjnBBKuY3
7T6oRO4F6QkE9W/IN7cGoD5RYJCcEIuCym6CSuLvHym1fMJgiwUxMfHYvnTx
4omlzaokyHUFOLv3cOK3rAO0sjHo5GLG/5Zl6pG2UoQnKLC8fQ7XvRNeygwv
KOpQiqORX93FUGmg68PFYcSEh6N3eoVm4REPLi+e7i9gzs2AIK2AEpQPDoaH
ogpRfAwlLn3wehki80HuayxDTFwC9q6DiIz4syQ9EWlZJlw8eFnIzNuKjdle
RBHkHus+T2QTPYgKC4dUKsFP3/+IjqkNin4uYNTLkKgqZXwdj8Gxg/hYIpbG
Xnh8uwmw9lQh/MvfEBEpxsn9M2+Uzy7kpQqgyi9jvBFuGTIlDMsTnQiPiMHY
6jH31mRlqAFJilwmCfaHm3/E1lgbO70jS9twu4iwPM80B0co1KYiWWeh6D2I
sJ4ekCONg6aQwnVO1huWxtoRFhGLyfXTIMUnP27JRmxyJnaIsO5pbij/wOHm
AlLiw1DRNcnNzcZwC2GIxdjKDtxE8m5yNG7HIfI0UkgNVex+Ee9o1hAbE0Ph
+ziePG6WLN5oDloteYhLlOLsgSesN48ThqQYIizyhZ4nWh8nafkr5kda8DUi
DjOb5yFk0VimR5xUj73TOw6vfcMKSdxX1PTyJH93vEIWEYOajkk/Bg9eydk1
mbMRL5ZRcsATwJv7FjpSSX1JDe5YDPcshrnBRsIQT47mMoQs6oszEZ9qgP3c
yWJ4YQhrbRbJsV9RN2DlMCz11rImNLVxABdD8uQYHy72YCDHqshvCCGs64MF
Vh/ru2cILxEWkffL0z0aSvRISE6Dw/MehOGZIk01EmTZOLy892EgwtpdmYY4
5isahxc5FljsIRaJE2J8xUdYH8/3KNTJ8dPf/oa0Io4FrvbmEEnim3rnWPEP
jHivk92qFkozcO3lxb9QDqoShiPb3EwZoS9C2rT2I+zLr/gbxSJL+84QqJZ8
JUTpObBf+sJH54kNMsFX/PTjZyLIFQ7qXIcZMfFiTK35COv96Ra5mlT8+Plv
UJZ08oR1joz4cORXtVKi7ePLD2Zzq6sKX8itrx/f8eLfibBy0iHKKMSp44EN
Yxhqt82PQhj1hbFwbrWmmksRS+IXds/wSO7FS+7l9pjIKoXcaVknQ1Zcv6eb
kwiLjEX78IxvF4LJpSlh/eXzjxCnaPEY5L69tydQxH9FYXUHnF7fnsUKWf6X
X3/BzzFJ2Dhx8ZzdYEJsQjJN4QUe730Ybo7WkS4RwGDpCUA9Wh8l8XHoHFnG
k/uRvOwTvOReyrPJm2dk4f6VF88YqSwmDKaGLjw++aeL3fYqw5eYZIqWePdC
rpslFWlmCa5uXex0vVEKs0ppnYCitr6FXQ7qcE0BGXMKVg+v8EBQn17e4LCv
QJ4Uj9zqgQBU+8owa0M94wu+vIs8W0uxhgK4H5GSTjz3r2PageoslHRa2Yka
oriwbWbTpw+3+9BoVbj08qPbmuuDUlPGfr690I8cUwd8P68wKDRY2nHwlH2x
CXm6Cje0Bi+X28jOzcO9P/8YqtGjdpSPd3or9TD733z1V+ai07rN/v52vQO1
TgPHM49hY6qbnpWzn9vmepBX2uXH8AytTI3V/Rt+NU7WkKbWwOnPQW8O1kgR
w1DbN4VqvRLTtuMg23FBl5yKlWMmu/DAkJmFvQvf5s3mDKW42c0c3k5zJioH
19jPusuz0bPks6HnSxvUei1uX3i8j0SNqRmkpEyvhCc73wiXH3GPRYOmaVuQ
RtxDLVFg68LX4tl1CT2tsN7UhL5OC0raebprK1WjdsS3Vp1mA/pXjtjfvWdr
UOn1TDLF9bs41AJdbh37+dJ4G4yVg34Ebqgkauyc8lp5T9SYqtSzKdHjwRKy
C4u59KijTIk2604Q3juoRCnYdjAp7T0yKaY7ufWlt0sjrcgu6uTwzvdTgljQ
yH7GuJuSmmF/r4/ISFZj/4KPfO6IH1NUWewu7P3ePLKNZdyObGtxOjoX93kM
LzfIIMvYo0nHxy00hOHc6dtjmR9sQq6ph8NQX5iOlhnfWjWbMjG6dc7+/nBg
hSo7l9mB5/qd6a5FTjH7igEzA42Ufo/7ETiRlqTGUXDY8+xAujAFB05S9nfK
YZTZuPRv1M72NSC/tD8kb6nNl6N7+cTX3asH1XlEmuoiTPXR2pTUcHgnO6qR
V+azscneelgCb3FpnHKxhplrrt8r2wRSMvPZjx22SYqPK7mtl4ZCOQbWT4LC
AMoZElJwwryQfiH/kpGDG4+v9WRXLYyW4SC8r6jKkaF//cInmkI8S7YcSdpi
Sp+bYTI3cHgviClTtEVsu4v1ceRQUh/YcqgtkGHIxocXr+4zyAnDBaNcT2dQ
ZuQisDc41l6N4qpRPrqlMMCSLUPf6qWvr3w1Zo+c/rGOQl1QzOydB7oebjTD
VNXPfjxEXdV2+OgNzxdIFRGdcOnTtzhdGUSqvpj9+Gx5GHnldf7P/hFVuakY
23Yg8PP8cEKuNBUORtPcx8jIyONekA81V6Cslo/gViga0ZhqKXU6h1xC5hjY
2/ecQCIy0HTzEdHBTBtUphpOzjZFy2HhURiZXUKeXIEjJ7/MXqcdKZS6M5T2
9rCPdKURbv/WfIfFiPqOeW5sjKptUrLwy4/fQ5lVivFxZoNqZGSEUA4ODmHr
4JRtGei7rSQXtZ2zbF+t1cXoHLWxv789HkAizoLzOTgr2IVUmA6GLF/udpCu
MnGvklrNRWjsXuKX79WNXLUU1gOGBJ9RnKXEpsNHKoczLciqaAxOTpqNOajv
mWc/bqowoWdii/395X4PkqQcPASx685EIzKMDb5pG2uBqbkvsFjkWyVYCmK2
x6stSv2UYJTee72JDOYNr791Y3EBWvtXea1/fkCWSorFY2YnxAOTQYXtG1/r
vckGZFe3cku9OVpHy9fMfmYbbkRJa4BdvcjXSrFyzjPb/fkGpCIVy6iuy3Vk
kDcNbN/WGfPQPrTOY3hyQp8hxerZM+udigjD3t2rf6y1yK3tCMn/anJ1aBvx
eaWa0kIMW/fZ391XNkgl+SADD3S9NlQFTVk7+/Fafy3MHSM+DCQmNzMFG5c8
ucF7A21GCtYvSfQ7xbMGNez3b/7hViG/vjuE3CzZOnRP+5aM2eVvyFNDmJID
63QXlKYW3kL6KqAt9znvZUr0LV1+giUnmEMYthxB5GanHCk1h3sHdbo5h5if
w9A1OoX8gixYd/hNjvfHS2iVKdi587VmIkImBc6r6UZnKU3x8HwI3jJ9Jvqt
vngdr15UZ2VArCjA7GQ7NKUdfrzf4nLPilSJgSU0h90KtaGKY4qyLAOGZvYR
+Hl/PIcqXUbLxQBwIN+gxamv+gdLPaUwtQ4FLd07SjVKDPiXq7QgD7PrZ+zv
DnJMcnkJM27OL7UaUdDsXy4CM9lhQVicBDPT08hWanEflBqebE5BnlbIwTpY
GUfUzxEYmJxBdl4WRZMPQTDeYFKlY3jpkG1bnJuL+U0f51/uzkKRZmb8SaDr
qdYi5DWMsh9PNZegbmTBJ8N9AV2mAocP7xwPHa9PQKHwuaaTzQno8hq4mSvU
6DAZcIXMAtwesjUcrGu6P0FutgFXfiudaS2AuWcyCPILCtLSMLF+yk5FYXYO
lnd9fH1C7jBdWRHMK6P1uSjpmg4sEYYaTYgQKjAzSZ5Kk83wwm+D4/WpVsSJ
UtHa2oTYX3+AOL0I+3Y7+hpK6Pcshv35oIUyh8TYONQ1tVKAEIOfo5KxsLmP
lelexMUlYzeIBj6ebpApT0SBpQ6l2Qp898Ov6B5fhn1nGanCOPQu7vIbqONN
iKMcurW1EdG/fI9kYlr7gR09dSYkK3PgeuMx3BysQEgY6ptbIRdF45cYKZa2
7Fia7CIMUuxfufkg4PEUMrEQbUOzWJ4dRkJ0OAyVvayNVakVlEcfh9hJY4EK
cp0RDVUmfP+X71Hc0If9/X0UqiWUHY5weBeH6xCfpEBbawMiP39HQUkZi7ej
uhBSTUHIJvm7+xIZlPGZqhpg0qXg+79+Rf/0GvY3F9htsuG1o5DktkyVQpld
FzY3FqFOjodUnQfX6wfGOstgbJ3jMFgHqiFITkdbSz0i/vYd5PpyFkNbRR5b
jOUNCvQut+cgiBGgsaUNEsp0wwQKrO7a2SA1ViDHyR3PQ69k18xma0lNI2mu
BN//GIGhuQ3sbViRJIjF+GbQfg8Re6VBjozsUtSVF+Avf/4BlrYRmrNd5KSJ
UdI0xeE9t00jPlaAptZWJMeGkVqmY33PjrkhWvsEBc6D9rdeHph1i6doown5
qiT88FMkRudt2Fmfgyg+FlM7QXs4ZCHlulSo8spQU5aPv/zlB1R2jhGGHWQp
RDC38ns4EzSHwlQ1Wptr8OWvf4EytwYHNGcNpQak5ZYzrpInlrVxxMUK0dza
BlH0F0SJVdjYt2Omvx5xwgxcBW2Ss+tGfK7Jt6C6NIcw/BXVXRPY39uGXpaI
io5gPv5AT3UO0gxmbG7aUJqlQJhQiWPnM7ndLuQbqzi8R8ujiI1LRAthEEb9
ipjkTGzuH2Cqp5ZSZRWu3fwmufeWIpjEOFQ0NCM7LQF//SWOWGcbWyuTEMbF
YeGQTxqZl2PFqmRoiypQacrCn//yE+p6pwjvJjJJV6t7lkPwdlYYaI0thHcD
xXoZwinCZF7ybo+2obCkjsPrudlHEtl2ZVMLDHIBfvo1HjOrO7AtjSMhPh5L
wTsplBQUpYuhN1ahwqjHn7/7CQ0DM4SBEkxpAur6VkNcf39DIZLSDWhttODz
939mXwYcHOyjIl8FTXF9sP/Ym+tHbHwSWtqI2sI+QyDLwrb9AKPkRwRJ2pDN
ctfVDkQJcagmyLrUWPztqxBz67vYWBiBgCCvnQVtlr+4kE8qlVVSjfICLUH+
jOYhK/Z3Nyi/I/Ma4jd/lnuqoSmpxROFFpKYGDQPzuHy4hwDjUZSQTLpoEDz
1k7mGZ+M6eUNjPc24MuXcDSPb9AUPcCQLA0Jjt8patPT9OSX16M4R4k/f/8z
usYXsbe9AhlNfc/0rr/t79icoqPaiAylGhqN+hOUSiUBlMsU6Jv0lfnx0VIT
4hMZBm5GxC8/IlljxB5NWV99ERLlhfAEeYE3Ctq0EgEKKhpgzErHnxlmn1zG
3tYyxe1x6Ju1h74SKtEQqxaiiaD8+Je/wFTbRyu3R+xCTNfYz0dLA/WIF8tZ
DOGff4SU0i8GQ3dtAURpxGhBXuD2cBHx8TTlxCZpwnB8iU7F6vY+lia6EC8Q
wx702u/VcwM1sYmxkhhNr8BfiIH7plexZ1uERBCHoYXDkN3YGqOKrNOExspC
/PDn71DaMMjizVNJYGoZ4vBeU4QUH5/AMpo84Su+xiqwtrOPhbEOYrQkHDqD
GM3lgFIUB1N1Ewq0MvzlxzAMzK4Rq84jmdRsZOk4hE0qCzLI4orRYMlnMZib
hgkDsWp6MkrbRzkMc50VSEjOQGsLqc1PP0CRXc7OWZslCxJ1echrv8vdGcQJ
CC+ZRUrcrwgXpGNjdx/W4VZ2F/0khNGeYMlLI4YsRX15Lr7/8/eoaBnFgX0H
BmJ2c9dECEMMVhZAoS9hGc2cnYEoMr/Day9O1vuhKGrivcDWBJlmIpoJgzTm
F/ICKtj29jE72Ix4ikLOgnbR3Vf7kNIa908twTrWS9HJZ1jamXjsGTnZGswF
RcQfrxTVZ0hQRh7btjKH9KRYSPQVjM6gvyQbrUPWELy95hyaXx8Dl+jTEJMg
Zbwg7MvdSDe1cXi9d8eQkZcur29md9l/+DkG40tb2FpmWDUBc1v8diBTmG7S
p0JbaEFNsQHfkReo7ZqiOduEJlWImqCd/JF6I0RyLVqaqvH5h++Qaaxno646
oxrpOfVsXS+3JTnTDoFYyR7B6Ko14vPXOEzZzuG92IFOrgoJh+9PbUiOE2J4
bhUzwx0UCn8mJmXyXRe0eg1WDh84DIM1BZQF6NHSWIWfvv+OfeXJYKguUEKZ
1xSyP72/SJRKOt3a1gJh+E+Il2Zhh9qOdlRR5qPCzRNPZ49XlMTGxaCyoRWZ
MiF+/CpgvcDG/DB7rmLlINgLPFDenIysYvIChRp8R16gecAK+76PUpsnVrkN
4t6KHCSnZ6O5wYIfv/sO2eYWFm9Fbho0xjaORkbrkSjNxBpNVysFQ5/DhVjY
u8b94Sr06bp/HQP/Ae9s+WQlEWUmekfGYcrLRExMNATCFEyvHnHlFLQsS1N9
UGdkoK6tD521JsRSKBpNoVXz4Cz7+iUA9nxvGTlaNQrNdRge7EAihU5Mlznk
ttwvb4FmTN1PX5MFGSot+kbHYcxW+yQTF8+tn/KS37A43sNKrm/vR3t1EWJi
YxFNAVXb8HyIujDqvTjahaTEBAgTk1BNJvPs3yZrys8isznlULrvTmGm5FKX
Y8TE+BCUKYmIio6FPDMfZ04vh/LJhe56M6HUYWBsAgUGJYsyQaSg+P88UORy
smWFQaOCqaIRQ/1t5PJ9Yy4o78BToDLzDzjbsSI9JQkJCYnIK63Drce3cTRL
WXpl7xIv9JFmuAwZaj0GSWieLp3tTShOw9L2JT81r5gd6oCKpqapaxAtljxq
Fse+t2W80nvQohxtzEKvVqKkqhkDvc0QxDEAY1BU2YPnQN3RH3DvOIQpOxOa
rCJau25IhbEIC49Amt4Ix+MLJ5kpWBxogzJDieaeITQRp0SzkoXonWELnjjJ
B2vT0JHk0poW9Hc3kh3EsJJN1X3M275AM+eVnT3mlVVQhomxfsiTEmg9YqDM
Kca16yXQ7NXjRFt1CdJpPXqHh5GZJkFkZCTEKRqs22+CAU70NRNAFVp7hynM
zSKAsUTAIgz4ajk5gHcX5JD1arZeanigk0L9GHbMKnIAN55Xbmou7cjKSKW1
E0KVbcKhw7eNvz83jLKKJq5MjanO6GlkJbf3jaCuWM9ODfM6bGh+M6AwuxQX
ZiqVsNS3o7ejln3/HUMAzQ3DzFu1QG83Zzso0Kmgyy0hbB0Qx0ez2DT55cwL
MG7yzvfIwFNYbJqcEhzf+LYjdqYGYK5u46s5R6EhoRUNHehpr0F8TAyrMJam
Mb64+Q+4Pt2iCdEg11SBiRFSApGAXQomZr5/4oQ+u65RX1YItS4PI5MTtBRS
4oRoJKXqsHN2H2j28f6MIRqhkkKxzv5RVBVmIoqEMnHC+Moer8wf2LIOQ034
qpo60dVaxVaMMPgqWyaYI5Dcil0d25CvUyO/pAoTw11IFsYjmgAaTNV4fOas
bXd2CDVdQ+xMrI61IT46mqKWeLLdFFi3OG5j6ml66ig9ShBALJGjf2bDRxkv
jzBqtDi+f+Ikn+2vErepWG4b62+BOCGefdWcY26E+/X9PwZYlSL8HorWlSoN
+olVyyguYJRAQJLnt7n6zVNiyuxMFYoooh0jbRX5e8uzNFPYyY3Dc3vKHrrJ
JKMcnxxDWooYsTQ1qRn5OLnxfOKEutFVX05CtegnQi2hAJWZ6ARxKhZ3eEL9
ICof6yLWUKKhcwBNNSVsbzGxCWgZWAwxjeOdRXa4BWU1GCCFiYuORHhENIrr
uhhi5Ysaj1kuZSxofHIUcomI7VKmKsLZ3RMv+Q0LIx0sazR1DbB7DT7JzD7F
cojkQyJUXYaCJNeiv60asVEkOTwSRdUdTPlwoJmL+Kos30D2UYzxiRHIkhPZ
LuUUxF84nzhCpaVsqy6FSqPH0Ng4CikOjSJrEyYrsGq/5G33DdahNtZ2GVqr
qyhieTeWaK1zdC2wbI9XByjJ00OfV0pCh5GaJGQVP4151fvAFUW7rw/JwcvY
QFmpK8Ch3yhPN4aRVd7JCyUWH2hBhp+qasrz/UIT0T2+ETx5TAKemJCARLEE
Lf1T/r1lL8pK8rFkv+Mmz746jVRxApsm5JY1ca8QRsinkGPgqtgpyswhgAKK
jNX6Ihw4fKWXR2uDyKns5ViD0midKgPlde0YbKtiXQfjKctbBvjjKUSjRFXG
bB2yC8sxNj4IiSiBxhEFlYEpducI/MV7h4byIqi12RgZG0OOUsouhVimwvbp
XWC4r8/3qC7KImwCSBUaWG2+XUTX5T754Dw8BEV+zAyOd1I0RlMjEkvROWL1
vRz7IAM25mPjhK/nfqaMqK6sgEgrF6Njo8ToEnYwSXINds+dHGm9PmOss44W
RYPOwVFYjFlsUVicIAkj1hDSss2PEJOnU+bfhb7mcsQxwQmZXXXXKFOYzklm
ztvkkS0ZCswYICpPiI1CREQ4MnNriFU5N/PkYkrEc5GuNmBwcACqlAR8DYtE
kkIL++VDQPKL+xbmXA3i4uKQLFNjac/38uz+mLibQpqgUO9/Zv/DnGp7x/H+
DpZXljAzMYrW9i7snd34jrt9C8f5MVZXlzFvnUFnWzvm1/f9R+H+AS7nFWzr
q1hanEdvVweGJ9kC82+5nt9wxPS8vIRpssK29m7Yz28DPV+dHbE9W63T6KCe
F2x2f8+/x8bCNPr6h7F/7MN/e3mO49Mrikne/XVc/8CeLNnZ3MASdT8y0Ivu
/hHced956a842tv2SR8fZqUfXjoD2B9vL7HBYF+woqezA6PTSwzTfOsHcLq7
ht6ePqxuHbBK43m4wdHhCTzeFw4AI+HQL4E5atzW0YMjx31gfBcnB1hdofHN
TbHjW94+/ibw2cPNBTbWVrFI0rtJ+tjsyjeB02nu+zsa6zlbcxZof37s62tu
dgrt1Nfqzgn32f31ub+vOXR3tGPCusqt0LPbiS3bOs3RIob6etA7NIHHF26F
PM4bXPvPar56XVhZmMXihj3Q89mxHSus1ElW6treGYfS5bzFCaFkqtICk+a8
OEBfby+sSxvExmBXyH5wzJSo+ttQn0f+PmcmqM8OrO+fcyO5uzrF+toKFufn
0NXejqmFDU7e490NTs4uWNsJyLs93Wflza/Y2ID+1fPgl/fEybu99PW5MD+L
TupzesnGzY738Ra2DWZ2FjDQ04WB0RmmlJrToFcv9rdtrIKNDw+gvXuAiNwb
QHtyuI8V+mh2mhlJJzaPrriR3Fyc+KRaZ9FBUmeXtzipjCrZ1knqkl/q2CxT
EM1JpcBof2eTPl5ET0cr6hooqTu/+zbgF968mCFlGxqdxMWNr1Tl/OQYF1dM
oehHQDddTgcJWWOF9HV3YmhinvELASFPrjvY1mgVrHOYnZnBysY2c0CNt513
HNl9nDBNnNDOcML5HWc7dw6yHaZzxu47MTy1EGz370+hhtlF7sv59BZMC4d+
Wpjyd26/cHK0cHroIxy/qi8G0cLRgZ07+eW8ceD0+IjIZxFnt+4gWnjgpfeT
dAou75/fA91f/qb75a1DTsfuHJc4u3CwEUcA7av3HtubPgsa7u9B98AYWdAH
NxjKKOx7vsFMjo+gg+WAR54D7D4OIAtqY+32iNMDpmZ1m7RveWmJMqBOtFOu
5nx6Dyj3x9MD5ih+nrXOE4VM038XaZFv4HJ5OOW+8BuolYyJ6X5t9+QbTlFo
DZdnxtFPfurwwlcXeH1+yg7w9fU9cHjs9uIY+0e+kpiDnXVMTc9i9+CEqYvj
Dpixdt3Tg7mAXRPyo4NDpoKYg3LnOMP66oqP0YiFJsl2ORYibduyrbEqPdjb
TRnaZIidvT2Rxm+xczg+MoiOrj7mlEJgIEzt6OhAH8amrHAyB85oyo8Pj3B9
9xh8UoRh44WpEQwMjePkylcncnV2gvPLa6benSPtV5+wpYCw7n4mJAws2Onh
Hs3oEuamxtFK9LR1eMEbNVHJGg1xYYGhpzbMkFEHVOfh1kF0eMEm14Hjw8/u
BxwfnzKnmvhVeXFje2ub3YbzOC+JPKaxvLaJW6eLGcxvtmG8znPkqlIolY2B
NCUVCoUCkiQRYuIT0TuxyqUqL160V+SwkXCSRAq5Qo7UFAlbIVzc1BdSvczE
JszRoBiKMRISkyCXyyGXpVLEEAtlVgkTk30TnGFkp0vZslVpaqj4gekNXrwb
LeVZJD6KxKeQeAUnvtQXDYa8IOtvKMXXLxHs1S1ffg5D58QqJlpMEKRoQs7m
ntimIUmgXDReCJlMTuLlEAniIJKrYeODMtf1MfSKZBYlc6kBgzJZTAG/QIzh
ua3gvSrm6E9UeBiEomR2ktiBU2CWmVdOvPLKSd6c7kF02Fck05xHfv2Cwpo+
bCyPIjpKCOv2ORcpOw6glYvZ5CxEMuWwows7AcnMCaB6UybCIqKQLPXPjzSJ
koNYVHSNsS4t+PXAWGctizJRHECZwqLUFVTi4fmNK2R32Fcpjac4/pUvZH97
ukdtkZpNxwKyUiQki0LPqp4JJp8PkTXSXoXI8HBeVmoKi8tgrIHrhT96uL80
jMS4KIp0RZAxKkNthfGxkCgN2L9xBc5hXe4vIyEyAlVtc34xn2Cz9uPXz7+g
O6gS+I3C/cr8DBamhIMpppwvDrX906wZBYZ5TtlmeW0re2jo934453uLSIyO
gChZgrjIMCiyK3C0vQRxfAzJWefSBc8tLLnp7BEAiTQ1SEw86gdnQ3cJiVb6
Gs2IDAuHKEnCjlBGsxETG4Pc0gay2HcO0imloeX17ezLhACk0+15Gno4xMlS
xNLqZeRV42hrHsK4GPTNbvJH817QW1+KiBAxUnbzMt/czB6C5dRwpgeCmEjE
C8W+SZfL2O5kWsrw77k01nG4AbkoHtE0qlSZjO1SlJgAgViGha0zLjd4vEKJ
QYZwP5kwzaTJlJLHUYY/thiyu81sfnTVmFiUzIA4lJSSFVpamdPMIYzCXFTE
7AIIgpAmEFIF5Y/njy/cujOF7YWZKQiPiiUMMqSlp/kwkIl3za6HYHh/fWTf
nERExVGbRIRFJmBx6xDVuTKk51aSer6HYFgaaUJsVATLaj4MqeyuYnoO5d9u
3rhPtxcgFcTQuAXsdDE3kMQTVqEkDbZDB5dx3Z0gTy1hxadw5MfQCnGv1RZM
KwtDjYhhJIuCJUeTCpTh2sMb0fGmFcmMZEr9mTunGEJLTBBAlKLE1vFNoJn3
9ojy32ROMqO1EpGQJIvQt8ARGrObVFecjYjwCD/tEutLJeyGZnnTQKipf7yh
r7oAP4cLML/vP2P69ojyPCX+9N1njNuu+J3Z9RmI46LZNWFGw6AUJsRDnMoU
DXOpOHNsssZoINaPQDInPpm0MA4VLUPs3n/AXtanelHfw9axcvZiX52CKJZh
FL8Y+kcoiEeSLJNiTZ7dr/aJ3UWIiI5jOZaZjGSajHhhEnPakyOU5wdUFmpZ
F+jjPTlS/GiY/f7gTe/TDStSaUDCxET8/MOf8YXYQSgQQCLX4/DKxXu/E3Yf
JIF0OuzLz/j+p1+RQABjhVLMbp5wHEOMa8nT0DJEhjAuY411neOhHPP2gnZz
Nr4S7aWQB/j1SzRGFrfRVsW8eMrBpYt3vmvT/ewZwdjEVJiMBexOpihRwL6Y
2zy5CzS73F2EOCYCQrLS+OgwyPUWyoHWkRAdi47JdZ52XjHaWsaiFIklrNtn
DJrZS80yN5Ix8bRjmxuir0cgPkHkXxkZBPE0/cpsZguZ29k52WBPbkTF+OyI
0ZMkAsjsZk5vc/PjdZ5BJ0tkgwZxQhxiRRnYtduRLRegsLY3xPt9UMbVaNSy
Bz9SpGL8yrzYW9tj9+mlqiJm351Dees/tBEVk+AXr0CSkMQnyTC7e8bt7Liv
YdSnIYKcryTFZ0zS5CTfi6JBKzc/b8/ory+iZpE+WvbPT2x0NPKq2uF95bX5
eGMaFbVdrIYHYj1mV89cXokr1xvniz13Z8hWyhBBhKvLNSItRcRSeSR5h8rO
SVYzflN7Nt1RBpmuFGcU6Adu93v2PMLa34wUhS6kwP94fRJikRzrdsrC/efj
3im6PbTNQixMhe2EL9R4cR5BnizGwOwGe0aK/fl4h+P8ANkEq3Nui+PoidZi
yA3lOHfcchieKJSdpeApNd2Ah6Cqg8OVMSQlEW8eXLBntFhaIQwH69MQCWXY
Dqp/e77dR3JSEibXj/BBfLTY34jkNC3uvI+wGKRonbGFvG03ZqSion2EPRzt
B0xh9hXqTFpkm/kqiZHGQuL4Slw47rjCcwbvVGcNZKocuILCz6frPUjFFJ0t
bsHz5L9V5f2Nks496MjH9C8HVWp8eJCTKkb9wCx7oulib9ZXT3d5j8GmMhhM
/EGHwbo8KPNrcHnNY/C67jHRVgW5Jp89a8iVL8/1EVGosH18xfbLzhlF8HsU
YAqFCqZKgK9hutqmiDIZEys77EmlAN7L411okoQYXj/yY/gdafoVslIFMFR0
4/nlhfKP5+dv/hFvb9zFkezPFsW2yRRp757w4l+fvdhZHCbXmRZyvsB9YUMS
xcrTZIO8+FdcHG1DTSQ8Flz69uZCVkoSW7J07wqcHvmA8/oC5TlKGOv5Qvk2
sxY5NQPMlgPWZ0awQ1PKMNTyUD3SDAUhpXrr4x2QyHTYP3UELmMivB5szQ8Q
3gyc379wU+B9OEdmchzy6wb/7Sn4QEtZJgzlXfC+vOHBcQhFQiwmdi+wOd6K
9OwiPAVR9upIK6QKA+xn17z4Jzdss33k71W4euQrzh6OlyESSTG/ecAe1mKl
EeWf2TeQIUzAjN3BQfU4T6ESx6CoaRQv/xbUdzQWq5BT1cdCvb/Yh0wQy3SD
9ZFGCi/YExB8MeohBcVEvkyQFCz+dG8NaSTeGlTw9vZ0CzWlKh3jS3jw8Le4
3F6doChTQfwUuDfpd2zw0GgkHBWdTNIdeOy6v0V3RSE0hVXBtWbzffVIVebh
6IKnsBevC6uTnUgQM+bOh203e3MQilOxvHPEbO36MLy+4HhnBQqhEIun/DnH
V48DSvLY3VOreAxCfHN5hAKNDDU9QefYu2uQri/GydVtCI0ujTRDKM3FfVCt
2YVtBAKJEvZLJ0ufbcV66Mqb8UjZOVOssXjCY3hxXUCeQMnv3AZ7B4PfIHBN
NKpXSNA2uhk0ay8oo3C7pHEQt/euwOOHu2s0F+mQW9URXKc80lBC6XcZzojE
ONL1PGB+sAGJKflwBRH/M1MMSiiG5zfZWw04FKd2SkcllE/v8Cjen1CiS0VZ
M0Ok7kBOxmxXNBRkIr+mm5u0oVoTVDkM799xN9AyPDrXXweRrBCeIN4/XRlA
olSNrcNznvdfnrC/OgNpghg7QRddMOGsjBZzaf/cD/UZNez5ADXS1UpMrAed
/X3zwKhJgaVtjIHLWew98X5tjhpFDX18LehiH02NBjtHF+yFBgEMuyuTkFB0
uHf3xFnbzfE6hBTStE1sMDe4+aztv8N70A26zIGVApWUNH8Czkfe5ThvrlCd
pYSpaTC4+rK7PA/awmpifGcQ4zsx0VmB5PRS5hrBwKDs1k4kpmqxe3zJEz4x
7vbCGCSJEhwEFfoyE1CUmYry1nFKaGchSdXg4OKOtPEGFbo0lLTxRdcDlYVI
y7Lg8uwYOoUU42uH8LgfMdZhgURVHsINuzPttIiUq59eBrGoF1vWEcotUnAc
RGPOs01KABKxfHDFsv1UVzlENCSP6w4GRRqGrPxJvI9nJ/TpyWgctGJlqh/h
v37F2NoxTbIHLcRdDN7gaWskpcuhBNJD/MRsn6SIRBhfOcHWXDfRbDGzR83B
YCq3EpIwR2zqDdAZ43z21yFLSsbU+gUPw3tHBpiEpgErHlxP3OLdOs5RSjF8
Ze90EAymrp0s0NwCx+0Dt3ruh1v0N5gg19UEH3pYGamFWFmI60cvccgDipUS
VPTN4OZojSLjVJo5vkDPYScHIBBT6HXDHpgeajZBoqmC+/Ea6hQFJldPeMsk
IXWUN+RXtMHBs6r7/ga9dUXkBuuD+WFlqBbJygJi1esgVnVjdbwbEkk6roLK
za72KSWgLGFp55ipMmLbvjN+YGcJUpEECzvXnGG4b47I/UWjvG0cr69+w/gD
pyKBH2bHtyJLxt6y62beSvq8lf9iRe5nvrcCUm0Jdne3oZPEQWVqYu8QOV4b
Q6qcUHp/E/F+wmhjPvQVHUEJ2idcbc1AnpERdAT4E/YXhyCVZOHh+YNr90p0
LKMIeGX/lmv35NijdIBSpLNHrh1TEV+dI0MDVzv3CUN1uciq7gmqLviE841J
yJQq3L7ycnfm+pGSkhOUIH3Cy+MZUhIp8j7kXcPz9S4U6Wk4vPW5JqZaXktB
//P7M8p1ErTP8Vc24cONbIkU/XN7XFIx2mqBJr+N/b9Au75qA/LqB7lRsLeR
rY5Ars6E841v5zm3QUq58Z7Dw4+ZWLZcTy6JIvvgiDY7RYaJjVOfAjkPKB/S
4uLhBUPkgLJKerjvd1foUNg0HCL7aGkQ8kxd0Fv2T1gba4fcX4scaPd0d0CW
q8Aud7z3E1wnq0iWyWl+vDxGck6l2iR0LQZubfqWrRktIRr+05/+mVLdRCZj
oM/EYjG1FwhFaPUdDOT6XRlugSKjGE/vvHzvzT7EgjTYuZMv5PGOlpEkS2NO
FfDy37wwacToXTng1+b1DmryHlPrp9zadFcbiS0GguT+ES1mDYrbJomYr6BM
+Ir6UV950MnKENluXtCx4k9Y6G9AusbMbhcGZLspshclpOOYC7e/ZWs/CxUi
/Omf/xmxNFZ+7P+R3VnrmuVPm/luRdagZnDZb6JuFFIYtHL2gC2KYzNyjMzp
jQCEuZ46KLWWoNKDT3i82ESiIANnXFn2J4rIKHmUK3HpCr7C8xEFykSMbPG3
Qb2/OJGXmoA//cu/IC6RhcoApX9EECQmoXf+IIRwG8gXNIz6zikyFVQF6lSs
X7qwMdxIiVMpf5L3E663pyFWqOFw83fQMXdq5GUkYnyHv5X0zXOJtDgxluw3
QZb+jqaSHBTXTQZZ2yuq8+WoHlzmN6SY8DmfdTdcu4nWCmTm1AUVrX5i7zgR
JqhYLIF2l7ZxiNMycet959q9e2+RnS7E1D5/8SfDEvLYJKwe3YXgqyvKgrl5
jns21lyOnJK2ECa63p+n5EbPyuAC1fVByPRG+N9/Ypa5HKC5j4LSG3IuQiyf
3nOyn++PII2VYOvsIUj2K8wGDep7V/i5IQssyiR2mtnm5mau0wx9eUPQxtUn
9JQXIN/cFYLxcmeGMGYFBdNkeWT5EpK7c+ni5VIgXKpXk29e4+VSmFOgkaBr
bpeTO9NGDFTRHLQH/AmdZbkotPRwI2CvgdycpKQhB49BLG2foyRRW8S+CuFY
2nkGVaoQaxePQZXY2xRyKX3X8ZH1t5VlIzpWilOK4sqLDRhdPQ9iAhdbid23
YOcwTjQVUeIaytJ7061I0ZvY+JhjwNtjKFMTsRF09s5zdwJZ9K/4l+9+IPxJ
SEoS+0xGlIiEZAXpMe/FmCsbs5RJGFw+4t7CjjbkI7cucPGFjwGaCvUoqRvm
8B2sDEMkCU6gP2FrohGpWaWhDHltR7pMhO0bfq+BAnVo05KxdOLF+Xo/xNpS
LjaabS9GXkNPSChXadCiaXAF76TnacSYJ/5w/WJ7ChIpm0UHIGyM1kFGqcVz
MAFe7hEEMXbv+Oj37nSDHKuSHL9P8O58N5S5pIovLopwFRgJOpjy4blGpkKM
md0buE6JyWJisHnp23eYJlUqbB4IgVuXqyPV950wZ7a+szRqLO7dYmeWIqj0
Mj6F/QTHwRKS4tNwwW3HMiT4AJ1MgeGFI25mP9xXUCsoEt2+DLIyJjfQobh9
hF9N6rxCp0J15wy3UrYp0ti0spAbipYHq5FZ2sStb3uZAa2Tq3g42WBfVZ4E
nQVhgrzUJDYOYH/WJ1qRWdTOvgBUpcgxvX4WIr9ck4G6nnlO/tp4G1IyLCFW
bu0qg9LUwLIix4CHqxQjMNdGvHPtzjZnkCxU48bLMzSzoaCSMHIDFvQte9ll
dlo8/st//Q4C8uVJnD/7IxIEIkxv2IO0+Q2tZIH//F//CyJiBUhO5v1+QkIC
zB0zQVb3R0y2FEFr7mDvgK/ITIbRfzz66WoXGSpyau6P326uXlPELhFEQCRN
g7HYjMoKC3vPc2RkOEpbRkKW4tXlQE6GhL0tKbfQhKqqShTmZUEQFYl0Mqb7
59Db7ToqsxEeFQOtIRcVlZUoNRUhJUmAmOQMCkP4IyZXBytIjguHOCUNphIf
BoNOjciIcFjaQ98WMC/LssggYwVJyCvyYSjINSA+MpKsohwPwS/ACENruQGx
lHzrdTrEhP+CGHEa0qRCiNIMuAiqVl4aaUH41wgKSXQwWypgMZdAKU9BeHgs
hYaHAagXewsQxYYjKTWdoJb7oGpVbHViVfdU6IsNinKbSjNpCuKgz8pnp6DE
WEipZTziKEc/vuHviV0YaqB28dDr9RDHRyGCDFejlCMyOpkieUdA/NnOHNl0
GAWNGSguJfGWcugzlQiPiEBt72zIq0Lv3Sk0RLdxwmTkG4vZmcrP0SOWoGqN
NeQWgl5XvntRb1IhPJogZOejkqAWGwsIahwEMh3O7gJbF79jQ4ej/T1sb+9g
a3OTrNZmY+jMZsPlrStEH70M40uEiKeEvsAPIS9bh9jwcOhL6ik+DoJA3q+m
MINGLoAhp4CFYCoqQHJiLBIUvsUKfrM53V2NsK+RUGkNKK+ohLnMhLQUpuIh
AQt7F5xyHZNdJsaEIzo6GonkWSKjE5Cbl81eo2lpmwxZMeaFRTopqECcgkJT
CeGtQF6Wjr0hMNvcxNz6FrSJ9ILDvV1s7/xmGjZx5ase9Df9Aw43JpAQE0FQ
9UiXJOCvv0ZDS0wbFRWNgfntAFLXlR0KcTwSknjpuVlaRIeFIdfSyty1xhM9
hYvllL1FxgqRlVvom63CPEpxYyBS5jHHQDikzHvrg92dv4fU8Ruk9tVRCKIj
oNYZkJYswI9fyHo1SraMZGSJe7H4TpEn83dyIuMSkZ1bxEo3FuZSmh+NJHUh
bj2vQUb4Til/Kb5+jYJGnw0LtS0rNUImEVGUkYT14xvOCnYXBxAb+RWydA1K
zRZUlJchU6lAWGQ0uvnamvvzHUgTYpGYLCPOKiXxFcjWaxD9NQxFzDuokIsJ
nSimVDMqXoTsPKMPakEuxfhRkGQamZMhIS+Emc2Or2HRLFTGYMtKjEhNZt7U
SWA7c3JqdcfcahsXDbFUAWNJGfXL8CZx1q9fUca86Q2+zZXcQAEFLqLUNLJW
FX75+TOkFCwnCSKRaaqjICnYEl/RXplPvEMzn+XnzeJCpIgTKKeQYffygZsu
5kbZqIgwKFQ6lJUznFUKdXoqvhLhjK3sB6BeE70yL5WTGHotNbNQWc4iqOXM
a+Dgd+KkKy2WHIRFxEDnF19SXMhWqMeLFLA7HkOskPlbMQyENIJg9kNQpaUg
LFqAibUDnuL3lyCMiUJyKo+BmQoGQ2XXbyj+8ZK9kDaWiCuvsJhdsoJccjNk
Qhn5VczhkSA7cMNMy8vcTaGQJpI9iLFx7GA9Z2GuGkMrZyF4F4Yb2NKedLWe
pfnyMqJ5hZTwJmDadsThfX44h14uQGwikSdhqKpkyDML8YRBWVgbtGS/Y0/n
7W1vY4fsazNgX/+Ija0dPHgCtx2BFW8dqGVdRYZGj3JLJSs+Qy5BWIwQc1v8
3cZn23OsR5PIM1BSxriZcugoWAn/NQz1/b/heecptKnkUkREskUlLNS8HAPi
osOhKW5gi2f4KXhHZ0U+IgQKLK5SEEPEKM/MhcmYja/ESmTjHIYtCsbCyCOO
zS2h1CBDrEgOc6kJwqivKGkZC8HguT2CRhpLKiIlomcwEHFmk68hDLrS5pDS
mI9XNyoK1OSXpNAbdAj/5Sd2EyRFJIBUaSTyeAvBO9JcRnMWgfj4OCQIhUhM
kqO4uAhhX6IxumznrOFofZy9elOTqYVcKsIvv/4KLalYeFgM+uc4ln1nmDNX
iQjS0Kw8Ys6qKvIzuezNrklMUBB8vpnEj7WXkXtl/EwWLIyfKSE/kypGRHwy
cx6GE29fGSU/EYHUdLWPuyrMyFSl0ZKFo31ihSN5SjIyxDEUZmZCp5Thx8+/
kjJqEU8zVeavEOF44/kBJdlpEJBy6/U6fGWOuyvSIEmIg1xnZip4OfF7S8Pk
KMIhyyDx5STeUkYBhALhXyLQNc2VPNxf7EAhioKQqLPIVMZSZw7lLNFRYciv
6QkpPHjzOmHSKRBFPiY7n1i+iqHOHAhjo5Gizsc1x/K/Y//gyuHeb3zMH7Cx
sYk77r2BzwbOjw6wReaytbXFuaKNDZxc3oXEDtfHG5Q1h0MgiEe8kAiYQhMm
hkgVC6DOq2HrN0NObfwezuszjA30sNZiLi9HU2s7lm17LBcHEsZnlxMLU2Oo
q66G2WxGTX0TJudW2D8pEGjDBG5bK/Noaahj21RW12BgZJL8uosv63ecYrS/
m5PVTLJWNveDivR+z5b4WidHUVtd5ZPV0IwpkuUOksVUdyzNjKOCiNNIw7NU
1qB/dAq3j14eD83ayZ4NXe0tKCdZ5WThHT1DsJ86ODx3lycY6evy4bFY0NzW
gbUtewge5g852Jbm0NxQy+KpqqnF0Ng0ru89QbLesW9bREO1BUVGI7FUBcka
xPGVkz9icHGM4d5O0jHCwshq78Ta9gHLCIF+vA83mB0fRg2ZFzM/tY0tmFlY
Y//iS/DY1xdn0VRfw+EZHp/B7YPXv7TUz/0NW9pfQ8rH9FNH/cwubrCXIgf6
eX/xYG1hBo2BfmrrMDIxS5rnDRnX4fYaOlqa2DaWyir2cMzxxR03LvaAgm0b
Lq8Xi1ODMBYVoW/Uytypz/XjcTowPTqI6ko/nqZWzC3Z8PQaSK3+Aef2LbQ2
1lJIZEQZUUFTWxe2D88CYtx3DkyN8F3UUxfW5c0QMYxPWbFOobHOp6bVdfW+
Wm/3MyfmdH+TVLTGJ4ZMvqm9m3nvFxDz+uTC8hzzJ0uq+C6m53FPXXCzQrH8
3sYy2poa2TYVVdXoGRzDmeOeK/a/PNpDf1cbLOVmCrQr0NbZi+0DbjSu20tM
DPejij5iRtPQ3I6F1W22wPl3HJRHLM1OcFBq6hswPrPAuMcgo3vB7voiWjko
NegdGsf59QO3QA8OMvDBXlJyn6zG1g4sre+GGPjT4y0mhnopaDKRmyglparH
hHWZuQScl/X2jO1VMvDGBp+s6lr0MwZ+5+KGfWrfRk8HY3CkLCSvs6cf+8dX
ASj3V4z9B6BYCEonljf2Q6AwNfwMjzQ31Pt5pJZ4ZCpEzMn+Fnram/1iKknM
APZPHBzNXJFZ9xOlkZkxZt1EYlZs+0GFhL9nz61YJ0eIZipZMbUNTZieX4Hn
OTDiP7B/jG6AFrGtsx/nt4FrV18xPzUK+7n/qJyPaY6JabrbmnyISEW7egdx
cHrNLYL38Q5zE8MkroIVV9fYhJl5n2X/p6B+jnaIsYL76RvE4fkNzyLnRxjq
7SIW8Q+tvYtY5DCERTwsizDWH5DVTNa/HmT9vmsHFuasuHG/4fZ0F/WV5Siz
/D/cvQeQZMt1HTj4883MByiKBEAAJOgkUqBAigQEGnEVu7GhjViFdkMRu6FV
iKuN2FCswCWA///MtPfee+/ttPfez0x77733vqu7q6u7q705mzdfver3XlW1
GQMotiPqTfedV5n3vpeZ59ybmTdz0D++KN8KccleRj+WNvdwot1FbVk+ax90
4NAA+XX6Gvl4Uy/UyDQvKC4RtnhIxhuqsa+tARmMvSUlpzBgzEFjWy/29c1Z
2Ns+PTHM2sQMtEeHaKwuQVxcItoHp2hMFndebC5NoYKGigTqw+n8/U4tbojP
6IrVNNLbicJ83YidV4Cm9l7saU8lI9slFiZH2Mima8xsxK1904Q1/Yj9KbZX
5/Gmpor14XQ+opeyPjw5t6bvVww4qYvTuUQpqdSCStA3Oi1rzOfHB+huec34
TzKSUhjFY425ubMfhwzMxGpUKzRUVOqrKat6hakFfTWHeyq001DByL8wVJSx
oWJKPlScHGKoux0Febm6UauIjVr9bNQ6f/Q7+nF6Gb19fQyPD7E4OYCU+Djk
ldZhj41sv8Hv+WCn+f0B/+cxtFo2uA4N0YcxFnb9CMPDw0/1v31uRPbO/8vq
HWGknf3J/3piRHbf+973d/9b0uX/L3a8TXlimzQme2pE9pFORrsWu1uL2aeI
yej6mPX2IvS2kYwyMwmynrYyviVN+Nb96rivfvfV+Zfx3f+WdHnfdojvbaC5
Et1h/xndEf+Z3i+7foreiL+j3/SfrpC/w1Sh66/LR7/BwUFUVlaS38ZaC10f
o7y8HNXV1fyvJzpZWVmZXvZUIqupqZHdV1paitraWpmspKREL3sqkdXV1Rnc
p5QVFxfj1atXsu8WFRXh9evXsvtI9ubNG5mssLDQqKy+vl5WnlQm3ldQUICG
hgYDWWNjo+y7+fn5etkTiaypqUkmy8vLMyprbm6WlUeylpYWg/uUstzcXLS2
tsq+K5WJ9+Uw57itrc2kTPxuNqMa7e3tsvtI1tHRYSDr7OyUySiqJ8qeGpFJ
7+vq6pLJUlNT9TLxuymMk3R3d8vuI1lPT8+DZE9vuS85ORm9vb0mZU8lsj5G
UKT9Y2x0ED1NrMzGZCaj6xMMtKQiNsINLbVx7P+SSco+SehtzsD42NjHkuL6
+/tlVSQlJellT+6QDQwMmJRJy6NurbxPKUtMTOQDifS7Upn0PgKoh8ie3nEf
DWKmZNLvjo6OGtx3m0z63bGxMYP7Hip7rLuO1Oeg59m30GP2LYJOdv0U0T//
79BtxmX80/XlbyI90FI3wH5LHGCbyhGflotN9eEjcTc1PeGpKflCL7JAlIm7
buiJTE/zc0P03yUZhael99ETnp2dlcmoDlH2VDLYz83Nye4jGaU8lsqoRS0s
LMi+S61xcXFRdh/JlpeXZTLqLMZkKysrsvKoo62ursruo066trZmIFtfX5d9
lwYHUfZEItvY2JDJaGDZ3Nw0kG1tbcnKo4FKpVLJ7jMmo8Fwe3tb9l2S7ezs
yO6jgXR3d9ekTPwuDcJqtVp2H8noiDGlTKPRyGQ00IuypxLZ/v6+wX0HBwcy
GYGsKBO/SwB9eHgou49k5B7dR3Z0dGRQnigT7yOycHx8bFL2VCI7OeFrXSSL
PC6g3WB1r1czGV0/w5mqDiW5oVDNluJoo5qk7FOF461G/XH0VNbp6amsfCIy
Z2dnMj1Myc7Pz03KpOVdXFwY3KeUVVVV4fJSfli7VCa9j453u4/sWndw/FMj
Mul9uh+jsqf3vE+UEWFUflcqM3bffWX6hUYrbdBaP4LW4RG9b3Z9jCOHRyh6
8SMcSmRam0coCXsh/y6ucSHsNNLL6LB7sQ6hTemG6I+xtTjBZ0fMbJ3RO7Mu
HUFpOuPmG8LISNgg1V6H07KnQbKJiQnZfTQKTk5OymQ0Cooy8bs04imRgGQi
EkhHPBEJxO/S6KZEApIpR30a3YzJRCSQjm4iEkhHMiUSkGxpaUn2XRq1RJl0
JFOiA41QIjpIZSI6iOURBVaigzEZUWolYpBMiQ5Ex5XoIJWJ3yV6LyLGE4lM
iQ4kE9FBlJELoUQMkikRg2RKxKCep0QM6ilKxCCZEjFMyUR0eGpEJt5XUVFh
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
dNzInUx/jbaH6g==\
\>"],ExpressionUUID->"4c684c0f-09b2-4e76-af0a-2a4a0db86626"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"trained", ",", "testSet", ",", "\"\<Accuracy\>\""}], 
  "]"}]], "Input",ExpressionUUID->"efad110e-312e-4673-ac04-7474910b089f"],

Cell[BoxData["0.9786458333333333`"], "Output",
 CellChangeTimes->{3.707231303144273*^9, 
  3.7072372188735523`*^9},ExpressionUUID->"faa312d6-bfc9-4089-bf9f-\
baff9339b592"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Erosion", "[", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAGikHs/+SDfyDwFwT+EVCEAf5CwR8w+P0LBH7//v0H2ah/eEwlGXz/+O7V
q9fYnAcif375+OHt24+fvnwCgffv3r1+/erls8eP792+c+XSuaMHD27buGHZ
8gWT6uuLUpLiYiKDA3ydHe2M1BWlpbRKFlwCmvHnN8Llf3//BHrk9YkptnJc
DIxszEyMDBiAjY2dGZnPyMLJzSciLqWsrq6tYxSRveQtMJCAAYIeBh+WzurK
z8srLS0pLi4pKysvr6qqqq2pb+5sLo3hZGVgYOfL7Vy74+D+E+cv3X349O2H
z79wh8mvb5+eP3n2+vW7L1++ff/+/cePn0AAjYnfP38DVTzbKMHHwswnvu7J
r3+/v3/+8vXTp4/v3797++b1q1cvXzx/8eLFy9evXz97+vzDN4g9/w4uKuHn
5pWRkRIVFYECYWFBIBAQFBIUFJKUFuUGJzsGJgYuPhkpESEhYSFhYWERETEQ
EIcAKWlpXm6+wkX7wb7/d2HrJHdL16CQID8YCAgMTk5LS0lLiIkODAgI8XFQ
BoUmM7uKg29wgH9YZFxGelZqYkRgoD8E+Pn6hYSHeVh7TNpyHneq+jinoaaq
btqBKx9BvLd7JPiYmfnEdoBTzeX9G8uLC9u2XcelGRT9/77fObNrzox5i5cs
WrBg4ZIVyya0JINjVyZ7/mVgmv/9cIsYHzMTr8iaO8AE8ndVYQRQTjS6+/az
V/duXNy9bnFBRpiKrHRc+7wPwIj/C0xTQIM/TSxyRUs8TCwsLFyGlStvgex9
vBVi5rp7INXbapLFgLJMyMqFdSyd43vXP/sOTu8gd/55fOfSrt279u/bf+DA
kVOnTu9d3a8HSpR6lctuAhX9frAZ6s7bv4HKt9akCAElLT1zqxr6p85csnrz
gWOXTp06fubSve9//qCFw+/vHx/fu7pv756lk2rUmZiYOPUrllwDuezjfgl+
ZkZesa2vQM5YV57Ex8SsHDDjG0Lrl9p4G6ArChfsgsTRkwtb/C30NdSVRPm5
UTzEoFq29inQqrUZIVysjAws7O4JMz78/3+gNQesjFfH1N7dzcXFzc3J0kCQ
DSjC173+MsSObw+P5DurauqZ2toHZhU1r9qyd/vGSSpSkooGfg1zN04McgAl
TiYmZrBBuk4pxy4c6qlNtzbTUpKXlZEFATklVQMDU8e0/ktvEH7/9+c3Wji8
e3Bz05Q6Uy5wYmdkZoRkchYQzS2tMWH90U8/gaHy78e3r1+BOe/7t+8gLjIA
RRQwCfz6CTH5792DmytSfQRZgAawGKb2HT6+TlKAhQmYN89fm1Udxg4OF/WA
7FX7HyKZASxC4AUTqNCFS9w6sqogwV8SrItDQrl+0Z5PQOEPe0R5mZh4Rbe+
BHJ+Hdk600FZDKxExD+hYNPJB8jOg7PePrt7cP0sL0dTYW6wWiF5j6DuSy/f
QcLl77Pt4LQkuukhtHT//vbB3Co/NSmwkznELJ19Fmw6cu/pS6i5Pz+srQ1W
leSHxbWQd0zRhtP3IbLA8AD54cUOqJmPQYH08zc0Il7fOl6XH6UpANXJJybr
WbfmMzD8/vw4OqNQnotbXEYnOrt9/4UHkNLqL8hF/4ABA3LWy52SgmysAhJb
noBzyL//kGoK6seHl5ZPyHc1kxcW0qtecvoXLCDvXTp76+UPRCL48xfOBpn5
ZCMn2JOr7/+DCUFi4s9veNr5/eHB01eYwQqpH1HrQDDn+4t9e3Zs373v+XfU
aADzUKtjuOQ/TLNIB/9INAFk6R+8bYOhCAAaG4Dx
      "], {{0, 28}, {28, 0}}, {0, 
      255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   RowBox[{"DiskMatrix", "[", "0.5", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.707239704498711*^9, 3.7072397675678167`*^9}, {
   3.707246446209943*^9, 3.707246479976797*^9}, 
   3.707246544945991*^9},ExpressionUUID->"b57a97c8-3e38-4e5b-9a66-\
77a7a9768e39"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJytlW1MU1cYx9t7S4E2XOjtC/QFCSCrOoZogpFsThFBdJPS1hkcxCkDzUYC
Uskc08mHfTCZ2RvZh41kGyFMIzoRBsM5JyHBbIt7Id0+MYYQoAhdGTBDae+9
7Z5zz20tpSVbsn+envae85xfn3tenie9qt5ykhCJRGfioLGcOFtgs51osibB
wwt1Z145VVdTfaCuseZUjW1nFQmdBuGDfvtD5IsoThDLi/EiMQzDclxwCOTz
R9C/B3pDsO7F+bk5JzjC/NU01HoeLS64XItLj5aQ/pqfdzrnZh2Tk2O/j/5m
//ne4OBX3TcvX2lraW62VVcdqzxqLTtUWPDsdmO6Xrelsc0ODJYRogUgx3gA
6Pz+w10bZCKxlCTEojWSSmPJ0GexJF5OqZJ1el06bwjLQuQ8FoAs4wkCReII
wMh6jDU+mb29vLbDhZgMy8fqXV6amXJ83vr2OnGKYiIDM40C0Ol0OqZnFpa9
GDjY3pgoTzAYdGq1SpBSqQAlKWiFgtbq1XL+iIgIkYwy6FQ0raSVSqVKpUFK
xtLp9QlyqqF9ALAYiC0MiI0WgFgIi5hrsADEBtjhvpb9+UXrx/l4e8jY9eMs
ebqkpfcXzufDWMthS2lAZWYrjzBUVpjLyg6nUCQJWGgojbXMdORoOYypK8rN
ZhNW6aHSjal6DPRxsPnu0R9vf2ArirK7htrPejUUSSRgU3U2lEdyUwIT7NjF
TxfganBL0YESiWxb09W+UOaN8y9rJJKI2Oz8wpfe6XK4gclOjtqjYqU5TZe/
xEwxz7x+vpqGbvi/cOAz8NXQdtvNsnCPpoZ7TTu3bjJmqBPlxCpPgojf+nrH
QEoiKY4RiySA1dw4W0URJO9GZubt3l+8b19x8d783OAcwEYHYmW9ZtmDth0u
Aj/81N7qELcEQyqSQhrsoS51/bo8MVRfmLU5JysSVpsuW3XLseT6TUQAiC2A
pQpOvmf/k4WrFMDm7dptftX2Vmfvt/3dLRt1WkXErQjIuGNLRpoA3JCRlZub
FwRCZuLzI+P1IBsZ6jx93KQNmy8m+RQgJiRhqUBlOn6654fxFfey28NgQWLC
Kdfl+GOwq/VgQZ5SHoaTbKt5V51AEIKpW88diQ1zidPkFz7f1jM0Nj3LoVzs
83kWvnjTmqVNXPt2cSmZze13lhz9/Fki+POp7pnwDvV9vCdTs9af0qQeuHD9
b8YfGUinlVgu2WfnYUnYh7dCzry6Z5L1MKzbNf7JG6VP6MJDxth7HzWkyeTJ
suA7089V2m7ef8BBsWHRMnOzX2sVUj59SmOSUnqnOGCy/Io5R767UP/i5qQA
kE5V0jnnOu772RUBa8iuqL04MDzuhQuLDGoh3AjWN9UdH7Ie1x7gXh/aV97T
NWG/8n590Y40DPRyfrSmft+Y/aeR2ZVgkQQgPhJ+mO1+ePcOxsZd++bujBu6
/EIt4z0FMQvj03N+zPOHVmm+Uq8uqqhB2Fv9CBjsCqm6gWnYgv1rWaGzUOgB
i+aE3KIS1sP+pzn/r/4BuFgyQg==
    "], {{0, 28}, {28, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> False],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{28, 28},
  PlotRange->{{0, 28}, {0, 28}}]], "Output",
 CellChangeTimes->{{3.70723972250429*^9, 3.707239770150098*^9}, {
   3.707246448139268*^9, 3.70724648054222*^9}, 
   3.707246546236145*^9},ExpressionUUID->"5d28956f-8a3f-40c4-abae-\
79914f9467b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Opening", "[", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAGikHs/+SDfyDwFwT+EVCEAf5CwR8w+P0LBH7//v0H2ah/eEwlGXz/+O7V
q9fYnAcif375+OHt24+fvnwCgffv3r1+/erls8eP792+c+XSuaMHD27buGHZ
8gWT6uuLUpLiYiKDA3ydHe2M1BWlpbRKFlwCmvHnN8Llf3//BHrk9YkptnJc
DIxszEyMDBiAjY2dGZnPyMLJzSciLqWsrq6tYxSRveQtMJCAAYIeBh+WzurK
z8srLS0pLi4pKysvr6qqqq2pb+5sLo3hZGVgYOfL7Vy74+D+E+cv3X349O2H
z79wh8mvb5+eP3n2+vW7L1++ff/+/cePn0AAjYnfP38DVTzbKMHHwswnvu7J
r3+/v3/+8vXTp4/v3797++b1q1cvXzx/8eLFy9evXz97+vzDN4g9/w4uKuHn
5pWRkRIVFYECYWFBIBAQFBIUFJKUFuUGJzsGJgYuPhkpESEhYSFhYWERETEQ
EIcAKWlpXm6+wkX7wb7/d2HrJHdL16CQID8YCAgMTk5LS0lLiIkODAgI8XFQ
BoUmM7uKg29wgH9YZFxGelZqYkRgoD8E+Pn6hYSHeVh7TNpyHneq+jinoaaq
btqBKx9BvLd7JPiYmfnEdoBTzeX9G8uLC9u2XcelGRT9/77fObNrzox5i5cs
WrBg4ZIVyya0JINjVyZ7/mVgmv/9cIsYHzMTr8iaO8AE8ndVYQRQTjS6+/az
V/duXNy9bnFBRpiKrHRc+7wPwIj/C0xTQIM/TSxyRUs8TCwsLFyGlStvgex9
vBVi5rp7INXbapLFgLJMyMqFdSyd43vXP/sOTu8gd/55fOfSrt279u/bf+DA
kVOnTu9d3a8HSpR6lctuAhX9frAZ6s7bv4HKt9akCAElLT1zqxr6p85csnrz
gWOXTp06fubSve9//qCFw+/vHx/fu7pv756lk2rUmZiYOPUrllwDuezjfgl+
ZkZesa2vQM5YV57Ex8SsHDDjG0Lrl9p4G6ArChfsgsTRkwtb/C30NdSVRPm5
UTzEoFq29inQqrUZIVysjAws7O4JMz78/3+gNQesjFfH1N7dzcXFzc3J0kCQ
DSjC173+MsSObw+P5DurauqZ2toHZhU1r9qyd/vGSSpSkooGfg1zN04McgAl
TiYmZrBBuk4pxy4c6qlNtzbTUpKXlZEFATklVQMDU8e0/ktvEH7/9+c3Wji8
e3Bz05Q6Uy5wYmdkZoRkchYQzS2tMWH90U8/gaHy78e3r1+BOe/7t+8gLjIA
RRQwCfz6CTH5792DmytSfQRZgAawGKb2HT6+TlKAhQmYN89fm1Udxg4OF/WA
7FX7HyKZASxC4AUTqNCFS9w6sqogwV8SrItDQrl+0Z5PQOEPe0R5mZh4Rbe+
BHJ+Hdk600FZDKxExD+hYNPJB8jOg7PePrt7cP0sL0dTYW6wWiF5j6DuSy/f
QcLl77Pt4LQkuukhtHT//vbB3Co/NSmwkznELJ19Fmw6cu/pS6i5Pz+srQ1W
leSHxbWQd0zRhtP3IbLA8AD54cUOqJmPQYH08zc0Il7fOl6XH6UpANXJJybr
WbfmMzD8/vw4OqNQnotbXEYnOrt9/4UHkNLqL8hF/4ABA3LWy52SgmysAhJb
noBzyL//kGoK6seHl5ZPyHc1kxcW0qtecvoXLCDvXTp76+UPRCL48xfOBpn5
ZCMn2JOr7/+DCUFi4s9veNr5/eHB01eYwQqpH1HrQDDn+4t9e3Zs373v+XfU
aADzUKtjuOQ/TLNIB/9INAFk6R+8bYOhCAAaG4Dx
      "], {{0, 28}, {28, 0}}, {0, 
      255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   RowBox[{"DiskMatrix", "[", "0.5", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.707239790328869*^9, 3.707239813385004*^9}, {
   3.707246485588892*^9, 3.707246497874473*^9}, 
   3.707246548121958*^9},ExpressionUUID->"59ae70cc-72f3-4ba0-a74a-\
68131b0c3549"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzN1WtMU1ccAPD23vJsWugT+gACyFDHEE0wkskUkYfb5FEYwUGcMtBsJCCV
jDGdfNgHk5k9JPuwkWwjhGlkDoSV4ZxKSDDb4h6k2yfGEAIUgZUVZijtfbD/
OecWbi2a+W3//DlwH+fH/55z7rnxVfWWE5REIjkdCo3leFOW1Xq8uSQSDl6q
O/3aybqa6kN1jTUna6x7qmg4aRZ+0N9r/sFvGpwQLA6GYViO430Jwa89Mv4T
6EWxziKQ56HnE5ibgV4R615anJ9fCBTJP/E8WHI5nUvLD5ZR/L24uLAwP+eY
mhr/Y+x3+y93hoa+6b126XJ7a0uLtbrqaOWRkqLD2VnP7UqONxm3N7bbwWCZ
jUHgGA/LeBZ++CgzNlwiDaYpqSQggoNDaPGxVBYmV2qjjInJyU+n7Cqv7XRC
2ZCiir0ry7PTji/a3s2M1aLQaFQQkSq1SqU2mHRyCR0kkQRRknCl2ahVqzVq
jUYMLuBwMcxmoFGn0wqh0QggSTlFY5CkRqvVQ/izjplZ14qXgEMdjRFyhdns
Bz5cJ3pgvzoFVh9FwmgyKeTKho5BYGEpjPS35mXkWEotBb4oKi7BdZorK4qL
ikqjDSY0mnSI2agvKSosO1KOwIry4uJCEgWHC7bEmPKfzW+1/cpzLJiEBZOw
AJIEsLKitPZzG2KVNK1EYFdDOZhlAJIUsQQkJsO5x366cdHqVyeeXTOAzVf6
odUraUqhBbD77KvQwjVdQJ1Hz3/mYpHJoFy+aM0JWD4yWfhOAEkSE8Dus9XQ
6mUymd/NmpSM7Ffe63G4WTew/BqwU2N2YHURcspvUaY2X/q6+cogtMS8isBq
aNVwUUInpu/Lyz14MDf3QMbelIy9De03ACQm5PSIrXDPjq3JCSKWosJ2vNkJ
4CC00RG0VKHvbqpCdTZVKSkBzMvNhSQs9CHsI0ASSW9Y9gMILR0klcjoZw4A
WA0tvk0hqjNNFQxnlBd6frP/xcISXZkcrs9O2paanrmv+HXrO122WwO9rVuM
hvhwSMSixQkvLIYAlJu2Qibv3p4QF2OOQRGbkJSWlp514gMCCq88bDkelKPD
twZsOAUWL3YpjbcAKSVDvwlIsvDYqb4fJ1bdK24P2qjEOxPezkQsBlVoamU7
a97XKWCCIClKoWs7UxaCx0UMriIQhW9jEvZIH9h16lihAfcKjU5s6bi57BjA
rAD2TXqH+z/Zn6jHt2jFdXJo0+SJCOl0/DnU0/Z8VrpGju9Vx+VbLtjnFqF2
9j5i8VrSIXCK9TCs2znx6VsFTxlxyaH6jOwX2/uGx2fmSJ28x/XV2yVJhgjf
XKtfqLReu3sP3jBIMDnEXhdMBHJgsvjRFka/P1f/8rZIoadSH3Po3NV/YMNj
V+983BAXLo8yp1TUnh8cmfBCDwxyPN4MgJ371qAKDoqMtk0DyLN4iyAjBrxz
0n75w/qc3XEadeqZzrteThjScfvPo3Or6x8f+NKQ82sIYPnp3jD8kF/eI8dr
vDAT6E4hGNfEzPzGrOPOvmuc/zcQH7jv3755feC727Pu9VOir9lGN150kQ+0
Hg40GI+7jpDHC4H3kwF+kj7///gXe8mozw==
    "], {{0, 28}, {28, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> False],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{28, 28},
  PlotRange->{{0, 28}, {0, 28}}]], "Output",
 CellChangeTimes->{{3.7072397945851192`*^9, 3.707239814098777*^9}, {
   3.70724649233631*^9, 3.7072464983324327`*^9}, 
   3.7072465494664917`*^9},ExpressionUUID->"ddb4b288-d948-4c79-b4f4-\
9064e3e7b504"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImageTransformation", "[", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAGikHs/+SDfyDwFwT+EVCEAf5CwR8w+P0LBH7//v0H2ah/eEwlGXz/+O7V
q9fYnAcif375+OHt24+fvnwCgffv3r1+/erls8eP792+c+XSuaMHD27buGHZ
8gWT6uuLUpLiYiKDA3ydHe2M1BWlpbRKFlwCmvHnN8Llf3//BHrk9YkptnJc
DIxszEyMDBiAjY2dGZnPyMLJzSciLqWsrq6tYxSRveQtMJCAAYIeBh+WzurK
z8srLS0pLi4pKysvr6qqqq2pb+5sLo3hZGVgYOfL7Vy74+D+E+cv3X349O2H
z79wh8mvb5+eP3n2+vW7L1++ff/+/cePn0AAjYnfP38DVTzbKMHHwswnvu7J
r3+/v3/+8vXTp4/v3797++b1q1cvXzx/8eLFy9evXz97+vzDN4g9/w4uKuHn
5pWRkRIVFYECYWFBIBAQFBIUFJKUFuUGJzsGJgYuPhkpESEhYSFhYWERETEQ
EIcAKWlpXm6+wkX7wb7/d2HrJHdL16CQID8YCAgMTk5LS0lLiIkODAgI8XFQ
BoUmM7uKg29wgH9YZFxGelZqYkRgoD8E+Pn6hYSHeVh7TNpyHneq+jinoaaq
btqBKx9BvLd7JPiYmfnEdoBTzeX9G8uLC9u2XcelGRT9/77fObNrzox5i5cs
WrBg4ZIVyya0JINjVyZ7/mVgmv/9cIsYHzMTr8iaO8AE8ndVYQRQTjS6+/az
V/duXNy9bnFBRpiKrHRc+7wPwIj/C0xTQIM/TSxyRUs8TCwsLFyGlStvgex9
vBVi5rp7INXbapLFgLJMyMqFdSyd43vXP/sOTu8gd/55fOfSrt279u/bf+DA
kVOnTu9d3a8HSpR6lctuAhX9frAZ6s7bv4HKt9akCAElLT1zqxr6p85csnrz
gWOXTp06fubSve9//qCFw+/vHx/fu7pv756lk2rUmZiYOPUrllwDuezjfgl+
ZkZesa2vQM5YV57Ex8SsHDDjG0Lrl9p4G6ArChfsgsTRkwtb/C30NdSVRPm5
UTzEoFq29inQqrUZIVysjAws7O4JMz78/3+gNQesjFfH1N7dzcXFzc3J0kCQ
DSjC173+MsSObw+P5DurauqZ2toHZhU1r9qyd/vGSSpSkooGfg1zN04McgAl
TiYmZrBBuk4pxy4c6qlNtzbTUpKXlZEFATklVQMDU8e0/ktvEH7/9+c3Wji8
e3Bz05Q6Uy5wYmdkZoRkchYQzS2tMWH90U8/gaHy78e3r1+BOe/7t+8gLjIA
RRQwCfz6CTH5792DmytSfQRZgAawGKb2HT6+TlKAhQmYN89fm1Udxg4OF/WA
7FX7HyKZASxC4AUTqNCFS9w6sqogwV8SrItDQrl+0Z5PQOEPe0R5mZh4Rbe+
BHJ+Hdk600FZDKxExD+hYNPJB8jOg7PePrt7cP0sL0dTYW6wWiF5j6DuSy/f
QcLl77Pt4LQkuukhtHT//vbB3Co/NSmwkznELJ19Fmw6cu/pS6i5Pz+srQ1W
leSHxbWQd0zRhtP3IbLA8AD54cUOqJmPQYH08zc0Il7fOl6XH6UpANXJJybr
WbfmMzD8/vw4OqNQnotbXEYnOrt9/4UHkNLqL8hF/4ABA3LWy52SgmysAhJb
noBzyL//kGoK6seHl5ZPyHc1kxcW0qtecvoXLCDvXTp76+UPRCL48xfOBpn5
ZCMn2JOr7/+DCUFi4s9veNr5/eHB01eYwQqpH1HrQDDn+4t9e3Zs373v+XfU
aADzUKtjuOQ/TLNIB/9INAFk6R+8bYOhCAAaG4Dx
      "], {{0, 28}, {28, 0}}, {0, 
      255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{28, 28},
    PlotRange->{{0, 28}, {0, 28}}], ",", 
   RowBox[{
    RowBox[{"#", "^", "2"}], "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7072399197726316`*^9, 3.7072399323938503`*^9}, {
  3.707239966129624*^9, 3.707240025698415*^9}, {3.7072465764263983`*^9, 
  3.707246636488227*^9}},ExpressionUUID->"76ae8b86-d260-4f91-ac82-\
5fd1f460c7d1"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzVlWlQE2cYx5NwSCynRSlVgQAdULRT6omWylnKNXJELAhYqNQBWqQoVVJQ
EkVLo0MLkY52mPGLtn6gWEGJ0qkjRxGI4lEayIFJGiCBsEuAhE32SN8kYrnH
afnS/8zu7L77vr999nn+77O0zCMJn1JIJNJRG3BKyDgeXFCQUZToCG725R3N
PpyXdSgy71jW4ayCnZkWYHDdi8N4zWKxOBwOl8uFYdjwiiL+EW7Sy1vz8yWY
OIaiOkSHIDq9WQiCTGm1monxcWhUNSiXi0WCJx0d935tutVQf7XmUmNrj5k6
i2l8MUZgKI5jmH5qUtZad7EwNsDP3d3Ly5Pm4eFBA/L09PTy9qatt7aycnR+
c8u2bbsD90THxh3MzCw5d00HYp7NxDG9fmpCqx5W/CUV8PvEon6ZTD40pFAq
lcPDI0apTIJG4edNq+2s6MdYY6NK+cCAVCoRi0VCoUgoEE4iKIvF5HCqTExo
EpLLnjZ13WCzjmTs9t8VGhwSFh4WPK3Q0PD4xMS4+JiID8ODdvpYU0j267wi
wkL2xiXujY0IAQoOCdod3NY7yJyOE4JhwgACxw0EikzCkEIqFgj4f/J7e3v5
/N4+QV93Z0NyVFTKJ6XtgjEC4q2xt0z96jwoUlF2RtG1NjWs4j24/8vdexhB
lDJZlVWc243ckVEYwzGcmCIIdTv3h7M5wRtozuTZoljauG3e39A9TIx0ONtb
phxngwokb99kaUGmUChkskNUDnMCJWbXyOgTA4Ej2glYNSSTPgcJEvB7Hj/i
tba03Kg540OxWudHr+cpcZi32t7yAAMwcfrWjTsOMtsedAr7JcySE8IhaCZT
pxlTD/IHnt25cqE4JWJPaOAO/7c3ermtdV7l5ODgYGe70oJksdYn7uZj6MHl
8pXWlA0BSWqCSNix2dHZm05PTIj54DVrahtfMZNJ6DXo+CCieNZed6mqMKPg
s+zcz79kFJd/X3O9uaO78/e6lLi98fsO5RxIc3eyI4FUkEme/pEVVd/kZGcm
JyenpKbln6qEEWIhz7/YIi82CYabB0dEf1zlnI7ctsl17Vv7M9LtqBZbgsKS
wt/x9Q+o/OmuTqfHMBTDzP5kTjMhM828117CgQdEXY0VpwvD/Hxd16xy89te
8WPjoLwN1CiV8bVC2pMW/Z6DC+2Lk2xoAjEvXHBvghKNyIVPWuqry4tiwwJo
b9hRbVZYOK2P2X/u4XO5To/io51GZhEbvH9MKTmRusuGSg0Iiel4JgLLmacY
Vd+xuQ0/Q0qpqv9h983q2hJ6dsy73q6OtlRro4FIltYrXKNTC+o6+83NAlgO
+NMU53ljV8AJnUZ9pvBjWyvySofXr/zGZ5We5FR+y71dD6sU44MCcfP1lur8
/LhAN1t7Vxevre8n5pdebn4qNX8VWI8bzUYYYJ6L04r04gsgP/h0uu5cLfel
+TY9GZiRT5gwtg5Er52Qi3oftd7nPRWJ5NCkZkqPYgbQWaaLBTAGVTuVTP6o
4KzJ0MYTmKJDtOJ+MUjM/HyCOaheh2g0UzpUj5naIz6zO5qmaAcuVlbcau4y
zzdMVxdF0UVqRMzX3LaMITKZZBhWz23VhsXqvgRrDmHe4KLMVxFh/mcs+Ozf
MheO8z8yl9D/hclgMNhsdm1trUQigZdJ6enpubm5ZWVlAMtdJkVHRyclJQEs
iJazTAK/UIAF0YIksJZJfwMmA9Mw
    "], {{0, 28}, {28, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{28, 28},
  PlotRange->{{0, 28}, {0, 28}}]], "Output",
 CellChangeTimes->{
  3.7072399328647413`*^9, {3.707239970756771*^9, 3.707240026164097*^9}, {
   3.707246580511655*^9, 
   3.707246637095333*^9}},ExpressionUUID->"9edfda1b-bb76-479a-b2f8-\
b9011df3382c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImageResize", "[", 
  RowBox[{
   RowBox[{"Binarize", "[", 
    RowBox[{"ImageCrop", "[", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzt2k2uJVl1huGLoeGmp8As6LrhBl0sDwBEGblTSIUlyx6NR8coEJASApLM
vOfGz977W2vH03jA5D33xIoVO96icP30V7/9xX/+09vb2+/++dO//OKX//Ov
P/zwy//993/59B/+4/vf/ddvvv/u1z///r+/+813P/zsVz/+9If//6O3t//7
5Cef/u8//PEPfwIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeLrf/9vbIek5ATjnaN91
HqCXs33XeIA+rjRe7wH6uNt5rQeobUTntR6grlGd13qAmkZ2XusB6tF5gH2N
brzWA9Si8wD7mtV4rQfIm914rQfIWdV4nQdYa2Xf9R5gPZ0H2FOy71oPMFe6
7VoPME+66ToPME+65zoPMEe641oPME+63zoPME+63ToPME+62xoPME+62zoP
MEe617oOME+63RoPMEe62xoPME+62xoPME+62xoPME+62/oOMF662ZoOME+6
4foOMEe64doOMEe64/oOME+65boOMJ6eA+xJ3wH2pesAe9J3gH3pOsCe9B1g
P5oOsCfNBtiXrgPsqUvXK80CwFj+PgNgP/7/vQD78s/4AOzLP88JsLfZ/+y+
5gNkrOq71gPk6DzA/p7U+erzAcyye+c7zAgw266d7zQrwGy7db7jzACz7dD5
rnMDrNKp87P/HkTrgR1Vb+Wqtms9sKuqnUz1XeeBHVXpZLrtOg/sKt3JdNN1
HthdopPpjus88DQrOplut84DT5buajXp5wEwWrqrlaSfBcAM6bZWkH4GADOl
G6vtAHOle6vrAGOkO6vjAOOl26vrAOOl+6vrAOOlG6zrAGOlG6zrAOOk+6vh
AGOlm6ztAOOlm6zvAGOlW6zzAGOl26vzAOOle6vxAPeluzqyyRoP8BfpPs/q
sM4DT5Xu86r26jzwJOk+J1qr88DO0n2u0NZKswBcle5y5X5WmrPKHEB96UZ3
alWlmbvuEFgr3epuXao0/y47BeZKd7tbf6rc0xN2DYyRbnm33lS4vyfvH7hG
29ftKn393Z4HcJx2rNlT5We06zMD/k4j5u+oyvN5+nOEJ9OEefsZtSOtB+7S
gDG7mbkvnQfu8O7f282qvek8cMfK97xTWyo2U+eByrr1pWozdR6opmtnKvdS
54FqOramci91HqimY28q91LngWo6NqdyL3UeqKZjdyr3UueBajq2p/LMOg9U
07E/lefdsfFV5wKO69agyvPu1PnKswHndOtQ5Vm7d776fMA13Vp0Z+aqcyVm
7jIncF/H97zqjNU7P2M+nYceur3nVWes1s+ZXdd56KXbu151vgr9XNl2rYc+
ur3nVedLtTPZdq2HHrq941VnW9nNdM/TZwA4p9s7XnW2dGOrSJ9n4Gvd3u+q
s6X7WkX6PANf6/Z+V50t3dcq0ucZ+Fq397vqbOm+VpA+y8C3dXvHq86Wbqy+
A+/p9q5XnS3dWk0H3tPt/a86W7q/2g68p1sHqs6XbrG2A+/p1oSq86W73OX5
Aet160TV+dKtrrYPoI5u3ag6X7rd6fsHaurYkarzaTlQSefGVJ1P24EKduhN
1fk0HUjbpUFV59tht0BPs/97ps6P33P6zAA9rOi7zo/fd/rcAHWt7LrOz9l9
+gwBNSX7rvPjnkH6HAE1pfveofMVZ0rvEKgt3fR0oyrO1ml/QF3pllfpVMXZ
Ou0PqCHd7cqdqjhbp/0BWeled2hUxfm67RBYK93pbo2qOF+3HQLnpDubVn3f
FWdK7xA4J93ZtOr7rjiTxkMv6c6mVd93xZl0HnpJd3ZEVzp1qtp83f46CZyX
7vaIpnTqVLX5dB72l273iI506lS1+XQeniHd8rvt6NSpavN12h1wT7rtd7rR
qVXV5uu0u5n3mp4NVqrc8xkzV99vtXmqt7HyOYUqOvV9xMzVd1txpkodnHle
K90nzNDpPak82905K86U7N+Krle5V1ilw3vR4f2tOt/Ou9N6OKfyu1D93a08
X8XZ0j1Pnxfga9Xf26rzVWleut1VngfwvqrvbPWurJwt3Weth96qvq8dmjJj
tnSHdR72U/V97dCUUbOl26vzsLeK72unpqS72U36vMMTdHhfO8w4etanSJ9/
2FmX97XDjLN3u7P0ewA76vS+PnHGJ0m/C7CTju/sU2d8kvR7Abvo+s5WnzHd
yK7S7wPspuv722HG1fvtLP0ewI66v8sdZkztuYL0+YYnSr/3I9/9DjNW2rsm
w77S/ZjRkw4zVngW6bMHzJXuuc7PmT99roC8dMdnd6rDjCPuJX2OgHrS/a7c
+bO/l36WAH+VbvbKxt+9ps4DXaRbrfMAc6Qbnez8iOut/usSwBHpLo/878gd
O6/1wCzpjs9q58p9jNxp+jwAe0j3+0rnVvRy1MyzdgDwpXSzR/ZsditH3kNi
P8CzpPs9o19dGj96/+mzBNSRbvfsZs26zoz7qbQ3YA/pfq9o1Kzrdei81sMz
pfu9uktdGj/z2aTPHLBGut+pBo2eYea9dt81kJNuebI3o+eYec+77R5YJ931
ZF9Gz1Kl87NnAXp5auO/df+JPc74/lUzAT08se1VdjjrGqtnA2rT99wOZ10j
MR9Ql6bndjfrWqNnTe8ZuE/j1+9t5rVmPef0voHrtH3tzmZfr9LcQB3e/9r7
Gvn9njU8l/d9zq5G7G30NbQenst7PmZHo/c24zpaD/CPkl2cda0796T5wG6S
HZx5Pa0HyP9vHLOvN6L1eg90VaF9K66n9cATVWneqmtqPfA0VTq38tqjWq/5
QHWV2rb62qNbr/dANdV6lri+1gO7qtix1AxaD+yoYr+Sc2g9sJOq7UrPMaP1
eg+sVrlXFWaZ1Xq9B1ao3qgq82g90FX1PlWaZ2br9R6YoUOTqs2k9UAXXVpU
cS6tByrr1qBdZuuyb6C3jt3ZZbZuewd66tianebrtnugl66d2W3Grs8BqK1z
XzrMOGrHHe4TqKd7V7rMOWrXne4XyNqlIzvPq/fAHbv0o9u8o3bf9XkBa+zU
jI4zj3oG3Z8dMMdureg48+hn0fXZAePt2Imuc49+Jt2fI3DPzl3oPv/oZ7Tb
8wU+tnsDdriHkc9px2cMvLb7+7/LfYx6Vrs/b+AfPeG93+U+Rj+z3Z878IzG
n73P9Kyrn91TzgA80ZPe793uZ+Tz03rYzxPf6V3va+Tz1HzYw1PfYfem9fAU
T3133Z/ewxM8+Z11jzWkdwQ7e/p76j5rSe8JduK9vLaH9LwVnrnmQ33ew+u7
SM9b5dlrPdTm/bu+i/S8VZ6/1kNd3r17+0jPW+kM6D3U4n0bs5f0vBXPg95D
nnds3G7S81Y9F3oPGd6p8TtKz5u+/6rSe4QE79CcPaXnrbCDytK7hFW8N/N2
lZ63yh4qS+8SZvLOzN9Zet4qe+ggvVMYzXuyZm/peSvtopP0bmEE78WavaXn
rbaPTtK7hSu8C+t3mJ636l46Su8YPuLcZ/aYnrfybjpK7xje47zndpmet/p+
ukrvGT7nnGf3mZ63+n66S+8bnO38TtPzdthRd+l98zzOc739pmfutKsdpPfO
3pzdmjtOz9xtX7tI7579OK9195yeOS3d27T0/unPGa2/7/TMFaRbW0X6OdCP
M9lj5+mZq0g3tor0c6AH57DX7tMzV5JubCXpZ0E9zl0N9prd5Y7Sz4EanLM6
7De7yx2lnwN5zlcd9lxrrztJPwP2PPvp++vIruvtdgfp3bPfmU/fW2d2XnO/
3aX3Tv8znr6vXXgGPXbdRXrH7HGm0/e1G8+i186rSu+UPc5x+p525Jn03X1a
en/sd3bT97Urz6X3/jWd1ZyvXjyf2jSbSpzDfjwr4Ait6Mlfk4EjNKIf/xsA
cIY29DKj8Z4lQN6svus8QA06D7CX2V3XeYA8jQfYm84D7E/nAfam8wD703mA
/Wk8wN50HmBvOg+wN50H2JvOA+xP5wH2p/MAe9N5gP3pPMDedB5gfxoPsD+d
B9ibxgPsTecB9qbxAPvTeYD9aTzA3jQeYH8aD7A/nQfYn84D7E/jAfan8QAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAADDP29vb3+xw3Zn38+V3p3YHcMarVn3+syMtm/XZ
Ufcz+rt1HujgTOc/atrVz666n9HfrfNrpP9+M3XtEb/jfPL5OXjvLNzt/JHv
vTLrKDOvlX62u1i9z/Sz1HmuWtHGkdeafQ8630eq8+n73n1m5p2DO806c5a+
9XsjOz9qF7P25Z0bf3Z3vd5TZ2beOUg0q3vn3/uzI585O9Ornx/db/o77pyJ
I997ZtYzPz9zHs+8I2fP+9F34Fuzn9nBlXs4+wyunoVRnz/6fo68n4qOnuU7
3zPi8+8937OOXvvVu/Tqe66elaPv45G9pL/j7nN89b1Hf+fIPB+166Pne3aO
o7935H28srsR93D2Gdw5C7M/P+N+qjpyRq6+u1eve/d8nD0LI7//6n0dPatH
Zk1/x+jz9mq2s4078vMr78OdM3bkz6/s5lvfdfUerj6DK2dh1J/POFNdjTq7
Zzu3Ypd32nun71fv69Vz+PzfX/1Ole84e4+vfv7RTld3/uq9Hb2nM22++l1X
d3L2GVy5/5E7uDqzzp/7vtWtfO+aI74j0flv7fLV71T5jivn7cxejvx81u9d
nfPoDs62eeS9jN7lys8/vfMjmnXm/Ux2fsR3fPk97/3Zkc9cueZHu3z1O1W+
48p5PLOXIz9f0fmz5+3K/V5t3NnffTXb3We04vNnz+XVn1V1t7UjuvlqnrO/
M+K7P/pMovNfnq8rva30HVfP5KtZPtrZyt+78n5c+cyMzp+9h6u7XPn5j87p
me8c1bqVRjb+bJePzJO4h/euv+IaR/f20bk98k4mv+PO+Tzzzo1u09Wze/V6
H33uyO+duZcr9zDq3mZ+/uwzufqzjo626EyzXn32W2fs7PVnNnjFNY6e1at9
rfIdd87jR3925Oejf+9O6668P0eve2bm1btc+fmzZ+fqzzo6ev6unNNX5+XL
Roza693vSnf+rzN8/u9nf17pO97b75mfz2jTkTM6YvYrZ/Jqrzp2/mhnj35e
56/t++hnvvXZ93b+3vOr0PmPvnfFNa+e6YrfceZ3rryrr35+5Bxe6fyo7ztz
P6OuPeserpz/O3s+e6bOzvyUzn/53I/c99HGnz1jI+5n1Hce2dOsZ3LmHtPf
cfT3juzvTmNeXWPG7EffoyO/M+tezs5z5xmcOWNH3qOrnx/5s47Ons+jz+vK
WT9ynav3M+L7zt7b3eve+Xn6O66+33e+6+zZHNWmV7975byf6dzVezl7/Vmd
f29Hoz6v81/v7Oo+77RwVCNndPbKeRo9B8BdI3r0UdeONr1K5+98l84D1Yzs
0d2/D6ra+dG7AAAAAAAAAAAAAAAAAADo5s9t1hZO
         "], {{0, 416}, {378, 0}}, {
         0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{378, 416},
       PlotRange->{{0, 378}, {0, 416}}], ",", 
      RowBox[{"{", 
       RowBox[{"300", ",", "300"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "28"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.707241166568231*^9, 3.7072412161857347`*^9}, 
   3.707241344236569*^9, {3.707241451766868*^9, 3.707241505753183*^9}, 
   3.707241900486822*^9, 3.707241947461892*^9, {3.707241989540535*^9, 
   3.707242004216881*^9}, 3.707242043798007*^9, 3.7072420799923697`*^9, {
   3.7072421366154737`*^9, 3.707242172850801*^9}, 3.707242207522346*^9, 
   3.7072422707689857`*^9, 3.707242697515531*^9, 3.707242729003448*^9, 
   3.707242767656775*^9},ExpressionUUID->"447c71ff-976e-4ad8-a1c2-\
43c68daef912"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwUM6IADAFipHDrIWAkWCsueQYcEmBxrFJQQVxmMsAwNjkGmBymtQg5LC5h
QJiLoYcBt51QcQYGdAuhRmJ1Itg8rMHCAKNwhAzEMhwxhXAjhiwD3G9YQwVm
MZqbGFApJFkEgxFJkgFZBDMsMSzFJYlHjngAAN4rDxk=
    "], {{0, 28}, {28, 0}}, {0, 
    1},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Bit", ColorSpace -> Automatic, Interleaving -> None],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{28, 28},
  PlotRange->{{0, 28}, {0, 28}}]], "Output",
 CellChangeTimes->{{3.707241187146576*^9, 3.7072412169169817`*^9}, {
   3.7072414779065943`*^9, 3.7072415063418293`*^9}, 3.707241902486928*^9, 
   3.707241948242556*^9, 3.707242006140821*^9, 3.707242045508469*^9, 
   3.707242082798183*^9, {3.7072421384506807`*^9, 3.707242173402788*^9}, 
   3.70724221203846*^9, 3.707242272165226*^9, 3.70724269893307*^9, 
   3.707242731104046*^9, 
   3.7072427702448673`*^9},ExpressionUUID->"86e6ba70-99f6-4bb3-bdd6-\
e6d1136f8ca3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trained", "[", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwUM6IADAFipHDrIWAkWCsueQYcEmBxrFJQQVxmMsAwNjkGmBymtQg5LC5h
QJiLoYcBt51QcQYGdAuhRmJ1Itg8rMHCAKNwhAzEMhwxhXAjhiwD3G9YQwVm
MZqbGFApJFkEgxFJkgFZBDMsMSzFJYlHjngAAN4rDxk=
     "], {{0, 28}, {28, 0}}, {0, 
     1},
     ColorFunction->GrayLevel],
    BoxForm`ImageTag["Bit", ColorSpace -> Automatic, Interleaving -> None],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{28, 28},
   PlotRange->{{0, 28}, {0, 28}}], "]"}]], "Input",
 CellChangeTimes->{{3.707241197681608*^9, 3.707241220936*^9}, 
   3.707241509866254*^9, 3.707241907186351*^9, {3.7072419503367577`*^9, 
   3.70724195792168*^9}, 3.707242010864616*^9, 3.707242050069614*^9, 
   3.707242088393786*^9, 3.707242178436637*^9, 3.707242215810869*^9, {
   3.707242276330276*^9, 3.707242332629404*^9}, {3.707242703150082*^9, 
   3.707242735593605*^9}, 
   3.707242774518691*^9},ExpressionUUID->"baa10224-1120-4d3b-838d-\
e602911cc9d3"],

Cell[BoxData["\<\"\:4e58\"\>"], "Output",
 CellChangeTimes->{{3.707241204681074*^9, 3.707241221495929*^9}, 
   3.7072415105575933`*^9, 3.7072419094878798`*^9, 3.707241959674575*^9, 
   3.707242012353836*^9, 3.707242051333452*^9, 3.707242090169141*^9, 
   3.7072421799602547`*^9, 3.70724221729144*^9, {3.7072422776909857`*^9, 
   3.707242333216593*^9}, {3.7072427046441097`*^9, 3.707242737826788*^9}, 
   3.70724277598209*^9},ExpressionUUID->"71db4e0f-7deb-4760-81f2-\
e7856616cce4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImageResize", "[", 
  RowBox[{
   RowBox[{"Binarize", "[", 
    RowBox[{"ImageCrop", "[", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
e6VMXLEmoI4nMyad4V1ycbV6gFrSGVvFSjNI7xRwztN3O52vlVSfcfU6gPOe
vuPpXK2oy5yr1QCcM+uepzO1qm7zlvHQz4z7ns7S6rrNW85DL0/f+XSGdtBx
3nIe+khnHHMzs+OZgXvS+YacB56Vzjfm5ma38wL3pbONnjmf3lvguHS2MTc/
u5wTGCeda8zN0A5nBMZKZ1oqP9NnkfPALOlMS+Vm+kypHK1+PmC8dJ4lcjJ9
NjkPzJTOs0Q+ps8o54GZ0nmWyJz0ebvnfHpngXPSeZbImvTZ5TwwUzrPumZd
x7pH1Z7eWeCcdKbJ+bkZ2uGMwFjpXJPxc3O0+vmA8dKZJuPlPPCsdKbNzI50
jRV6Uf18wDM65lWlOjv1rMMZgfE651aVOrv0q8MZgfE651aVOrv0qss5gbG6
Z1eFOrv0qdNZgXFWyK90nV161O28wBirZFiqxk796Xhm4L6VcixRY6fedDwz
cN9qWTa7xk696Xhm/n926TPQ12pZNrvGTr3peGb+fHbpc9DTalk2s75u/el2
Xv5yZunz0NNKOTa7vm496nRW3p9Z+jz0tEqGJerr1qNOZ+X9maXPQ0+rZFii
vm496nRW3p9Z+jz0tEqGJerr1p9u5+X9maXPRD8r5djs+rr1puOZd2cOjLBa
ls2sr1Nfup57d+bAKKtl2oy6uvWk67l3Zw6MslqmzairWz+6n39XZsAock3O
Vz//rsyAUeTa2hk/sh/pXd2NGTDKitmWzvRKvRjZj/Su7sYcGGW1bEvneZU+
PNGTdB07MQdGWi3f0plepQ9P9SRdyy7MgJFWyrd0nlfowdN9SdeyCzNgtFUy
Lp3p6fpn9CVdyw7MgCeskHPpTK98F1eta1XmwBO6Z10606vfwdXrW40Z8IRO
eZfO8I53cPX6VmIGPKVq3qXzepUcXL2+lZgDT6mQd+lsXj0HV69vFebAk2bm
XTqH5fyaNXZnDjwtnY2rSM9x1nzT9azIHHhaOh9XkZ7jrPmm61mNWTBDOh9X
kZ7jrBmna1mNeTBDOh9XkJ7h7Bmn61mJeTBDOiNXkJ5hYs7pelZhFsyQzsgV
pGeYmnO6pu7MgVnSGdlden7pWadr6swMmCWdk92l51dh1um6ujIDZknnZGfp
2VWadbq2jp6cgRnx2T6wZrbpSR12lh32rbv03CrPOl1ndendNaP9pPeto/TM
usw6XW9F6d01oz2l96yb9Lw6zjtdcxXp3TWffaV3rIv0nFaYd7r2XftuNqT3
q7L0bFaeeboHO/XaPEjvVyXpWew683Q/dujxrnOg7z7azT3mnu7Rij1dqd+s
vZ/pfq0gPcMVdiNda+fekZHeMftn5mSl95E97ny6BztKz5w60rvIenc+XSvz
Z05t6V1knTufrpHM3KkvvYf0vu/pusjNnj7SO0jv+56uidzs6SO9f/S+6+ma
yM2eHtK7R/+7nq6J7PypLb1zrHHX0/WQnT91pXeNNe55uhay86eu9J6RZ5dI
5xDPSu8XeXaJkXtAPendIs8uMXoXqCO9U9Rhlxi1C9SQ3iNqslPc3QPy0vtD
fXaLO3uAfKcH+8WIvUC+U5v94s5uIN/pw37xkXTO7Sw9e2Af6bzbTXrewN7S
Gbiy9GwBvpXOxFWk5whwRDoru0nPC+CudI5WkZ4DwEzpzJXtAHOl81jGA+Sk
81q+A9QgvwH4I/kOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAMM/b29ufrPDeJ+v5/tmp3gGc8Sqrvv3sSJY99d1R9Yx+
tpwHOjiT859l2tXvzqpn9LPl/Bzp/95MvXvEb+wn3+7BR7twN+ePPPfKWUd5
8l3p2a5idj/Ts5TzXDUjG0e+6+ka5HwfqZxP1736mXluD+5k1pldeu93I3N+
VC+e6pc7N353V33frmfmuT1IZFb3nP/oz4585+yZXn1+tL/pZ9zZiSPPPXPW
M5+f2cczd+Tsvh+9A++d/UwPrtRwdgZXd2HU94/ez5H1VHR0l+88Z8T3P5rv
WUff/eouvXrO1V05eh+P9CX9jLtzfPXco785cp7Psuuz+Z49x9HfHbmPV3o3
ooazM7izC09//4l6qjqyI1fv7tX33t2Ps7sw8vlX6zq6q0fOmn7G6H17dbaz
GXfk8yv34c6OHfnzK71571lXa7g6gyu7MOrPn9iprkbt7tmcm9HLO9l7J9+v
1vVqDt/+89VvqjzjbI2vPv+sp7Nz/mptR2s6k81Xn3W1J2dncKX+kT24emY5
f+55s7Pyo3eOeEYi59/r5avfVHnGlX0705cjnz/1u6vnPNqDs9k8spbRvZz5
/d1zfkRmnbmfyZwf8Yzvn/PRnx35zpV3ftbLV7+p8owr+3imL0c+n5HzZ/ft
Sr1XM+7sb1+d7e6MZnz/7F5e/ayqu1k7Ijdfnefsb0Y8+7PvJHL++/26kreV
nnF1J1+d5bOezfzdlftx5TtP5PzZGq72cub3P9vTM88clXUzjcz4s7l85DyJ
Gj56/4x3HO3bZ3t75E4mn3FnP8/cudHZdHV3r77vs+8d+d2ZWq7UMKq2J79/
diZXP+voaBadyaxX331vx86+/8kMnvGOo7t6NV+rPOPOPn72Z0c+H/27O1l3
5f4cfe+ZM8/u5czvn92dq591dHT/ruzpq335PiNG9fXus9I5//UM3/7z7OeV
nvFRf898/kQ2HdnREWe/spNX86pjzh/N2aPfl/PX+n30O+9996OefzS/Cjn/
2XNnvPPqTld8xpnfXLmrrz4/sodXcn7U887UM+rdT9VwZf/v9PnsTp098y45
//3cj9R9NOPP7tiIekY980ifnprJmRrTzzj6uyP9u5Mxr97xxNmP3qMjv3mq
lrPnuTODMzt25B5d/f7Izzo6u59H53Vl14+852o9I553tra7773zefoZV+/3
nWed3c1R2fTqt1f2/UzOXa3l7PufyvmPejTq+3L+L3t2tZ93snBURj6Rs1f2
afQ5AO4akUef5drRTK+S83eeJeeBakbm0d3/Dqqa86N7AQAAAAAAAAAAAAAA
AADQzf8BBTMvIw==
         "], {{0, 416}, {378, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{378, 416},
       PlotRange->{{0, 378}, {0, 416}}], ",", 
      RowBox[{"{", 
       RowBox[{"300", ",", "300"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "28"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.707246391356524*^9, 3.707246438873364*^9}, {
  3.7072465297982483`*^9, 3.707246536750345*^9}, {3.7072536785872183`*^9, 
  3.7072536914134417`*^9}},ExpressionUUID->"e2fb5ecd-8c80-4d4d-a642-\
ea06a0822988"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwUM8IBhI0kgCwFlmTAIskAl0OXZGDAKYdiK6ahMCHs9pElx4BfDuxQtNBA
BmjORIhj8QJKUJHsFGjgYIYmI1JwYnU/WBKLHCMs/nDKMWKJdogGNPvgDod7
Hr8ckhi6p1BCF0k/ho+wAJwSVAAAgmAO2Q==
    "], {{0, 28}, {28, 0}}, {0, 1},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Bit", ColorSpace -> Automatic, Interleaving -> None],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{28, 28},
  PlotRange->{{0, 28}, {0, 28}}]], "Output",
 CellChangeTimes->{{3.707246433358879*^9, 3.7072464396998*^9}, 
   3.7072465396245813`*^9, 
   3.707253725690559*^9},ExpressionUUID->"9a9bb9b3-6b9a-4440-8b9b-\
a7020b2c8f7c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trained", "[", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwUM8IBhI0kgCwFlmTAIskAl0OXZGDAKYdiK6ahMCHs9pElx4BfDuxQtNBA
BmjORIhj8QJKUJHsFGjgYIYmI1JwYnU/WBKLHCMs/nDKMWKJdogGNPvgDod7
Hr8ckhi6p1BCF0k/ho+wAJwSVAAAgmAO2Q==
     "], {{0, 28}, {28, 0}}, {0, 1},
     ColorFunction->GrayLevel],
    BoxForm`ImageTag["Bit", ColorSpace -> Automatic, Interleaving -> None],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{28, 28},
   PlotRange->{{0, 28}, {0, 28}}], "]"}]], "Input",
 CellChangeTimes->{{3.707254029737957*^9, 
  3.707254035499577*^9}},ExpressionUUID->"02f5c293-0717-446d-a4b8-\
466ca2f2e805"],

Cell[BoxData["\<\"\:4e71\"\>"], "Output",
 CellChangeTimes->{
  3.7072540384558573`*^9},ExpressionUUID->"8d45bfdb-3f40-49fb-a715-\
fa55cabbb77a"]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{122, Automatic}, {Automatic, 4}},
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 18, \
2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 280, 7, 32, "Input", "ExpressionUUID" -> \
"ba0b4e08-0806-43f8-ae20-1c0514d07db9"],
Cell[863, 31, 300, 7, 41, "Output", "ExpressionUUID" -> \
"2b731dba-b46f-4adf-8a95-8b74bbd328d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1200, 43, 2386, 59, 348, "Input", "ExpressionUUID" -> \
"4eecd6d3-d1c7-4658-8456-0a32c71246bb"],
Cell[3589, 104, 34705, 674, 254, "Output", "ExpressionUUID" -> \
"4b0d9582-1096-45af-a7d9-8d0e1b8d92e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38331, 783, 225, 5, 32, "Input", "ExpressionUUID" -> \
"cb8bb732-b6df-4c25-bfc0-bada919e55ba"],
Cell[38559, 790, 34084, 660, 241, "Output", "ExpressionUUID" -> \
"b8925609-cbc5-41b0-b9b1-e5fd194c84ae"]
}, Open  ]],
Cell[72658, 1453, 1849, 49, 117, "Input", "ExpressionUUID" -> \
"0dba442a-a2d1-4b92-a5d1-dd0f68ae2294"],
Cell[CellGroupData[{
Cell[74532, 1506, 343, 8, 32, "Input", "ExpressionUUID" -> \
"7ba4ec0d-055a-4dde-b530-8dc6a0d1382b"],
Cell[74878, 1516, 34106, 660, 241, "Output", "ExpressionUUID" -> \
"cb649f95-dc32-4913-be6f-27b2f89bb62a"]
}, Open  ]],
Cell[108999, 2179, 2263, 55, 138, "Input", "ExpressionUUID" -> \
"cc8a114c-1330-4cc0-8cf6-3a882407b568"],
Cell[CellGroupData[{
Cell[111287, 2238, 303, 7, 32, "Input", "ExpressionUUID" -> \
"8c4ba419-6a19-4c21-bd4e-c880f3ea5920"],
Cell[111593, 2247, 223010, 4115, 1283, 52876, 1326, "CachedBoxData", \
"BoxData", "Output", "ExpressionUUID" -> \
"6b71c44b-4fa1-469f-a7c9-cb768bc26f31"]
}, Open  ]],
Cell[CellGroupData[{
Cell[334640, 6367, 265, 6, 32, "Input", "ExpressionUUID" -> \
"312b1347-9d6e-4f17-b4ad-879469313165"],
Cell[334908, 6375, 308, 5, 32, "Output", "ExpressionUUID" -> \
"4002f56f-1874-4be6-96a5-053b0cbe44b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[335253, 6385, 278, 7, 32, "Input", "ExpressionUUID" -> \
"81c0677a-74c6-4d99-9536-542f02a68d80"],
Cell[335534, 6394, 136082, 2462, 790, 26390, 663, "CachedBoxData", "BoxData", \
"Output", "ExpressionUUID" -> "4c684c0f-09b2-4e76-af0a-2a4a0db86626"]
}, Open  ]],
Cell[CellGroupData[{
Cell[471653, 8861, 193, 3, 32, "Input", "ExpressionUUID" -> \
"efad110e-312e-4673-ac04-7474910b089f"],
Cell[471849, 8866, 172, 3, 32, "Output", "ExpressionUUID" -> \
"faa312d6-bfc9-4089-bf9f-baff9339b592"]
}, Open  ]],
Cell[CellGroupData[{
Cell[472058, 8874, 2528, 48, 45, "Input", "ExpressionUUID" -> \
"b57a97c8-3e38-4e5b-9a66-77a7a9768e39"],
Cell[474589, 8924, 2088, 39, 43, "Output", "ExpressionUUID" -> \
"5d28956f-8a3f-40c4-abae-79914f9467b1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[476714, 8968, 2526, 48, 45, "Input", "ExpressionUUID" -> \
"59ae70cc-72f3-4ba0-a74a-68131b0c3549"],
Cell[479243, 9018, 2164, 40, 43, "Output", "ExpressionUUID" -> \
"ddb4b288-d948-4c79-b4f4-9064e3e7b504"]
}, Open  ]],
Cell[CellGroupData[{
Cell[481444, 9063, 2570, 49, 45, "Input", "ExpressionUUID" -> \
"76ae8b86-d260-4f91-ac82-5fd1f460c7d1"],
Cell[484017, 9114, 2277, 43, 43, "Output", "ExpressionUUID" -> \
"9edfda1b-bb76-479a-b2f8-b9011df3382c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[486331, 9162, 6800, 120, 116, "Input", "ExpressionUUID" -> \
"447c71ff-976e-4ad8-a1c2-43c68daef912"],
Cell[493134, 9284, 1038, 22, 43, "Output", "ExpressionUUID" -> \
"86e6ba70-99f6-4bb3-bdd6-e6d1136f8ca3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[494209, 9311, 1072, 23, 45, "Input", "ExpressionUUID" -> \
"baa10224-1120-4d3b-838d-e602911cc9d3"],
Cell[495284, 9336, 482, 7, 32, "Output", "ExpressionUUID" -> \
"71db4e0f-7deb-4760-81f2-e7856616cce4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[495803, 9348, 6541, 116, 116, "Input", "ExpressionUUID" -> \
"e2fb5ecd-8c80-4d4d-a642-ea06a0822988"],
Cell[502347, 9466, 733, 17, 43, "Output", "ExpressionUUID" -> \
"9a9bb9b3-6b9a-4440-8b9b-a7020b2c8f7c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[503117, 9488, 725, 17, 45, "Input", "ExpressionUUID" -> \
"02f5c293-0717-446d-a4b8-466ca2f2e805"],
Cell[503845, 9507, 145, 3, 32, "Output", "ExpressionUUID" -> \
"8d45bfdb-3f40-49fb-a715-fa55cabbb77a"]
}, Open  ]]
}
]
*)

